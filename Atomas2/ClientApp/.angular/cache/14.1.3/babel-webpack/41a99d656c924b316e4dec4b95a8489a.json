{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { AnimationFrame } from '@material/animation/animationframe';\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nvar AnimationKeys;\n\n(function (AnimationKeys) {\n  AnimationKeys[\"POLL_SCROLL_POS\"] = \"poll_scroll_position\";\n  AnimationKeys[\"POLL_LAYOUT_CHANGE\"] = \"poll_layout_change\";\n})(AnimationKeys || (AnimationKeys = {}));\n\nvar MDCDialogFoundation =\n/** @class */\nfunction (_super) {\n  __extends(MDCDialogFoundation, _super);\n\n  function MDCDialogFoundation(adapter) {\n    var _this = _super.call(this, __assign(__assign({}, MDCDialogFoundation.defaultAdapter), adapter)) || this;\n\n    _this.dialogOpen = false;\n    _this.isFullscreen = false;\n    _this.animationFrame = 0;\n    _this.animationTimer = 0;\n    _this.escapeKeyAction = strings.CLOSE_ACTION;\n    _this.scrimClickAction = strings.CLOSE_ACTION;\n    _this.autoStackButtons = true;\n    _this.areButtonsStacked = false;\n    _this.suppressDefaultPressSelector = strings.SUPPRESS_DEFAULT_PRESS_SELECTOR;\n    _this.animFrame = new AnimationFrame();\n\n    _this.contentScrollHandler = function () {\n      _this.handleScrollEvent();\n    };\n\n    _this.windowResizeHandler = function () {\n      _this.layout();\n    };\n\n    _this.windowOrientationChangeHandler = function () {\n      _this.layout();\n    };\n\n    return _this;\n  }\n\n  Object.defineProperty(MDCDialogFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialogFoundation, \"strings\", {\n    get: function () {\n      return strings;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialogFoundation, \"numbers\", {\n    get: function () {\n      return numbers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialogFoundation, \"defaultAdapter\", {\n    get: function () {\n      return {\n        addBodyClass: function () {\n          return undefined;\n        },\n        addClass: function () {\n          return undefined;\n        },\n        areButtonsStacked: function () {\n          return false;\n        },\n        clickDefaultButton: function () {\n          return undefined;\n        },\n        eventTargetMatches: function () {\n          return false;\n        },\n        getActionFromEvent: function () {\n          return '';\n        },\n        getInitialFocusEl: function () {\n          return null;\n        },\n        hasClass: function () {\n          return false;\n        },\n        isContentScrollable: function () {\n          return false;\n        },\n        notifyClosed: function () {\n          return undefined;\n        },\n        notifyClosing: function () {\n          return undefined;\n        },\n        notifyOpened: function () {\n          return undefined;\n        },\n        notifyOpening: function () {\n          return undefined;\n        },\n        releaseFocus: function () {\n          return undefined;\n        },\n        removeBodyClass: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        reverseButtons: function () {\n          return undefined;\n        },\n        trapFocus: function () {\n          return undefined;\n        },\n        registerContentEventHandler: function () {\n          return undefined;\n        },\n        deregisterContentEventHandler: function () {\n          return undefined;\n        },\n        isScrollableContentAtTop: function () {\n          return false;\n        },\n        isScrollableContentAtBottom: function () {\n          return false;\n        },\n        registerWindowEventHandler: function () {\n          return undefined;\n        },\n        deregisterWindowEventHandler: function () {\n          return undefined;\n        }\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MDCDialogFoundation.prototype.init = function () {\n    if (this.adapter.hasClass(cssClasses.STACKED)) {\n      this.setAutoStackButtons(false);\n    }\n\n    this.isFullscreen = this.adapter.hasClass(cssClasses.FULLSCREEN);\n  };\n\n  MDCDialogFoundation.prototype.destroy = function () {\n    if (this.animationTimer) {\n      clearTimeout(this.animationTimer);\n      this.handleAnimationTimerEnd();\n    }\n\n    if (this.isFullscreen) {\n      this.adapter.deregisterContentEventHandler('scroll', this.contentScrollHandler);\n    }\n\n    this.animFrame.cancelAll();\n    this.adapter.deregisterWindowEventHandler('resize', this.windowResizeHandler);\n    this.adapter.deregisterWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n  };\n\n  MDCDialogFoundation.prototype.open = function (dialogOptions) {\n    var _this = this;\n\n    this.dialogOpen = true;\n    this.adapter.notifyOpening();\n    this.adapter.addClass(cssClasses.OPENING);\n\n    if (this.isFullscreen) {\n      // A scroll event listener is registered even if the dialog is not\n      // scrollable on open, since the window resize event, or orientation\n      // change may make the dialog scrollable after it is opened.\n      this.adapter.registerContentEventHandler('scroll', this.contentScrollHandler);\n    }\n\n    if (dialogOptions && dialogOptions.isAboveFullscreenDialog) {\n      this.adapter.addClass(cssClasses.SCRIM_HIDDEN);\n    }\n\n    this.adapter.registerWindowEventHandler('resize', this.windowResizeHandler);\n    this.adapter.registerWindowEventHandler('orientationchange', this.windowOrientationChangeHandler); // Wait a frame once display is no longer \"none\", to establish basis for\n    // animation\n\n    this.runNextAnimationFrame(function () {\n      _this.adapter.addClass(cssClasses.OPEN);\n\n      if (!dialogOptions || !dialogOptions.isScrimless) {\n        _this.adapter.addBodyClass(cssClasses.SCROLL_LOCK);\n      }\n\n      _this.layout();\n\n      _this.animationTimer = setTimeout(function () {\n        _this.handleAnimationTimerEnd();\n\n        _this.adapter.trapFocus(_this.adapter.getInitialFocusEl());\n\n        _this.adapter.notifyOpened();\n      }, numbers.DIALOG_ANIMATION_OPEN_TIME_MS);\n    });\n  };\n\n  MDCDialogFoundation.prototype.close = function (action) {\n    var _this = this;\n\n    if (action === void 0) {\n      action = '';\n    }\n\n    if (!this.dialogOpen) {\n      // Avoid redundant close calls (and events), e.g. from keydown on elements\n      // that inherently emit click\n      return;\n    }\n\n    this.dialogOpen = false;\n    this.adapter.notifyClosing(action);\n    this.adapter.addClass(cssClasses.CLOSING);\n    this.adapter.removeClass(cssClasses.OPEN);\n    this.adapter.removeBodyClass(cssClasses.SCROLL_LOCK);\n\n    if (this.isFullscreen) {\n      this.adapter.deregisterContentEventHandler('scroll', this.contentScrollHandler);\n    }\n\n    this.adapter.deregisterWindowEventHandler('resize', this.windowResizeHandler);\n    this.adapter.deregisterWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n    cancelAnimationFrame(this.animationFrame);\n    this.animationFrame = 0;\n    clearTimeout(this.animationTimer);\n    this.animationTimer = setTimeout(function () {\n      _this.adapter.releaseFocus();\n\n      _this.handleAnimationTimerEnd();\n\n      _this.adapter.notifyClosed(action);\n    }, numbers.DIALOG_ANIMATION_CLOSE_TIME_MS);\n  };\n  /**\n   * Used only in instances of showing a secondary dialog over a full-screen\n   * dialog. Shows the \"surface scrim\" displayed over the full-screen dialog.\n   */\n\n\n  MDCDialogFoundation.prototype.showSurfaceScrim = function () {\n    var _this = this;\n\n    this.adapter.addClass(cssClasses.SURFACE_SCRIM_SHOWING);\n    this.runNextAnimationFrame(function () {\n      _this.adapter.addClass(cssClasses.SURFACE_SCRIM_SHOWN);\n    });\n  };\n  /**\n   * Used only in instances of showing a secondary dialog over a full-screen\n   * dialog. Hides the \"surface scrim\" displayed over the full-screen dialog.\n   */\n\n\n  MDCDialogFoundation.prototype.hideSurfaceScrim = function () {\n    this.adapter.removeClass(cssClasses.SURFACE_SCRIM_SHOWN);\n    this.adapter.addClass(cssClasses.SURFACE_SCRIM_HIDING);\n  };\n  /**\n   * Handles `transitionend` event triggered when surface scrim animation is\n   * finished.\n   */\n\n\n  MDCDialogFoundation.prototype.handleSurfaceScrimTransitionEnd = function () {\n    this.adapter.removeClass(cssClasses.SURFACE_SCRIM_HIDING);\n    this.adapter.removeClass(cssClasses.SURFACE_SCRIM_SHOWING);\n  };\n\n  MDCDialogFoundation.prototype.isOpen = function () {\n    return this.dialogOpen;\n  };\n\n  MDCDialogFoundation.prototype.getEscapeKeyAction = function () {\n    return this.escapeKeyAction;\n  };\n\n  MDCDialogFoundation.prototype.setEscapeKeyAction = function (action) {\n    this.escapeKeyAction = action;\n  };\n\n  MDCDialogFoundation.prototype.getScrimClickAction = function () {\n    return this.scrimClickAction;\n  };\n\n  MDCDialogFoundation.prototype.setScrimClickAction = function (action) {\n    this.scrimClickAction = action;\n  };\n\n  MDCDialogFoundation.prototype.getAutoStackButtons = function () {\n    return this.autoStackButtons;\n  };\n\n  MDCDialogFoundation.prototype.setAutoStackButtons = function (autoStack) {\n    this.autoStackButtons = autoStack;\n  };\n\n  MDCDialogFoundation.prototype.getSuppressDefaultPressSelector = function () {\n    return this.suppressDefaultPressSelector;\n  };\n\n  MDCDialogFoundation.prototype.setSuppressDefaultPressSelector = function (selector) {\n    this.suppressDefaultPressSelector = selector;\n  };\n\n  MDCDialogFoundation.prototype.layout = function () {\n    var _this = this;\n\n    this.animFrame.request(AnimationKeys.POLL_LAYOUT_CHANGE, function () {\n      _this.layoutInternal();\n    });\n  };\n  /** Handles click on the dialog root element. */\n\n\n  MDCDialogFoundation.prototype.handleClick = function (evt) {\n    var isScrim = this.adapter.eventTargetMatches(evt.target, strings.SCRIM_SELECTOR); // Check for scrim click first since it doesn't require querying ancestors.\n\n    if (isScrim && this.scrimClickAction !== '') {\n      this.close(this.scrimClickAction);\n    } else {\n      var action = this.adapter.getActionFromEvent(evt);\n\n      if (action) {\n        this.close(action);\n      }\n    }\n  };\n  /** Handles keydown on the dialog root element. */\n\n\n  MDCDialogFoundation.prototype.handleKeydown = function (evt) {\n    var isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n\n    if (!isEnter) {\n      return;\n    }\n\n    var action = this.adapter.getActionFromEvent(evt);\n\n    if (action) {\n      // Action button callback is handled in `handleClick`,\n      // since space/enter keydowns on buttons trigger click events.\n      return;\n    } // `composedPath` is used here, when available, to account for use cases\n    // where a target meant to suppress the default press behaviour\n    // may exist in a shadow root.\n    // For example, a textarea inside a web component:\n    // <mwc-dialog>\n    //   <horizontal-layout>\n    //     #shadow-root (open)\n    //       <mwc-textarea>\n    //         #shadow-root (open)\n    //           <textarea></textarea>\n    //       </mwc-textarea>\n    //   </horizontal-layout>\n    // </mwc-dialog>\n\n\n    var target = evt.composedPath ? evt.composedPath()[0] : evt.target;\n    var isDefault = this.suppressDefaultPressSelector ? !this.adapter.eventTargetMatches(target, this.suppressDefaultPressSelector) : true;\n\n    if (isEnter && isDefault) {\n      this.adapter.clickDefaultButton();\n    }\n  };\n  /** Handles keydown on the document. */\n\n\n  MDCDialogFoundation.prototype.handleDocumentKeydown = function (evt) {\n    var isEscape = evt.key === 'Escape' || evt.keyCode === 27;\n\n    if (isEscape && this.escapeKeyAction !== '') {\n      this.close(this.escapeKeyAction);\n    }\n  };\n  /**\n   * Handles scroll event on the dialog's content element -- showing a scroll\n   * divider on the header or footer based on the scroll position. This handler\n   * should only be registered on full-screen dialogs with scrollable content.\n   */\n\n\n  MDCDialogFoundation.prototype.handleScrollEvent = function () {\n    var _this = this; // Since scroll events can fire at a high rate, we throttle these events by\n    // using requestAnimationFrame.\n\n\n    this.animFrame.request(AnimationKeys.POLL_SCROLL_POS, function () {\n      _this.toggleScrollDividerHeader();\n\n      _this.toggleScrollDividerFooter();\n    });\n  };\n\n  MDCDialogFoundation.prototype.layoutInternal = function () {\n    if (this.autoStackButtons) {\n      this.detectStackedButtons();\n    }\n\n    this.toggleScrollableClasses();\n  };\n\n  MDCDialogFoundation.prototype.handleAnimationTimerEnd = function () {\n    this.animationTimer = 0;\n    this.adapter.removeClass(cssClasses.OPENING);\n    this.adapter.removeClass(cssClasses.CLOSING);\n  };\n  /**\n   * Runs the given logic on the next animation frame, using setTimeout to\n   * factor in Firefox reflow behavior.\n   */\n\n\n  MDCDialogFoundation.prototype.runNextAnimationFrame = function (callback) {\n    var _this = this;\n\n    cancelAnimationFrame(this.animationFrame);\n    this.animationFrame = requestAnimationFrame(function () {\n      _this.animationFrame = 0;\n      clearTimeout(_this.animationTimer);\n      _this.animationTimer = setTimeout(callback, 0);\n    });\n  };\n\n  MDCDialogFoundation.prototype.detectStackedButtons = function () {\n    // Remove the class first to let us measure the buttons' natural positions.\n    this.adapter.removeClass(cssClasses.STACKED);\n    var areButtonsStacked = this.adapter.areButtonsStacked();\n\n    if (areButtonsStacked) {\n      this.adapter.addClass(cssClasses.STACKED);\n    }\n\n    if (areButtonsStacked !== this.areButtonsStacked) {\n      this.adapter.reverseButtons();\n      this.areButtonsStacked = areButtonsStacked;\n    }\n  };\n\n  MDCDialogFoundation.prototype.toggleScrollableClasses = function () {\n    // Remove the class first to let us measure the natural height of the\n    // content.\n    this.adapter.removeClass(cssClasses.SCROLLABLE);\n\n    if (this.adapter.isContentScrollable()) {\n      this.adapter.addClass(cssClasses.SCROLLABLE);\n\n      if (this.isFullscreen) {\n        // If dialog is full-screen and scrollable, check if a scroll divider\n        // should be shown.\n        this.toggleScrollDividerHeader();\n        this.toggleScrollDividerFooter();\n      }\n    }\n  };\n\n  MDCDialogFoundation.prototype.toggleScrollDividerHeader = function () {\n    if (!this.adapter.isScrollableContentAtTop()) {\n      this.adapter.addClass(cssClasses.SCROLL_DIVIDER_HEADER);\n    } else if (this.adapter.hasClass(cssClasses.SCROLL_DIVIDER_HEADER)) {\n      this.adapter.removeClass(cssClasses.SCROLL_DIVIDER_HEADER);\n    }\n  };\n\n  MDCDialogFoundation.prototype.toggleScrollDividerFooter = function () {\n    if (!this.adapter.isScrollableContentAtBottom()) {\n      this.adapter.addClass(cssClasses.SCROLL_DIVIDER_FOOTER);\n    } else if (this.adapter.hasClass(cssClasses.SCROLL_DIVIDER_FOOTER)) {\n      this.adapter.removeClass(cssClasses.SCROLL_DIVIDER_FOOTER);\n    }\n  };\n\n  return MDCDialogFoundation;\n}(MDCFoundation);\n\nexport { MDCDialogFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCDialogFoundation;","map":{"version":3,"names":["__assign","__extends","AnimationFrame","MDCFoundation","cssClasses","numbers","strings","AnimationKeys","MDCDialogFoundation","_super","adapter","_this","call","defaultAdapter","dialogOpen","isFullscreen","animationFrame","animationTimer","escapeKeyAction","CLOSE_ACTION","scrimClickAction","autoStackButtons","areButtonsStacked","suppressDefaultPressSelector","SUPPRESS_DEFAULT_PRESS_SELECTOR","animFrame","contentScrollHandler","handleScrollEvent","windowResizeHandler","layout","windowOrientationChangeHandler","Object","defineProperty","get","enumerable","configurable","addBodyClass","undefined","addClass","clickDefaultButton","eventTargetMatches","getActionFromEvent","getInitialFocusEl","hasClass","isContentScrollable","notifyClosed","notifyClosing","notifyOpened","notifyOpening","releaseFocus","removeBodyClass","removeClass","reverseButtons","trapFocus","registerContentEventHandler","deregisterContentEventHandler","isScrollableContentAtTop","isScrollableContentAtBottom","registerWindowEventHandler","deregisterWindowEventHandler","prototype","init","STACKED","setAutoStackButtons","FULLSCREEN","destroy","clearTimeout","handleAnimationTimerEnd","cancelAll","open","dialogOptions","OPENING","isAboveFullscreenDialog","SCRIM_HIDDEN","runNextAnimationFrame","OPEN","isScrimless","SCROLL_LOCK","setTimeout","DIALOG_ANIMATION_OPEN_TIME_MS","close","action","CLOSING","cancelAnimationFrame","DIALOG_ANIMATION_CLOSE_TIME_MS","showSurfaceScrim","SURFACE_SCRIM_SHOWING","SURFACE_SCRIM_SHOWN","hideSurfaceScrim","SURFACE_SCRIM_HIDING","handleSurfaceScrimTransitionEnd","isOpen","getEscapeKeyAction","setEscapeKeyAction","getScrimClickAction","setScrimClickAction","getAutoStackButtons","autoStack","getSuppressDefaultPressSelector","setSuppressDefaultPressSelector","selector","request","POLL_LAYOUT_CHANGE","layoutInternal","handleClick","evt","isScrim","target","SCRIM_SELECTOR","handleKeydown","isEnter","key","keyCode","composedPath","isDefault","handleDocumentKeydown","isEscape","POLL_SCROLL_POS","toggleScrollDividerHeader","toggleScrollDividerFooter","detectStackedButtons","toggleScrollableClasses","callback","requestAnimationFrame","SCROLLABLE","SCROLL_DIVIDER_HEADER","SCROLL_DIVIDER_FOOTER"],"sources":["C:/Users/Henry/Desktop/New folder/Atomas2/node_modules/@material/dialog/foundation.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { AnimationFrame } from '@material/animation/animationframe';\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nvar AnimationKeys;\n(function (AnimationKeys) {\n    AnimationKeys[\"POLL_SCROLL_POS\"] = \"poll_scroll_position\";\n    AnimationKeys[\"POLL_LAYOUT_CHANGE\"] = \"poll_layout_change\";\n})(AnimationKeys || (AnimationKeys = {}));\nvar MDCDialogFoundation = /** @class */ (function (_super) {\n    __extends(MDCDialogFoundation, _super);\n    function MDCDialogFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCDialogFoundation.defaultAdapter), adapter)) || this;\n        _this.dialogOpen = false;\n        _this.isFullscreen = false;\n        _this.animationFrame = 0;\n        _this.animationTimer = 0;\n        _this.escapeKeyAction = strings.CLOSE_ACTION;\n        _this.scrimClickAction = strings.CLOSE_ACTION;\n        _this.autoStackButtons = true;\n        _this.areButtonsStacked = false;\n        _this.suppressDefaultPressSelector = strings.SUPPRESS_DEFAULT_PRESS_SELECTOR;\n        _this.animFrame = new AnimationFrame();\n        _this.contentScrollHandler = function () {\n            _this.handleScrollEvent();\n        };\n        _this.windowResizeHandler = function () {\n            _this.layout();\n        };\n        _this.windowOrientationChangeHandler = function () {\n            _this.layout();\n        };\n        return _this;\n    }\n    Object.defineProperty(MDCDialogFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialogFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialogFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialogFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addBodyClass: function () { return undefined; },\n                addClass: function () { return undefined; },\n                areButtonsStacked: function () { return false; },\n                clickDefaultButton: function () { return undefined; },\n                eventTargetMatches: function () { return false; },\n                getActionFromEvent: function () { return ''; },\n                getInitialFocusEl: function () { return null; },\n                hasClass: function () { return false; },\n                isContentScrollable: function () { return false; },\n                notifyClosed: function () { return undefined; },\n                notifyClosing: function () { return undefined; },\n                notifyOpened: function () { return undefined; },\n                notifyOpening: function () { return undefined; },\n                releaseFocus: function () { return undefined; },\n                removeBodyClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                reverseButtons: function () { return undefined; },\n                trapFocus: function () { return undefined; },\n                registerContentEventHandler: function () { return undefined; },\n                deregisterContentEventHandler: function () { return undefined; },\n                isScrollableContentAtTop: function () { return false; },\n                isScrollableContentAtBottom: function () { return false; },\n                registerWindowEventHandler: function () { return undefined; },\n                deregisterWindowEventHandler: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCDialogFoundation.prototype.init = function () {\n        if (this.adapter.hasClass(cssClasses.STACKED)) {\n            this.setAutoStackButtons(false);\n        }\n        this.isFullscreen = this.adapter.hasClass(cssClasses.FULLSCREEN);\n    };\n    MDCDialogFoundation.prototype.destroy = function () {\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.handleAnimationTimerEnd();\n        }\n        if (this.isFullscreen) {\n            this.adapter.deregisterContentEventHandler('scroll', this.contentScrollHandler);\n        }\n        this.animFrame.cancelAll();\n        this.adapter.deregisterWindowEventHandler('resize', this.windowResizeHandler);\n        this.adapter.deregisterWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n    };\n    MDCDialogFoundation.prototype.open = function (dialogOptions) {\n        var _this = this;\n        this.dialogOpen = true;\n        this.adapter.notifyOpening();\n        this.adapter.addClass(cssClasses.OPENING);\n        if (this.isFullscreen) {\n            // A scroll event listener is registered even if the dialog is not\n            // scrollable on open, since the window resize event, or orientation\n            // change may make the dialog scrollable after it is opened.\n            this.adapter.registerContentEventHandler('scroll', this.contentScrollHandler);\n        }\n        if (dialogOptions && dialogOptions.isAboveFullscreenDialog) {\n            this.adapter.addClass(cssClasses.SCRIM_HIDDEN);\n        }\n        this.adapter.registerWindowEventHandler('resize', this.windowResizeHandler);\n        this.adapter.registerWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n        // Wait a frame once display is no longer \"none\", to establish basis for\n        // animation\n        this.runNextAnimationFrame(function () {\n            _this.adapter.addClass(cssClasses.OPEN);\n            if (!dialogOptions || !dialogOptions.isScrimless) {\n                _this.adapter.addBodyClass(cssClasses.SCROLL_LOCK);\n            }\n            _this.layout();\n            _this.animationTimer = setTimeout(function () {\n                _this.handleAnimationTimerEnd();\n                _this.adapter.trapFocus(_this.adapter.getInitialFocusEl());\n                _this.adapter.notifyOpened();\n            }, numbers.DIALOG_ANIMATION_OPEN_TIME_MS);\n        });\n    };\n    MDCDialogFoundation.prototype.close = function (action) {\n        var _this = this;\n        if (action === void 0) { action = ''; }\n        if (!this.dialogOpen) {\n            // Avoid redundant close calls (and events), e.g. from keydown on elements\n            // that inherently emit click\n            return;\n        }\n        this.dialogOpen = false;\n        this.adapter.notifyClosing(action);\n        this.adapter.addClass(cssClasses.CLOSING);\n        this.adapter.removeClass(cssClasses.OPEN);\n        this.adapter.removeBodyClass(cssClasses.SCROLL_LOCK);\n        if (this.isFullscreen) {\n            this.adapter.deregisterContentEventHandler('scroll', this.contentScrollHandler);\n        }\n        this.adapter.deregisterWindowEventHandler('resize', this.windowResizeHandler);\n        this.adapter.deregisterWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n        cancelAnimationFrame(this.animationFrame);\n        this.animationFrame = 0;\n        clearTimeout(this.animationTimer);\n        this.animationTimer = setTimeout(function () {\n            _this.adapter.releaseFocus();\n            _this.handleAnimationTimerEnd();\n            _this.adapter.notifyClosed(action);\n        }, numbers.DIALOG_ANIMATION_CLOSE_TIME_MS);\n    };\n    /**\n     * Used only in instances of showing a secondary dialog over a full-screen\n     * dialog. Shows the \"surface scrim\" displayed over the full-screen dialog.\n     */\n    MDCDialogFoundation.prototype.showSurfaceScrim = function () {\n        var _this = this;\n        this.adapter.addClass(cssClasses.SURFACE_SCRIM_SHOWING);\n        this.runNextAnimationFrame(function () {\n            _this.adapter.addClass(cssClasses.SURFACE_SCRIM_SHOWN);\n        });\n    };\n    /**\n     * Used only in instances of showing a secondary dialog over a full-screen\n     * dialog. Hides the \"surface scrim\" displayed over the full-screen dialog.\n     */\n    MDCDialogFoundation.prototype.hideSurfaceScrim = function () {\n        this.adapter.removeClass(cssClasses.SURFACE_SCRIM_SHOWN);\n        this.adapter.addClass(cssClasses.SURFACE_SCRIM_HIDING);\n    };\n    /**\n     * Handles `transitionend` event triggered when surface scrim animation is\n     * finished.\n     */\n    MDCDialogFoundation.prototype.handleSurfaceScrimTransitionEnd = function () {\n        this.adapter.removeClass(cssClasses.SURFACE_SCRIM_HIDING);\n        this.adapter.removeClass(cssClasses.SURFACE_SCRIM_SHOWING);\n    };\n    MDCDialogFoundation.prototype.isOpen = function () {\n        return this.dialogOpen;\n    };\n    MDCDialogFoundation.prototype.getEscapeKeyAction = function () {\n        return this.escapeKeyAction;\n    };\n    MDCDialogFoundation.prototype.setEscapeKeyAction = function (action) {\n        this.escapeKeyAction = action;\n    };\n    MDCDialogFoundation.prototype.getScrimClickAction = function () {\n        return this.scrimClickAction;\n    };\n    MDCDialogFoundation.prototype.setScrimClickAction = function (action) {\n        this.scrimClickAction = action;\n    };\n    MDCDialogFoundation.prototype.getAutoStackButtons = function () {\n        return this.autoStackButtons;\n    };\n    MDCDialogFoundation.prototype.setAutoStackButtons = function (autoStack) {\n        this.autoStackButtons = autoStack;\n    };\n    MDCDialogFoundation.prototype.getSuppressDefaultPressSelector = function () {\n        return this.suppressDefaultPressSelector;\n    };\n    MDCDialogFoundation.prototype.setSuppressDefaultPressSelector = function (selector) {\n        this.suppressDefaultPressSelector = selector;\n    };\n    MDCDialogFoundation.prototype.layout = function () {\n        var _this = this;\n        this.animFrame.request(AnimationKeys.POLL_LAYOUT_CHANGE, function () {\n            _this.layoutInternal();\n        });\n    };\n    /** Handles click on the dialog root element. */\n    MDCDialogFoundation.prototype.handleClick = function (evt) {\n        var isScrim = this.adapter.eventTargetMatches(evt.target, strings.SCRIM_SELECTOR);\n        // Check for scrim click first since it doesn't require querying ancestors.\n        if (isScrim && this.scrimClickAction !== '') {\n            this.close(this.scrimClickAction);\n        }\n        else {\n            var action = this.adapter.getActionFromEvent(evt);\n            if (action) {\n                this.close(action);\n            }\n        }\n    };\n    /** Handles keydown on the dialog root element. */\n    MDCDialogFoundation.prototype.handleKeydown = function (evt) {\n        var isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n        if (!isEnter) {\n            return;\n        }\n        var action = this.adapter.getActionFromEvent(evt);\n        if (action) {\n            // Action button callback is handled in `handleClick`,\n            // since space/enter keydowns on buttons trigger click events.\n            return;\n        }\n        // `composedPath` is used here, when available, to account for use cases\n        // where a target meant to suppress the default press behaviour\n        // may exist in a shadow root.\n        // For example, a textarea inside a web component:\n        // <mwc-dialog>\n        //   <horizontal-layout>\n        //     #shadow-root (open)\n        //       <mwc-textarea>\n        //         #shadow-root (open)\n        //           <textarea></textarea>\n        //       </mwc-textarea>\n        //   </horizontal-layout>\n        // </mwc-dialog>\n        var target = evt.composedPath ? evt.composedPath()[0] : evt.target;\n        var isDefault = this.suppressDefaultPressSelector ?\n            !this.adapter.eventTargetMatches(target, this.suppressDefaultPressSelector) :\n            true;\n        if (isEnter && isDefault) {\n            this.adapter.clickDefaultButton();\n        }\n    };\n    /** Handles keydown on the document. */\n    MDCDialogFoundation.prototype.handleDocumentKeydown = function (evt) {\n        var isEscape = evt.key === 'Escape' || evt.keyCode === 27;\n        if (isEscape && this.escapeKeyAction !== '') {\n            this.close(this.escapeKeyAction);\n        }\n    };\n    /**\n     * Handles scroll event on the dialog's content element -- showing a scroll\n     * divider on the header or footer based on the scroll position. This handler\n     * should only be registered on full-screen dialogs with scrollable content.\n     */\n    MDCDialogFoundation.prototype.handleScrollEvent = function () {\n        var _this = this;\n        // Since scroll events can fire at a high rate, we throttle these events by\n        // using requestAnimationFrame.\n        this.animFrame.request(AnimationKeys.POLL_SCROLL_POS, function () {\n            _this.toggleScrollDividerHeader();\n            _this.toggleScrollDividerFooter();\n        });\n    };\n    MDCDialogFoundation.prototype.layoutInternal = function () {\n        if (this.autoStackButtons) {\n            this.detectStackedButtons();\n        }\n        this.toggleScrollableClasses();\n    };\n    MDCDialogFoundation.prototype.handleAnimationTimerEnd = function () {\n        this.animationTimer = 0;\n        this.adapter.removeClass(cssClasses.OPENING);\n        this.adapter.removeClass(cssClasses.CLOSING);\n    };\n    /**\n     * Runs the given logic on the next animation frame, using setTimeout to\n     * factor in Firefox reflow behavior.\n     */\n    MDCDialogFoundation.prototype.runNextAnimationFrame = function (callback) {\n        var _this = this;\n        cancelAnimationFrame(this.animationFrame);\n        this.animationFrame = requestAnimationFrame(function () {\n            _this.animationFrame = 0;\n            clearTimeout(_this.animationTimer);\n            _this.animationTimer = setTimeout(callback, 0);\n        });\n    };\n    MDCDialogFoundation.prototype.detectStackedButtons = function () {\n        // Remove the class first to let us measure the buttons' natural positions.\n        this.adapter.removeClass(cssClasses.STACKED);\n        var areButtonsStacked = this.adapter.areButtonsStacked();\n        if (areButtonsStacked) {\n            this.adapter.addClass(cssClasses.STACKED);\n        }\n        if (areButtonsStacked !== this.areButtonsStacked) {\n            this.adapter.reverseButtons();\n            this.areButtonsStacked = areButtonsStacked;\n        }\n    };\n    MDCDialogFoundation.prototype.toggleScrollableClasses = function () {\n        // Remove the class first to let us measure the natural height of the\n        // content.\n        this.adapter.removeClass(cssClasses.SCROLLABLE);\n        if (this.adapter.isContentScrollable()) {\n            this.adapter.addClass(cssClasses.SCROLLABLE);\n            if (this.isFullscreen) {\n                // If dialog is full-screen and scrollable, check if a scroll divider\n                // should be shown.\n                this.toggleScrollDividerHeader();\n                this.toggleScrollDividerFooter();\n            }\n        }\n    };\n    MDCDialogFoundation.prototype.toggleScrollDividerHeader = function () {\n        if (!this.adapter.isScrollableContentAtTop()) {\n            this.adapter.addClass(cssClasses.SCROLL_DIVIDER_HEADER);\n        }\n        else if (this.adapter.hasClass(cssClasses.SCROLL_DIVIDER_HEADER)) {\n            this.adapter.removeClass(cssClasses.SCROLL_DIVIDER_HEADER);\n        }\n    };\n    MDCDialogFoundation.prototype.toggleScrollDividerFooter = function () {\n        if (!this.adapter.isScrollableContentAtBottom()) {\n            this.adapter.addClass(cssClasses.SCROLL_DIVIDER_FOOTER);\n        }\n        else if (this.adapter.hasClass(cssClasses.SCROLL_DIVIDER_FOOTER)) {\n            this.adapter.removeClass(cssClasses.SCROLL_DIVIDER_FOOTER);\n        }\n    };\n    return MDCDialogFoundation;\n}(MDCFoundation));\nexport { MDCDialogFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCDialogFoundation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}