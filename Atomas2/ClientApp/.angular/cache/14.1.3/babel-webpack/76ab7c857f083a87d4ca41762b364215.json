{"ast":null,"code":"import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Input, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute, Output, ContentChild, ViewChild, QueryList, ContentChildren, forwardRef, Self, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i3 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, mixinErrorState, MatCommonModule, MatRippleModule, ErrorStateMatcher } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport * as i1$2 from '@angular/material/form-field';\nimport { MatFormFieldControl, MAT_FORM_FIELD } from '@angular/material/form-field';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token to be used to override the default options for the chips module. */\n\nfunction MatChip_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MatChip_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = [\"*\", [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c1 = [\"*\", \"mat-chip-avatar, [matChipAvatar]\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\n\nfunction MatChipOption_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c2 = [[[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], \"*\", [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c3 = [\"mat-chip-avatar, [matChipAvatar]\", \"*\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nconst _c4 = \".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\";\n\nfunction MatChipRow_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 8)(2, \"span\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRippleDisabled\", ctx_r0._isRippleDisabled())(\"matRippleCentered\", ctx_r0._isRippleCentered)(\"matRippleTrigger\", ctx_r0._elementRef.nativeElement);\n  }\n}\n\nfunction MatChipRow_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MatChipRow_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction MatChipRow_ng_container_6_ng_content_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2, [\"*ngIf\", \"contentEditInput; else defaultMatChipEditInput\"]);\n  }\n}\n\nfunction MatChipRow_ng_container_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 13);\n  }\n}\n\nfunction MatChipRow_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MatChipRow_ng_container_6_ng_content_1_Template, 1, 0, \"ng-content\", 11);\n    i0.ɵɵtemplate(2, MatChipRow_ng_container_6_ng_template_2_Template, 1, 0, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r6 = i0.ɵɵreference(3);\n\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.contentEditInput)(\"ngIfElse\", _r6);\n  }\n}\n\nfunction MatChipRow_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵprojection(1, 3);\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c5 = [[[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], \"*\", [[\"\", \"matChipEditInput\", \"\"]], [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c6 = [\"mat-chip-avatar, [matChipAvatar]\", \"*\", \"[matChipEditInput]\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nconst _c7 = [\"*\"];\nconst _c8 = \".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\";\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\n\nconst MAT_CHIP = new InjectionToken('MatChip');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nclass _MatChipActionBase {}\n\nconst _MatChipActionMixinBase = mixinTabIndex(_MatChipActionBase, -1);\n/**\n * Section within a chip.\n * @docs-private\n */\n\n\nclass MatChipAction extends _MatChipActionMixinBase {\n  constructor(_elementRef, _parentChip) {\n    super();\n    this._elementRef = _elementRef;\n    this._parentChip = _parentChip;\n    /** Whether the action is interactive. */\n\n    this.isInteractive = true;\n    /** Whether this is the primary action in the chip. */\n\n    this._isPrimary = true;\n    this._disabled = false;\n    /**\n     * Private API to allow focusing this chip when it is disabled.\n     */\n\n    this._allowFocusWhenDisabled = false;\n\n    if (_elementRef.nativeElement.nodeName === 'BUTTON') {\n      _elementRef.nativeElement.setAttribute('type', 'button');\n    }\n  }\n  /** Whether the action is disabled. */\n\n\n  get disabled() {\n    return this._disabled || this._parentChip.disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  /**\n   * Determine the value of the disabled attribute for this chip action.\n   */\n\n\n  _getDisabledAttribute() {\n    // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n    // string to indicate that disabled attribute should be included.\n    return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n  }\n  /**\n   * Determine the value of the tabindex attribute for this chip action.\n   */\n\n\n  _getTabindex() {\n    return this.disabled && !this._allowFocusWhenDisabled || !this.isInteractive ? null : this.tabIndex.toString();\n  }\n\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n\n  _handleClick(event) {\n    if (!this.disabled && this.isInteractive && this._isPrimary) {\n      event.preventDefault();\n\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled && this.isInteractive && this._isPrimary) {\n      event.preventDefault();\n\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n\n}\n\nMatChipAction.ɵfac = function MatChipAction_Factory(t) {\n  return new (t || MatChipAction)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_CHIP));\n};\n\nMatChipAction.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatChipAction,\n  selectors: [[\"\", \"matChipAction\", \"\"]],\n  hostAttrs: [1, \"mdc-evolution-chip__action\", \"mat-mdc-chip-action\"],\n  hostVars: 9,\n  hostBindings: function MatChipAction_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function MatChipAction_click_HostBindingHandler($event) {\n        return ctx._handleClick($event);\n      })(\"keydown\", function MatChipAction_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx._getTabindex())(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx.disabled);\n      i0.ɵɵclassProp(\"mdc-evolution-chip__action--primary\", ctx._isPrimary)(\"mdc-evolution-chip__action--presentational\", ctx._isPrimary)(\"mdc-evolution-chip__action--trailing\", !ctx._isPrimary);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    tabIndex: \"tabIndex\",\n    isInteractive: \"isInteractive\",\n    _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAction, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipAction]',\n      inputs: ['disabled', 'tabIndex'],\n      host: {\n        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n        // Note that while our actions are interactive, we have to add the `--presentational` class,\n        // in order to avoid some super-specific `:hover` styles from MDC.\n        '[class.mdc-evolution-chip__action--presentational]': '_isPrimary',\n        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary',\n        '[attr.tabindex]': '_getTabindex()',\n        '[attr.disabled]': '_getDisabledAttribute()',\n        '[attr.aria-disabled]': 'disabled',\n        '(click)': '_handleClick($event)',\n        '(keydown)': '_handleKeydown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_CHIP]\n      }]\n    }];\n  }, {\n    isInteractive: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    _allowFocusWhenDisabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nlet uid = 0;\n/**\n * Boilerplate for applying mixins to MatChip.\n * @docs-private\n */\n\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n\n})), 'primary'), -1);\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\n\n\nclass MatChip extends _MatChipMixinBase {\n  constructor(_changeDetectorRef, elementRef, _ngZone, _focusMonitor, _document, animationMode, _globalRippleOptions, tabIndex) {\n    var _a;\n\n    super(elementRef);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._ngZone = _ngZone;\n    this._focusMonitor = _focusMonitor;\n    this._globalRippleOptions = _globalRippleOptions;\n    /** Whether the ripple is centered on the chip. */\n\n    this._isRippleCentered = false;\n    /** Emits when the chip is focused. */\n\n    this._onFocus = new Subject();\n    /** Emits when the chip is blurred. */\n\n    this._onBlur = new Subject();\n    /** Role for the root of the chip. */\n\n    this.role = null;\n    /** Whether the chip has focus. */\n\n    this._hasFocusInternal = false;\n    /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n\n    this.id = `mat-mdc-chip-${uid++}`;\n    /** ARIA label for the content of the chip. */\n\n    this.ariaLabel = null;\n    this._removable = true;\n    this._highlighted = false;\n    /** Emitted when a chip is to be removed. */\n\n    this.removed = new EventEmitter();\n    /** Emitted when the chip is destroyed. */\n\n    this.destroyed = new EventEmitter();\n    /** The unstyled chip selector for this component. */\n\n    this.basicChipAttrName = 'mat-basic-chip';\n    const element = elementRef.nativeElement;\n    this._document = _document;\n    this._animationsDisabled = animationMode === 'NoopAnimations';\n    this._isBasicChip = element.hasAttribute(this.basicChipAttrName) || element.tagName.toLowerCase() === this.basicChipAttrName;\n\n    if (tabIndex != null) {\n      this.tabIndex = (_a = parseInt(tabIndex)) !== null && _a !== void 0 ? _a : this.defaultTabIndex;\n    }\n\n    this._monitorFocus();\n  }\n\n  _hasFocus() {\n    return this._hasFocusInternal;\n  }\n  /**\n   * The value of the chip. Defaults to the content inside\n   * the `mat-mdc-chip-action-label` element.\n   */\n\n\n  get value() {\n    return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n  }\n\n  set value(value) {\n    this._value = value;\n  }\n  /**\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\n   */\n\n\n  get removable() {\n    return this._removable;\n  }\n\n  set removable(value) {\n    this._removable = coerceBooleanProperty(value);\n  }\n  /**\n   * Colors the chip for emphasis as if it were selected.\n   */\n\n\n  get highlighted() {\n    return this._highlighted;\n  }\n\n  set highlighted(value) {\n    this._highlighted = coerceBooleanProperty(value);\n  }\n\n  ngAfterViewInit() {\n    this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n\n    if (this._pendingFocus) {\n      this._pendingFocus = false;\n      this.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n\n    this.destroyed.emit({\n      chip: this\n    });\n    this.destroyed.complete();\n  }\n  /**\n   * Allows for programmatic removal of the chip.\n   *\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n   */\n\n\n  remove() {\n    if (this.removable) {\n      this.removed.emit({\n        chip: this\n      });\n    }\n  }\n  /** Whether or not the ripple should be disabled. */\n\n\n  _isRippleDisabled() {\n    var _a;\n\n    return this.disabled || this.disableRipple || this._animationsDisabled || this._isBasicChip || !!((_a = this._globalRippleOptions) === null || _a === void 0 ? void 0 : _a.disabled);\n  }\n  /** Returns whether the chip has a trailing icon. */\n\n\n  _hasTrailingIcon() {\n    return !!(this.trailingIcon || this.removeIcon);\n  }\n  /** Handles keyboard events on the chip. */\n\n\n  _handleKeydown(event) {\n    if (event.keyCode === BACKSPACE || event.keyCode === DELETE) {\n      event.preventDefault();\n      this.remove();\n    }\n  }\n  /** Allows for programmatic focusing of the chip. */\n\n\n  focus() {\n    if (!this.disabled) {\n      // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n      // This can happen if the consumer tries to focus a chip immediately after it is added.\n      // Queue the method to be called again on init.\n      if (this.primaryAction) {\n        this.primaryAction.focus();\n      } else {\n        this._pendingFocus = true;\n      }\n    }\n  }\n  /** Gets the action that contains a specific target node. */\n\n\n  _getSourceAction(target) {\n    return this._getActions().find(action => {\n      const element = action._elementRef.nativeElement;\n      return element === target || element.contains(target);\n    });\n  }\n  /** Gets all of the actions within the chip. */\n\n\n  _getActions() {\n    const result = [];\n\n    if (this.primaryAction) {\n      result.push(this.primaryAction);\n    }\n\n    if (this.removeIcon) {\n      result.push(this.removeIcon);\n    }\n\n    if (this.trailingIcon) {\n      result.push(this.trailingIcon);\n    }\n\n    return result;\n  }\n  /** Handles interactions with the primary action of the chip. */\n\n\n  _handlePrimaryActionInteraction() {// Empty here, but is overwritten in child classes.\n  }\n  /** Starts the focus monitoring process on the chip. */\n\n\n  _monitorFocus() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      const hasFocus = origin !== null;\n\n      if (hasFocus !== this._hasFocusInternal) {\n        this._hasFocusInternal = hasFocus;\n\n        if (hasFocus) {\n          this._onFocus.next({\n            chip: this\n          });\n        } else {\n          // When animations are enabled, Angular may end up removing the chip from the DOM a little\n          // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n          // that moves focus not the next item. To work around the issue, we defer marking the chip\n          // as not focused until the next time the zone stabilizes.\n          this._ngZone.onStable.pipe(take(1)).subscribe(() => this._ngZone.run(() => this._onBlur.next({\n            chip: this\n          })));\n        }\n      }\n    });\n  }\n\n}\n\nMatChip.ɵfac = function MatChip_Factory(t) {\n  return new (t || MatChip)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'));\n};\n\nMatChip.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatChip,\n  selectors: [[\"mat-basic-chip\"], [\"mat-chip\"]],\n  contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.leadingIcon = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    }\n  },\n  viewQuery: function MatChip_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatRipple, 5);\n      i0.ɵɵviewQuery(MatChipAction, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.primaryAction = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-mdc-chip\"],\n  hostVars: 30,\n  hostBindings: function MatChip_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function MatChip_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.role ? ctx.tabIndex : null)(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-basic-chip\", ctx._isBasicChip)(\"mat-mdc-standard-chip\", !ctx._isBasicChip)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon())(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\",\n    role: \"role\",\n    id: \"id\",\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    value: \"value\",\n    removable: \"removable\",\n    highlighted: \"highlighted\"\n  },\n  outputs: {\n    removed: \"removed\",\n    destroyed: \"destroyed\"\n  },\n  exportAs: [\"matChip\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_CHIP,\n    useExisting: MatChip\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 9,\n  vars: 6,\n  consts: [[\"matRipple\", \"\", 1, \"mat-mdc-chip-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", 3, \"isInteractive\"], [\"class\", \"mdc-evolution-chip__graphic mat-mdc-chip-graphic\", 4, \"ngIf\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [\"class\", \"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\", 4, \"ngIf\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n  template: function MatChip_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵelement(0, \"span\", 0)(1, \"span\", 1);\n      i0.ɵɵelementStart(2, \"span\", 2)(3, \"div\", 3);\n      i0.ɵɵtemplate(4, MatChip_span_4_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementStart(5, \"span\", 5);\n      i0.ɵɵprojection(6);\n      i0.ɵɵelement(7, \"span\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(8, MatChip_span_8_Template, 2, 0, \"span\", 7);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx._isRippleCentered)(\"matRippleTrigger\", ctx._elementRef.nativeElement);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"isInteractive\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.leadingIcon);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx._hasTrailingIcon());\n    }\n  },\n  dependencies: [i2.NgIf, i3.MatRipple, MatChipAction],\n  styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChip, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip, mat-chip',\n      inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n      exportAs: 'matChip',\n      host: {\n        'class': 'mat-mdc-chip',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[class._mat-animation-noopable]': '_animationsDisabled',\n        '[id]': 'id',\n        '[attr.role]': 'role',\n        '[attr.tabindex]': 'role ? tabIndex : null',\n        '[attr.aria-label]': 'ariaLabel',\n        '(keydown)': '_handleKeydown($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_CHIP,\n        useExisting: MatChip\n      }],\n      template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <div matChipAction [isInteractive]=\\\"false\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </div>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, {\n    role: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    value: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input\n    }],\n    highlighted: [{\n      type: Input\n    }],\n    removed: [{\n      type: Output\n    }],\n    destroyed: [{\n      type: Output\n    }],\n    leadingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_AVATAR]\n    }],\n    trailingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_TRAILING_ICON]\n    }],\n    removeIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_REMOVE]\n    }],\n    ripple: [{\n      type: ViewChild,\n      args: [MatRipple]\n    }],\n    primaryAction: [{\n      type: ViewChild,\n      args: [MatChipAction]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Event object emitted by MatChipOption when selected or deselected. */\n\n\nclass MatChipSelectionChange {\n  constructor(\n  /** Reference to the chip that emitted the event. */\n  source,\n  /** Whether the chip that emitted the event is selected. */\n  selected,\n  /** Whether the selection change was a result of a user interaction. */\n  isUserInput = false) {\n    this.source = source;\n    this.selected = selected;\n    this.isUserInput = isUserInput;\n  }\n\n}\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\n\n\nclass MatChipOption extends MatChip {\n  constructor() {\n    super(...arguments);\n    /** Whether the chip list is selectable. */\n\n    this.chipListSelectable = true;\n    /** Whether the chip list is in multi-selection mode. */\n\n    this._chipListMultiple = false;\n    this._selectable = true;\n    this._selected = false;\n    /** The unstyled chip selector for this component. */\n\n    this.basicChipAttrName = 'mat-basic-chip-option';\n    /** Emitted when the chip is selected or deselected. */\n\n    this.selectionChange = new EventEmitter();\n  }\n  /**\n   * Whether or not the chip is selectable.\n   *\n   * When a chip is not selectable, changes to its selected state are always\n   * ignored. By default an option chip is selectable, and it becomes\n   * non-selectable if its parent chip list is not selectable.\n   */\n\n\n  get selectable() {\n    return this._selectable && this.chipListSelectable;\n  }\n\n  set selectable(value) {\n    this._selectable = coerceBooleanProperty(value);\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Whether the chip is selected. */\n\n\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(value) {\n    this._setSelectedState(coerceBooleanProperty(value), false, true);\n  }\n  /**\n   * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n   * interaction patterns.\n   *\n   * From [WAI ARIA Listbox authoring practices guide](\n   * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n   *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n   *  set to true. All options that are selectable but not selected have either aria-selected or\n   *  aria-checked set to false.\"\n   *\n   * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n   * VoiceOver reading every option as \"selected\" (#25736).\n   */\n\n\n  get ariaSelected() {\n    return this.selectable ? this.selected.toString() : null;\n  }\n\n  ngOnInit() {\n    this.role = 'presentation';\n  }\n  /** Selects the chip. */\n\n\n  select() {\n    this._setSelectedState(true, false, true);\n  }\n  /** Deselects the chip. */\n\n\n  deselect() {\n    this._setSelectedState(false, false, true);\n  }\n  /** Selects this chip and emits userInputSelection event */\n\n\n  selectViaInteraction() {\n    this._setSelectedState(true, true, true);\n  }\n  /** Toggles the current selected state of this chip. */\n\n\n  toggleSelected(isUserInput = false) {\n    this._setSelectedState(!this.selected, isUserInput, true);\n\n    return this.selected;\n  }\n\n  _handlePrimaryActionInteraction() {\n    if (this.selectable && !this.disabled) {\n      this.toggleSelected(true);\n    }\n  }\n\n  _setSelectedState(isSelected, isUserInput, emitEvent) {\n    if (isSelected !== this.selected) {\n      this._selected = isSelected;\n\n      if (emitEvent) {\n        this.selectionChange.emit({\n          source: this,\n          isUserInput,\n          selected: this.selected\n        });\n      }\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n}\n\nMatChipOption.ɵfac = /* @__PURE__ */function () {\n  let ɵMatChipOption_BaseFactory;\n  return function MatChipOption_Factory(t) {\n    return (ɵMatChipOption_BaseFactory || (ɵMatChipOption_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipOption)))(t || MatChipOption);\n  };\n}();\n\nMatChipOption.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatChipOption,\n  selectors: [[\"mat-basic-chip-option\"], [\"mat-chip-option\"]],\n  hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-option\", \"mdc-evolution-chip\", \"mdc-evolution-chip--filter\", \"mdc-evolution-chip--selectable\", \"mdc-evolution-chip--with-primary-graphic\"],\n  hostVars: 28,\n  hostBindings: function MatChipOption_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"role\", ctx.role);\n      i0.ɵɵclassProp(\"mat-mdc-chip-selected\", ctx.selected)(\"mat-mdc-chip-multiple\", ctx._chipListMultiple)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--selected\", ctx.selected)(\"mdc-evolution-chip--selecting\", !ctx._animationsDisabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\",\n    selectable: \"selectable\",\n    selected: \"selected\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MatChip,\n    useExisting: MatChipOption\n  }, {\n    provide: MAT_CHIP,\n    useExisting: MatChipOption\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c3,\n  decls: 13,\n  vars: 8,\n  consts: [[\"matRipple\", \"\", 1, \"mat-mdc-chip-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", \"role\", \"option\", 3, \"tabIndex\", \"_allowFocusWhenDisabled\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__checkmark\"], [\"viewBox\", \"-2 -3 30 30\", \"focusable\", \"false\", 1, \"mdc-evolution-chip__checkmark-svg\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-evolution-chip__checkmark-path\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [\"class\", \"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\", 4, \"ngIf\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n  template: function MatChipOption_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c2);\n      i0.ɵɵelement(0, \"span\", 0)(1, \"span\", 1);\n      i0.ɵɵelementStart(2, \"span\", 2)(3, \"button\", 3)(4, \"span\", 4);\n      i0.ɵɵprojection(5);\n      i0.ɵɵelementStart(6, \"span\", 5);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(7, \"svg\", 6);\n      i0.ɵɵelement(8, \"path\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(9, \"span\", 8);\n      i0.ɵɵprojection(10, 1);\n      i0.ɵɵelement(11, \"span\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(12, MatChipOption_span_12_Template, 2, 0, \"span\", 10);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx._isRippleCentered)(\"matRippleTrigger\", ctx._elementRef.nativeElement);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"tabIndex\", ctx.tabIndex)(\"_allowFocusWhenDisabled\", true);\n      i0.ɵɵattribute(\"aria-selected\", ctx.ariaSelected)(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx._hasTrailingIcon());\n    }\n  },\n  dependencies: [i2.NgIf, i3.MatRipple, MatChipAction],\n  styles: [_c4],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip-option, mat-chip-option',\n      inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-option mdc-evolution-chip mdc-evolution-chip--filter mdc-evolution-chip--selectable mdc-evolution-chip--with-primary-graphic',\n        '[class.mat-mdc-chip-selected]': 'selected',\n        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--selected]': 'selected',\n        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n        // starts and removes it once the animation is finished. We don't need to go through all\n        // the trouble, because we only care about the selection animation. MDC needs to do it,\n        // because they also have an exit animation that we don't care about.\n        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.role]': 'role',\n        '[id]': 'id'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipOption\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipOption\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    role=\\\"option\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n        <svg class=\\\"mdc-evolution-chip__checkmark-svg\\\" viewBox=\\\"-2 -3 30 30\\\" focusable=\\\"false\\\">\\n          <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n        </svg>\\n      </span>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], null, {\n    selectable: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\n\n\nclass MatChipEditInput {\n  constructor(_elementRef, _document) {\n    this._elementRef = _elementRef;\n    this._document = _document;\n  }\n\n  initialize(initialValue) {\n    this.getNativeElement().focus();\n    this.setValue(initialValue);\n  }\n\n  getNativeElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  setValue(value) {\n    this.getNativeElement().textContent = value;\n\n    this._moveCursorToEndOfInput();\n  }\n\n  getValue() {\n    return this.getNativeElement().textContent || '';\n  }\n\n  _moveCursorToEndOfInput() {\n    const range = this._document.createRange();\n\n    range.selectNodeContents(this.getNativeElement());\n    range.collapse(false);\n    const sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n}\n\nMatChipEditInput.ɵfac = function MatChipEditInput_Factory(t) {\n  return new (t || MatChipEditInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nMatChipEditInput.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatChipEditInput,\n  selectors: [[\"span\", \"matChipEditInput\", \"\"]],\n  hostAttrs: [\"role\", \"textbox\", \"tabindex\", \"-1\", \"contenteditable\", \"true\", 1, \"mat-chip-edit-input\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipEditInput, [{\n    type: Directive,\n    args: [{\n      selector: 'span[matChipEditInput]',\n      host: {\n        'class': 'mat-chip-edit-input',\n        'role': 'textbox',\n        'tabindex': '-1',\n        'contenteditable': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\n\n\nclass MatChipRow extends MatChip {\n  constructor(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex) {\n    super(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex);\n    this.basicChipAttrName = 'mat-basic-chip-row';\n    /**\n     * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n     * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n     * while the editing action is being initialized.\n     */\n\n    this._editStartPending = false;\n    this.editable = false;\n    /** Emitted when the chip is edited. */\n\n    this.edited = new EventEmitter();\n    this._isEditing = false;\n    this.role = 'row';\n\n    this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n      if (this._isEditing && !this._editStartPending) {\n        this._onEditFinish();\n      }\n    });\n  }\n\n  _hasTrailingIcon() {\n    // The trailing icon is hidden while editing.\n    return !this._isEditing && super._hasTrailingIcon();\n  }\n  /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n\n\n  _mousedown(event) {\n    if (!this._isEditing) {\n      if (!this.disabled) {\n        this.focus();\n      }\n\n      event.preventDefault();\n    }\n  }\n\n  _handleKeydown(event) {\n    if (event.keyCode === ENTER && !this.disabled) {\n      if (this._isEditing) {\n        event.preventDefault();\n\n        this._onEditFinish();\n      } else if (this.editable) {\n        this._startEditing(event);\n      }\n    } else if (this._isEditing) {\n      // Stop the event from reaching the chip set in order to avoid navigating.\n      event.stopPropagation();\n    } else {\n      super._handleKeydown(event);\n    }\n  }\n\n  _doubleclick(event) {\n    if (!this.disabled && this.editable) {\n      this._startEditing(event);\n    }\n  }\n\n  _startEditing(event) {\n    if (!this.primaryAction || this.removeIcon && this._getSourceAction(event.target) === this.removeIcon) {\n      return;\n    } // The value depends on the DOM so we need to extract it before we flip the flag.\n\n\n    const value = this.value;\n    this._isEditing = true;\n    this._editStartPending = true; // Defer initializing the input so it has time to be added to the DOM.\n\n    setTimeout(() => {\n      this._getEditInput().initialize(value);\n\n      this._editStartPending = false;\n    });\n  }\n\n  _onEditFinish() {\n    this._isEditing = false;\n    this._editStartPending = false;\n    this.edited.emit({\n      chip: this,\n      value: this._getEditInput().getValue()\n    }); // If the edit input is still focused or focus was returned to the body after it was destroyed,\n    // return focus to the chip contents.\n\n    if (this._document.activeElement === this._getEditInput().getNativeElement() || this._document.activeElement === this._document.body) {\n      this.primaryAction.focus();\n    }\n  }\n  /**\n   * Gets the projected chip edit input, or the default input if none is projected in. One of these\n   * two values is guaranteed to be defined.\n   */\n\n\n  _getEditInput() {\n    return this.contentEditInput || this.defaultEditInput;\n  }\n\n}\n\nMatChipRow.ɵfac = function MatChipRow_Factory(t) {\n  return new (t || MatChipRow)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'));\n};\n\nMatChipRow.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatChipRow,\n  selectors: [[\"mat-chip-row\"], [\"mat-basic-chip-row\"]],\n  contentQueries: function MatChipRow_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatChipEditInput, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentEditInput = _t.first);\n    }\n  },\n  viewQuery: function MatChipRow_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatChipEditInput, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultEditInput = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-row\", \"mdc-evolution-chip\"],\n  hostVars: 26,\n  hostBindings: function MatChipRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function MatChipRow_mousedown_HostBindingHandler($event) {\n        return ctx._mousedown($event);\n      })(\"dblclick\", function MatChipRow_dblclick_HostBindingHandler($event) {\n        return ctx._doubleclick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"role\", ctx.role);\n      i0.ɵɵclassProp(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-editing\", ctx._isEditing)(\"mat-mdc-chip-editable\", ctx.editable)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\",\n    editable: \"editable\"\n  },\n  outputs: {\n    edited: \"edited\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MatChip,\n    useExisting: MatChipRow\n  }, {\n    provide: MAT_CHIP,\n    useExisting: MatChipRow\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c6,\n  decls: 9,\n  vars: 10,\n  consts: [[4, \"ngIf\"], [\"role\", \"gridcell\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", 3, \"tabIndex\", \"disabled\"], [\"class\", \"mdc-evolution-chip__graphic mat-mdc-chip-graphic\", 4, \"ngIf\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [\"class\", \"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\", \"role\", \"gridcell\", 4, \"ngIf\"], [\"matRipple\", \"\", 1, \"mat-mdc-chip-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [4, \"ngIf\", \"ngIfElse\"], [\"defaultMatChipEditInput\", \"\"], [\"matChipEditInput\", \"\"], [\"role\", \"gridcell\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n  template: function MatChipRow_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c5);\n      i0.ɵɵtemplate(0, MatChipRow_ng_container_0_Template, 3, 3, \"ng-container\", 0);\n      i0.ɵɵelementStart(1, \"span\", 1)(2, \"span\", 2);\n      i0.ɵɵtemplate(3, MatChipRow_span_3_Template, 2, 0, \"span\", 3);\n      i0.ɵɵelementStart(4, \"span\", 4);\n      i0.ɵɵtemplate(5, MatChipRow_ng_container_5_Template, 2, 0, \"ng-container\", 5);\n      i0.ɵɵtemplate(6, MatChipRow_ng_container_6_Template, 4, 2, \"ng-container\", 5);\n      i0.ɵɵelement(7, \"span\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(8, MatChipRow_span_8_Template, 2, 0, \"span\", 7);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx._isEditing);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"tabIndex\", ctx.tabIndex)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"role\", ctx.editable ? \"button\" : null)(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.leadingIcon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitch\", ctx._isEditing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", true);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx._hasTrailingIcon());\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgSwitch, i2.NgSwitchCase, i3.MatRipple, MatChipAction, MatChipEditInput],\n  styles: [_c4],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-row, mat-basic-chip-row',\n      inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-editing]': '_isEditing',\n        '[class.mat-mdc-chip-editable]': 'editable',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[id]': 'id',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.role]': 'role',\n        '(mousedown)': '_mousedown($event)',\n        '(dblclick)': '_doubleclick($event)'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipRow\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipRow\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-container *ngIf=\\\"!_isEditing\\\">\\n  <span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n       [matRippleCentered]=\\\"_isRippleCentered\\\"\\n       [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n</ng-container>\\n\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\">\\n  <span\\n    matChipAction\\n    [attr.role]=\\\"editable ? 'button' : null\\\"\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\" [ngSwitch]=\\\"_isEditing\\\">\\n      <ng-container *ngSwitchCase=\\\"false\\\"><ng-content></ng-content></ng-container>\\n\\n      <ng-container *ngSwitchCase=\\\"true\\\">\\n        <ng-content *ngIf=\\\"contentEditInput; else defaultMatChipEditInput\\\"\\n                    select=\\\"[matChipEditInput]\\\"></ng-content>\\n        <ng-template #defaultMatChipEditInput><span matChipEditInput></span></ng-template>\\n      </ng-container>\\n\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  role=\\\"gridcell\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, {\n    editable: [{\n      type: Input\n    }],\n    edited: [{\n      type: Output\n    }],\n    defaultEditInput: [{\n      type: ViewChild,\n      args: [MatChipEditInput]\n    }],\n    contentEditInput: [{\n      type: ContentChild,\n      args: [MatChipEditInput]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Boilerplate for applying mixins to MatChipSet.\n * @docs-private\n */\n\n\nclass MatChipSetBase {\n  constructor(_elementRef) {}\n\n}\n\nconst _MatChipSetMixinBase = mixinTabIndex(MatChipSetBase);\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\n\n\nclass MatChipSet extends _MatChipSetMixinBase {\n  constructor(_elementRef, _changeDetectorRef, _dir) {\n    super(_elementRef);\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dir = _dir;\n    /** Index of the last destroyed chip that had focus. */\n\n    this._lastDestroyedFocusedChipIndex = null;\n    /** Subject that emits when the component has been destroyed. */\n\n    this._destroyed = new Subject();\n    /** Role to use if it hasn't been overwritten by the user. */\n\n    this._defaultRole = 'presentation';\n    this._disabled = false;\n    this._explicitRole = null;\n    /** Flat list of all the actions contained within the chips. */\n\n    this._chipActions = new QueryList();\n  }\n  /** Combined stream of all of the child chips' focus events. */\n\n\n  get chipFocusChanges() {\n    return this._getChipStream(chip => chip._onFocus);\n  }\n  /** Combined stream of all of the child chips' remove events. */\n\n\n  get chipDestroyedChanges() {\n    return this._getChipStream(chip => chip.destroyed);\n  }\n  /** Whether the chip set is disabled. */\n\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    this._syncChipsState();\n  }\n  /** Whether the chip list contains chips or not. */\n\n\n  get empty() {\n    return this._chips.length === 0;\n  }\n  /** The ARIA role applied to the chip set. */\n\n\n  get role() {\n    if (this._explicitRole) {\n      return this._explicitRole;\n    }\n\n    return this.empty ? null : this._defaultRole;\n  }\n\n  set role(value) {\n    this._explicitRole = value;\n  }\n  /** Whether any of the chips inside of this chip-set has focus. */\n\n\n  get focused() {\n    return this._hasFocusedChip();\n  }\n\n  ngAfterViewInit() {\n    this._setUpFocusManagement();\n\n    this._trackChipSetChanges();\n\n    this._trackDestroyedFocusedChip();\n  }\n\n  ngOnDestroy() {\n    var _a;\n\n    (_a = this._keyManager) === null || _a === void 0 ? void 0 : _a.destroy();\n\n    this._chipActions.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n  }\n  /** Checks whether any of the chips is focused. */\n\n\n  _hasFocusedChip() {\n    return this._chips && this._chips.some(chip => chip._hasFocus());\n  }\n  /** Syncs the chip-set's state with the individual chips. */\n\n\n  _syncChipsState() {\n    if (this._chips) {\n      this._chips.forEach(chip => {\n        chip.disabled = this._disabled;\n\n        chip._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n\n\n  focus() {}\n  /** Handles keyboard events on the chip set. */\n\n\n  _handleKeydown(event) {\n    if (this._originatesFromChip(event)) {\n      this._keyManager.onKeydown(event);\n    }\n  }\n  /**\n   * Utility to ensure all indexes are valid.\n   *\n   * @param index The index to be checked.\n   * @returns True if the index is valid for our list of chips.\n   */\n\n\n  _isValidIndex(index) {\n    return index >= 0 && index < this._chips.length;\n  }\n  /**\n   * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the grid from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n\n\n  _allowFocusEscape() {\n    const previousTabIndex = this.tabIndex;\n\n    if (this.tabIndex !== -1) {\n      this.tabIndex = -1;\n      setTimeout(() => {\n        this.tabIndex = previousTabIndex;\n\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * Gets a stream of events from all the chips within the set.\n   * The stream will automatically incorporate any newly-added chips.\n   */\n\n\n  _getChipStream(mappingFunction) {\n    return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n  }\n  /** Checks whether an event comes from inside a chip element. */\n\n\n  _originatesFromChip(event) {\n    let currentElement = event.target;\n\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      // Null check the classList, because IE and Edge don't support it on all elements.\n      if (currentElement.classList && currentElement.classList.contains('mdc-evolution-chip')) {\n        return true;\n      }\n\n      currentElement = currentElement.parentElement;\n    }\n\n    return false;\n  }\n  /** Sets up the chip set's focus management logic. */\n\n\n  _setUpFocusManagement() {\n    var _a; // Create a flat `QueryList` containing the actions of all of the chips.\n    // This allows us to navigate both within the chip and move to the next/previous\n    // one using the existing `ListKeyManager`.\n\n\n    this._chips.changes.pipe(startWith(this._chips)).subscribe(chips => {\n      const actions = [];\n      chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n\n      this._chipActions.reset(actions);\n\n      this._chipActions.notifyOnChanges();\n    });\n\n    this._keyManager = new FocusKeyManager(this._chipActions).withVerticalOrientation().withHorizontalOrientation(this._dir ? this._dir.value : 'ltr').withHomeAndEnd().skipPredicate(action => this._skipPredicate(action)); // Keep the manager active index in sync so that navigation picks\n    // up from the current chip if the user clicks into the list directly.\n\n    this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({\n      chip\n    }) => {\n      const action = chip._getSourceAction(document.activeElement);\n\n      if (action) {\n        this._keyManager.updateActiveItem(action);\n      }\n    });\n    (_a = this._dir) === null || _a === void 0 ? void 0 : _a.change.pipe(takeUntil(this._destroyed)).subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n  }\n  /**\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n   * non-interactive and disabled actions since the user can't do anything with them.\n   */\n\n\n  _skipPredicate(action) {\n    // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n    // chips.\n    return !action.isInteractive || action.disabled;\n  }\n  /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n\n\n  _trackChipSetChanges() {\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => this._syncChipsState());\n      }\n\n      this._redirectDestroyedChipFocus();\n    });\n  }\n  /** Starts tracking the destroyed chips in order to capture the focused one. */\n\n\n  _trackDestroyedFocusedChip() {\n    this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      const chipArray = this._chips.toArray();\n\n      const chipIndex = chipArray.indexOf(event.chip); // If the focused chip is destroyed, save its index so that we can move focus to the next\n      // chip. We only save the index here, rather than move the focus immediately, because we want\n      // to wait until the chip is removed from the chip list before focusing the next one. This\n      // allows us to keep focus on the same index if the chip gets swapped out.\n\n      if (this._isValidIndex(chipIndex) && event.chip._hasFocus()) {\n        this._lastDestroyedFocusedChipIndex = chipIndex;\n      }\n    });\n  }\n  /**\n   * Finds the next appropriate chip to move focus to,\n   * if the currently-focused chip is destroyed.\n   */\n\n\n  _redirectDestroyedChipFocus() {\n    if (this._lastDestroyedFocusedChipIndex == null) {\n      return;\n    }\n\n    if (this._chips.length) {\n      const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n\n      const chipToFocus = this._chips.toArray()[newIndex];\n\n      if (chipToFocus.disabled) {\n        // If we're down to one disabled chip, move focus back to the set.\n        if (this._chips.length === 1) {\n          this.focus();\n        } else {\n          this._keyManager.setPreviousItemActive();\n        }\n      } else {\n        chipToFocus.focus();\n      }\n    } else {\n      this.focus();\n    }\n\n    this._lastDestroyedFocusedChipIndex = null;\n  }\n\n}\n\nMatChipSet.ɵfac = function MatChipSet_Factory(t) {\n  return new (t || MatChipSet)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.Directionality, 8));\n};\n\nMatChipSet.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatChipSet,\n  selectors: [[\"mat-chip-set\"]],\n  contentQueries: function MatChipSet_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatChip, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-mdc-chip-set\", \"mdc-evolution-chip-set\"],\n  hostVars: 1,\n  hostBindings: function MatChipSet_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function MatChipSet_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx.role);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    role: \"role\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c7,\n  decls: 2,\n  vars: 0,\n  consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n  template: function MatChipSet_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipSet, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-set',\n      template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `,\n      host: {\n        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n        '(keydown)': '_handleKeydown($event)',\n        '[attr.role]': 'role'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    role: [{\n      type: Input\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChip, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Change event object that is emitted when the chip listbox value has changed. */\n\n\nclass MatChipListboxChange {\n  constructor(\n  /** Chip listbox that emitted the event. */\n  source,\n  /** Value of the chip listbox when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n\n}\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\n\n\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatChipListbox),\n  multi: true\n};\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\n\nclass MatChipListbox extends MatChipSet {\n  constructor() {\n    super(...arguments);\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n\n    this._onTouched = () => {};\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n\n\n    this._onChange = () => {}; // TODO: MDC uses `grid` here\n\n\n    this._defaultRole = 'listbox';\n    this._multiple = false;\n    /** Orientation of the chip list. */\n\n    this.ariaOrientation = 'horizontal';\n    this._selectable = true;\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n\n    this.compareWith = (o1, o2) => o1 === o2;\n\n    this._required = false;\n    /** Event emitted when the selected chip listbox value has been changed by the user. */\n\n    this.change = new EventEmitter();\n  }\n  /** Whether the user should be allowed to select multiple chips. */\n\n\n  get multiple() {\n    return this._multiple;\n  }\n\n  set multiple(value) {\n    this._multiple = coerceBooleanProperty(value);\n\n    this._syncListboxProperties();\n  }\n  /** The array of selected chips inside the chip listbox. */\n\n\n  get selected() {\n    const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n\n    return this.multiple ? selectedChips : selectedChips[0];\n  }\n  /**\n   * Whether or not this chip listbox is selectable.\n   *\n   * When a chip listbox is not selectable, the selected states for all\n   * the chips inside the chip listbox are always ignored.\n   */\n\n\n  get selectable() {\n    return this._selectable;\n  }\n\n  set selectable(value) {\n    this._selectable = coerceBooleanProperty(value);\n\n    this._syncListboxProperties();\n  }\n  /** Whether this chip listbox is required. */\n\n\n  get required() {\n    return this._required;\n  }\n\n  set required(value) {\n    this._required = coerceBooleanProperty(value);\n  }\n  /** Combined stream of all of the child chips' selection change events. */\n\n\n  get chipSelectionChanges() {\n    return this._getChipStream(chip => chip.selectionChange);\n  }\n  /** Combined stream of all of the child chips' blur events. */\n\n\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n  /** The value of the listbox, which is the combined value of the selected chips. */\n\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this.writeValue(value);\n    this._value = value;\n  }\n\n  ngAfterContentInit() {\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      // Update listbox selectable/multiple properties on chips\n      this._syncListboxProperties();\n    });\n\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n    this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      if (!this.multiple) {\n        this._chips.forEach(chip => {\n          if (chip !== event.source) {\n            chip._setSelectedState(false, false, false);\n          }\n        });\n      }\n\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n  /**\n   * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n   * are no selected chips.\n   */\n\n\n  focus() {\n    if (this.disabled) {\n      return;\n    }\n\n    const firstSelectedChip = this._getFirstSelectedChip();\n\n    if (firstSelectedChip && !firstSelectedChip.disabled) {\n      firstSelectedChip.focus();\n    } else if (this._chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n    } else {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n\n\n  writeValue(value) {\n    if (this._chips) {\n      this._setSelectionByValue(value, false);\n    }\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n\n\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n\n\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /** Selects all chips with value. */\n\n\n  _setSelectionByValue(value, isUserInput = true) {\n    this._clearSelection();\n\n    if (Array.isArray(value)) {\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n    } else {\n      this._selectValue(value, isUserInput);\n    }\n  }\n  /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n\n\n  _blur() {\n    if (!this.disabled) {\n      // Wait to see if focus moves to an individual chip.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._propagateChanges();\n\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n\n  _keydown(event) {\n    if (event.keyCode === TAB) {\n      super._allowFocusEscape();\n    }\n  }\n  /** Marks the field as touched */\n\n\n  _markAsTouched() {\n    this._onTouched();\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits change event to set the model value. */\n\n\n  _propagateChanges() {\n    let valueToEmit = null;\n\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(chip => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : undefined;\n    }\n\n    this._value = valueToEmit;\n    this.change.emit(new MatChipListboxChange(this, valueToEmit));\n\n    this._onChange(valueToEmit);\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Deselects every chip in the listbox.\n   * @param skip Chip that should not be deselected.\n   */\n\n\n  _clearSelection(skip) {\n    this._chips.forEach(chip => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n  }\n  /**\n   * Finds and selects the chip based on its value.\n   * @returns Chip that has the corresponding value.\n   */\n\n\n  _selectValue(value, isUserInput) {\n    const correspondingChip = this._chips.find(chip => {\n      return chip.value != null && this.compareWith(chip.value, value);\n    });\n\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n    }\n\n    return correspondingChip;\n  }\n  /** Syncs the chip-listbox selection state with the individual chips. */\n\n\n  _syncListboxProperties() {\n    if (this._chips) {\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        this._chips.forEach(chip => {\n          chip._chipListMultiple = this.multiple;\n          chip.chipListSelectable = this._selectable;\n\n          chip._changeDetectorRef.markForCheck();\n        });\n      });\n    }\n  }\n  /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n\n\n  _getFirstSelectedChip() {\n    if (Array.isArray(this.selected)) {\n      return this.selected.length ? this.selected[0] : undefined;\n    } else {\n      return this.selected;\n    }\n  }\n  /**\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n   * non-interactive actions since the user can't do anything with them.\n   */\n\n\n  _skipPredicate(action) {\n    // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n    // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n    // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n    // exceptions for compound widgets.\n    //\n    // From [Developing a Keyboard Interface](\n    // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n    //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n    //   Listbox...\"\n    return !action.isInteractive;\n  }\n\n}\n\nMatChipListbox.ɵfac = /* @__PURE__ */function () {\n  let ɵMatChipListbox_BaseFactory;\n  return function MatChipListbox_Factory(t) {\n    return (ɵMatChipListbox_BaseFactory || (ɵMatChipListbox_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipListbox)))(t || MatChipListbox);\n  };\n}();\n\nMatChipListbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatChipListbox,\n  selectors: [[\"mat-chip-listbox\"]],\n  contentQueries: function MatChipListbox_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatChipOption, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n    }\n  },\n  hostAttrs: [1, \"mdc-evolution-chip-set\", \"mat-mdc-chip-listbox\"],\n  hostVars: 11,\n  hostBindings: function MatChipListbox_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function MatChipListbox_focus_HostBindingHandler() {\n        return ctx.focus();\n      })(\"blur\", function MatChipListbox_blur_HostBindingHandler() {\n        return ctx._blur();\n      })(\"keydown\", function MatChipListbox_keydown_HostBindingHandler($event) {\n        return ctx._keydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"tabIndex\", ctx.empty ? -1 : ctx.tabIndex);\n      i0.ɵɵattribute(\"role\", ctx.role)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-multiselectable\", ctx.multiple)(\"aria-orientation\", ctx.ariaOrientation);\n      i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-required\", ctx.required);\n    }\n  },\n  inputs: {\n    tabIndex: \"tabIndex\",\n    multiple: \"multiple\",\n    ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"],\n    selectable: \"selectable\",\n    compareWith: \"compareWith\",\n    required: \"required\",\n    value: \"value\"\n  },\n  outputs: {\n    change: \"change\"\n  },\n  features: [i0.ɵɵProvidersFeature([MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c7,\n  decls: 2,\n  vars: 0,\n  consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n  template: function MatChipListbox_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [_c8],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipListbox, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-listbox',\n      template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `,\n      inputs: ['tabIndex'],\n      host: {\n        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n        '[attr.role]': 'role',\n        '[tabIndex]': 'empty ? -1 : tabIndex',\n        // TODO: replace this binding with use of AriaDescriber\n        '[attr.aria-describedby]': '_ariaDescribedby || null',\n        '[attr.aria-required]': 'role ? required : null',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-multiselectable]': 'multiple',\n        '[attr.aria-orientation]': 'ariaOrientation',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()',\n        '(keydown)': '_keydown($event)'\n      },\n      providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], null, {\n    multiple: [{\n      type: Input\n    }],\n    ariaOrientation: [{\n      type: Input,\n      args: ['aria-orientation']\n    }],\n    selectable: [{\n      type: Input\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipOption, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Change event object that is emitted when the chip grid value has changed. */\n\n\nclass MatChipGridChange {\n  constructor(\n  /** Chip grid that emitted the event. */\n  source,\n  /** Value of the chip grid when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n\n}\n/**\n * Boilerplate for applying mixins to MatChipGrid.\n * @docs-private\n */\n\n\nclass MatChipGridBase extends MatChipSet {\n  constructor(elementRef, changeDetectorRef, dir, _defaultErrorStateMatcher, _parentForm, _parentFormGroup,\n  /**\n   * Form control bound to the component.\n   * Implemented as part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  ngControl) {\n    super(elementRef, changeDetectorRef, dir);\n    this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n    this._parentForm = _parentForm;\n    this._parentFormGroup = _parentFormGroup;\n    this.ngControl = ngControl;\n    /**\n     * Emits whenever the component state changes and should cause the parent\n     * form-field to update. Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n\n    this.stateChanges = new Subject();\n  }\n\n}\n\nconst _MatChipGridMixinBase = mixinErrorState(MatChipGridBase);\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\n\n\nclass MatChipGrid extends _MatChipGridMixinBase {\n  constructor(elementRef, changeDetectorRef, dir, parentForm, parentFormGroup, defaultErrorStateMatcher, ngControl) {\n    super(elementRef, changeDetectorRef, dir, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n\n    this.controlType = 'mat-chip-grid';\n    this._defaultRole = 'grid';\n    /**\n     * List of element ids to propagate to the chipInput's aria-describedby attribute.\n     */\n\n    this._ariaDescribedbyIds = [];\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n\n    this._onTouched = () => {};\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n\n\n    this._onChange = () => {};\n\n    this._value = [];\n    /** Emits when the chip grid value has been changed by the user. */\n\n    this.change = new EventEmitter();\n    /**\n     * Emits whenever the raw value of the chip-grid changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n\n    this.valueChange = new EventEmitter();\n\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n\n\n  get disabled() {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    this._syncChipsState();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n\n\n  get id() {\n    return this._chipInput.id;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n\n\n  get empty() {\n    return (!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0);\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n\n\n  get placeholder() {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n\n  set placeholder(value) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n\n\n  get focused() {\n    return this._chipInput.focused || this._hasFocusedChip();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n\n\n  get required() {\n    var _a, _b, _c, _d;\n\n    return (_d = (_a = this._required) !== null && _a !== void 0 ? _a : (_c = (_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c.hasValidator(Validators.required)) !== null && _d !== void 0 ? _d : false;\n  }\n\n  set required(value) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n\n\n  get shouldLabelFloat() {\n    return !this.empty || this.focused;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this._value = value;\n  }\n  /** Combined stream of all of the child chips' blur events. */\n\n\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n\n  ngAfterContentInit() {\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._blur();\n\n      this.stateChanges.next();\n    });\n    merge(this.chipFocusChanges, this._chips.changes).pipe(takeUntil(this._destroyed)).subscribe(() => this.stateChanges.next());\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n    if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.stateChanges.complete();\n  }\n  /** Associates an HTML input element with this chip grid. */\n\n\n  registerInput(inputElement) {\n    this._chipInput = inputElement;\n\n    this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n\n\n  onContainerClick(event) {\n    if (!this.disabled && !this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n  /**\n   * Focuses the first chip in this chip grid, or the associated input when there\n   * are no eligible chips.\n   */\n\n\n  focus() {\n    if (this.disabled || this._chipInput.focused) {\n      return;\n    }\n\n    if (!this._chips.length || this._chips.first.disabled) {\n      // Delay until the next tick, because this can cause a \"changed after checked\"\n      // error if the input does something on focus (e.g. opens an autocomplete).\n      Promise.resolve().then(() => this._chipInput.focus());\n    } else if (this._chips.length) {\n      this._keyManager.setFirstItemActive();\n    }\n\n    this.stateChanges.next();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n\n\n  setDescribedByIds(ids) {\n    // We must keep this up to date to handle the case where ids are set\n    // before the chip input is registered.\n    this._ariaDescribedbyIds = ids;\n\n    if (this._chipInput) {\n      // Use a setTimeout in case this is being run during change detection\n      // and the chip input has already determined its host binding for\n      // aria-describedBy.\n      setTimeout(() => {\n        this._chipInput.setDescribedByIds(ids);\n      }, 0);\n    }\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n\n\n  writeValue(value) {\n    // The user is responsible for creating the child chips, so we just store the value.\n    this._value = value;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n\n\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n\n\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n  /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n\n\n  _blur() {\n    if (!this.disabled) {\n      // Check whether the focus moved to chip input.\n      // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n      // to chip input, do nothing.\n      // Timeout is needed to wait for the focus() event trigger on chip input.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._propagateChanges();\n\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n  /**\n   * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the grid from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n\n\n  _allowFocusEscape() {\n    if (!this._chipInput.focused) {\n      super._allowFocusEscape();\n    }\n  }\n  /** Handles custom keyboard events. */\n\n\n  _handleKeydown(event) {\n    if (event.keyCode === TAB) {\n      if (this._chipInput.focused && hasModifierKey(event, 'shiftKey') && this._chips.length && !this._chips.last.disabled) {\n        event.preventDefault();\n\n        if (this._keyManager.activeItem) {\n          this._keyManager.setActiveItem(this._keyManager.activeItem);\n        } else {\n          this._focusLastChip();\n        }\n      } else {\n        // Use the super method here since it doesn't check for the input\n        // focused state. This allows focus to escape if there's only one\n        // disabled chip left in the list.\n        super._allowFocusEscape();\n      }\n    } else if (!this._chipInput.focused) {\n      super._handleKeydown(event);\n    }\n\n    this.stateChanges.next();\n  }\n\n  _focusLastChip() {\n    if (this._chips.length) {\n      this._chips.last.focus();\n    }\n  }\n  /** Emits change event to set the model value. */\n\n\n  _propagateChanges() {\n    const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n    this._value = valueToEmit;\n    this.change.emit(new MatChipGridChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n\n    this._onChange(valueToEmit);\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Mark the field as touched */\n\n\n  _markAsTouched() {\n    this._onTouched();\n\n    this._changeDetectorRef.markForCheck();\n\n    this.stateChanges.next();\n  }\n\n}\n\nMatChipGrid.ɵfac = function MatChipGrid_Factory(t) {\n  return new (t || MatChipGrid)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.Directionality, 8), i0.ɵɵdirectiveInject(i2$1.NgForm, 8), i0.ɵɵdirectiveInject(i2$1.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i3.ErrorStateMatcher), i0.ɵɵdirectiveInject(i2$1.NgControl, 10));\n};\n\nMatChipGrid.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatChipGrid,\n  selectors: [[\"mat-chip-grid\"]],\n  contentQueries: function MatChipGrid_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatChipRow, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-mdc-chip-set\", \"mat-mdc-chip-grid\", \"mdc-evolution-chip-set\"],\n  hostVars: 10,\n  hostBindings: function MatChipGrid_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function MatChipGrid_focus_HostBindingHandler() {\n        return ctx.focus();\n      })(\"blur\", function MatChipGrid_blur_HostBindingHandler() {\n        return ctx._blur();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"tabIndex\", ctx._chips && ctx._chips.length === 0 ? -1 : ctx.tabIndex);\n      i0.ɵɵattribute(\"role\", ctx.role)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState);\n      i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-invalid\", ctx.errorState)(\"mat-mdc-chip-list-required\", ctx.required);\n    }\n  },\n  inputs: {\n    tabIndex: \"tabIndex\",\n    disabled: \"disabled\",\n    placeholder: \"placeholder\",\n    required: \"required\",\n    value: \"value\",\n    errorStateMatcher: \"errorStateMatcher\"\n  },\n  outputs: {\n    change: \"change\",\n    valueChange: \"valueChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MatFormFieldControl,\n    useExisting: MatChipGrid\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c7,\n  decls: 2,\n  vars: 0,\n  consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n  template: function MatChipGrid_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [_c8],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipGrid, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-grid',\n      template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `,\n      inputs: ['tabIndex'],\n      host: {\n        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n        '[attr.role]': 'role',\n        '[tabIndex]': '_chips && _chips.length === 0 ? -1 : tabIndex',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()'\n      },\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatChipGrid\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2$1.NgForm,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2$1.FormGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.ErrorStateMatcher\n    }, {\n      type: i2$1.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    errorStateMatcher: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipRow, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Avatar image within a chip. */\n\n\nclass MatChipAvatar {}\n\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) {\n  return new (t || MatChipAvatar)();\n};\n\nMatChipAvatar.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatChipAvatar,\n  selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]],\n  hostAttrs: [\"role\", \"img\", 1, \"mat-mdc-chip-avatar\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--primary\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_CHIP_AVATAR,\n    useExisting: MatChipAvatar\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAvatar, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-avatar, [matChipAvatar]',\n      host: {\n        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n        'role': 'img'\n      },\n      providers: [{\n        provide: MAT_CHIP_AVATAR,\n        useExisting: MatChipAvatar\n      }]\n    }]\n  }], null, null);\n})();\n/** Non-interactive trailing icon in a chip. */\n\n\nclass MatChipTrailingIcon extends MatChipAction {\n  constructor() {\n    super(...arguments);\n    /**\n     * MDC considers all trailing actions as a remove icon,\n     * but we support non-interactive trailing icons.\n     */\n\n    this.isInteractive = false;\n    this._isPrimary = false;\n  }\n\n}\n\nMatChipTrailingIcon.ɵfac = /* @__PURE__ */function () {\n  let ɵMatChipTrailingIcon_BaseFactory;\n  return function MatChipTrailingIcon_Factory(t) {\n    return (ɵMatChipTrailingIcon_BaseFactory || (ɵMatChipTrailingIcon_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipTrailingIcon)))(t || MatChipTrailingIcon);\n  };\n}();\n\nMatChipTrailingIcon.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatChipTrailingIcon,\n  selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]],\n  hostAttrs: [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-trailing-icon\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_CHIP_TRAILING_ICON,\n    useExisting: MatChipTrailingIcon\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n      host: {\n        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'aria-hidden': 'true'\n      },\n      providers: [{\n        provide: MAT_CHIP_TRAILING_ICON,\n        useExisting: MatChipTrailingIcon\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\n\n\nclass MatChipRemove extends MatChipAction {\n  constructor() {\n    super(...arguments);\n    this._isPrimary = false;\n  }\n\n  _handleClick(event) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n\n      this._parentChip.remove();\n    }\n  }\n\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n\n      this._parentChip.remove();\n    }\n  }\n\n}\n\nMatChipRemove.ɵfac = /* @__PURE__ */function () {\n  let ɵMatChipRemove_BaseFactory;\n  return function MatChipRemove_Factory(t) {\n    return (ɵMatChipRemove_BaseFactory || (ɵMatChipRemove_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipRemove)))(t || MatChipRemove);\n  };\n}();\n\nMatChipRemove.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatChipRemove,\n  selectors: [[\"\", \"matChipRemove\", \"\"]],\n  hostAttrs: [\"role\", \"button\", 1, \"mat-mdc-chip-remove\", \"mat-mdc-chip-trailing-icon\", \"mat-mdc-focus-indicator\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n  hostVars: 1,\n  hostBindings: function MatChipRemove_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-hidden\", null);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_CHIP_REMOVE,\n    useExisting: MatChipRemove\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRemove, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipRemove]',\n      host: {\n        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-mdc-focus-indicator ' + 'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'role': 'button',\n        '[attr.aria-hidden]': 'null'\n      },\n      providers: [{\n        provide: MAT_CHIP_REMOVE,\n        useExisting: MatChipRemove\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids.\n\n\nlet nextUniqueId = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\n\nclass MatChipInput {\n  constructor(_elementRef, _defaultOptions, formField) {\n    this._elementRef = _elementRef;\n    this._defaultOptions = _defaultOptions;\n    /** Whether the control is focused. */\n\n    this.focused = false;\n    this._addOnBlur = false;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     */\n\n    this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n    /** Emitted when a chip is to be added. */\n\n    this.chipEnd = new EventEmitter();\n    /** The input's placeholder text. */\n\n    this.placeholder = '';\n    /** Unique id for the input. */\n\n    this.id = `mat-mdc-chip-list-input-${nextUniqueId++}`;\n    this._disabled = false;\n    this.inputElement = this._elementRef.nativeElement;\n\n    if (formField) {\n      this.inputElement.classList.add('mat-mdc-form-field-input-control');\n    }\n  }\n  /** Register input for chip list */\n\n\n  set chipGrid(value) {\n    if (value) {\n      this._chipGrid = value;\n\n      this._chipGrid.registerInput(this);\n    }\n  }\n  /**\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\n   */\n\n\n  get addOnBlur() {\n    return this._addOnBlur;\n  }\n\n  set addOnBlur(value) {\n    this._addOnBlur = coerceBooleanProperty(value);\n  }\n  /** Whether the input is disabled. */\n\n\n  get disabled() {\n    return this._disabled || this._chipGrid && this._chipGrid.disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  /** Whether the input is empty. */\n\n\n  get empty() {\n    return !this.inputElement.value;\n  }\n\n  ngOnChanges() {\n    this._chipGrid.stateChanges.next();\n  }\n\n  ngOnDestroy() {\n    this.chipEnd.complete();\n  }\n\n  ngAfterContentInit() {\n    this._focusLastChipOnBackspace = this.empty;\n  }\n  /** Utility method to make host definition/tests more clear. */\n\n\n  _keydown(event) {\n    if (event) {\n      // To prevent the user from accidentally deleting chips when pressing BACKSPACE continuously,\n      // We focus the last chip on backspace only after the user has released the backspace button,\n      // And the input is empty (see behaviour in _keyup)\n      if (event.keyCode === BACKSPACE && this._focusLastChipOnBackspace) {\n        this._chipGrid._focusLastChip();\n\n        event.preventDefault();\n        return;\n      } else {\n        this._focusLastChipOnBackspace = false;\n      }\n    }\n\n    this._emitChipEnd(event);\n  }\n  /**\n   * Pass events to the keyboard manager. Available here for tests.\n   */\n\n\n  _keyup(event) {\n    // Allow user to move focus to chips next time he presses backspace\n    if (!this._focusLastChipOnBackspace && event.keyCode === BACKSPACE && this.empty) {\n      this._focusLastChipOnBackspace = true;\n      event.preventDefault();\n    }\n  }\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n\n\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n\n    this.focused = false; // Blur the chip list if it is not focused\n\n    if (!this._chipGrid.focused) {\n      this._chipGrid._blur();\n    }\n\n    this._chipGrid.stateChanges.next();\n  }\n\n  _focus() {\n    this.focused = true;\n    this._focusLastChipOnBackspace = this.empty;\n\n    this._chipGrid.stateChanges.next();\n  }\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n\n\n  _emitChipEnd(event) {\n    if (!event || this._isSeparatorKey(event)) {\n      this.chipEnd.emit({\n        input: this.inputElement,\n        value: this.inputElement.value,\n        chipInput: this\n      });\n      event === null || event === void 0 ? void 0 : event.preventDefault();\n    }\n  }\n\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipGrid.stateChanges.next();\n  }\n  /** Focuses the input. */\n\n\n  focus() {\n    this.inputElement.focus();\n  }\n  /** Clears the input */\n\n\n  clear() {\n    this.inputElement.value = '';\n    this._focusLastChipOnBackspace = true;\n  }\n\n  setDescribedByIds(ids) {\n    this._ariaDescribedby = ids.join(' ');\n  }\n  /** Checks whether a keycode is one of the configured separators. */\n\n\n  _isSeparatorKey(event) {\n    return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n  }\n\n}\n\nMatChipInput.ɵfac = function MatChipInput_Factory(t) {\n  return new (t || MatChipInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8));\n};\n\nMatChipInput.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatChipInput,\n  selectors: [[\"input\", \"matChipInputFor\", \"\"]],\n  hostAttrs: [1, \"mat-mdc-chip-input\", \"mat-mdc-input-element\", \"mdc-text-field__input\", \"mat-input-element\"],\n  hostVars: 7,\n  hostBindings: function MatChipInput_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) {\n        return ctx._keydown($event);\n      })(\"keyup\", function MatChipInput_keyup_HostBindingHandler($event) {\n        return ctx._keyup($event);\n      })(\"blur\", function MatChipInput_blur_HostBindingHandler() {\n        return ctx._blur();\n      })(\"focus\", function MatChipInput_focus_HostBindingHandler() {\n        return ctx._focus();\n      })(\"input\", function MatChipInput_input_HostBindingHandler() {\n        return ctx._onInput();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipGrid && ctx._chipGrid.ngControl ? ctx._chipGrid.ngControl.invalid : null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx._chipGrid && ctx._chipGrid.required || null)(\"required\", ctx._chipGrid && ctx._chipGrid.required || null);\n    }\n  },\n  inputs: {\n    chipGrid: [\"matChipInputFor\", \"chipGrid\"],\n    addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"],\n    separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"],\n    placeholder: \"placeholder\",\n    id: \"id\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    chipEnd: \"matChipInputTokenEnd\"\n  },\n  exportAs: [\"matChipInput\", \"matChipInputFor\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matChipInputFor]',\n      exportAs: 'matChipInput, matChipInputFor',\n      host: {\n        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n        // the MDC chips were landed initially with it.\n        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n        '(keydown)': '_keydown($event)',\n        '(keyup)': '_keyup($event)',\n        '(blur)': '_blur()',\n        '(focus)': '_focus()',\n        '(input)': '_onInput()',\n        '[id]': 'id',\n        '[attr.disabled]': 'disabled || null',\n        '[attr.placeholder]': 'placeholder || null',\n        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n        '[attr.aria-describedby]': '_ariaDescribedby || null',\n        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n        '[attr.required]': '_chipGrid && _chipGrid.required || null'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_CHIPS_DEFAULT_OPTIONS]\n      }]\n    }, {\n      type: i1$2.MatFormField,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_FORM_FIELD]\n      }]\n    }];\n  }, {\n    chipGrid: [{\n      type: Input,\n      args: ['matChipInputFor']\n    }],\n    addOnBlur: [{\n      type: Input,\n      args: ['matChipInputAddOnBlur']\n    }],\n    separatorKeyCodes: [{\n      type: Input,\n      args: ['matChipInputSeparatorKeyCodes']\n    }],\n    chipEnd: [{\n      type: Output,\n      args: ['matChipInputTokenEnd']\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst CHIP_DECLARATIONS = [MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipInput, MatChipListbox, MatChipOption, MatChipRemove, MatChipRow, MatChipSet, MatChipTrailingIcon];\n\nclass MatChipsModule {}\n\nMatChipsModule.ɵfac = function MatChipsModule_Factory(t) {\n  return new (t || MatChipsModule)();\n};\n\nMatChipsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatChipsModule\n});\nMatChipsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [ErrorStateMatcher, {\n    provide: MAT_CHIPS_DEFAULT_OPTIONS,\n    useValue: {\n      separatorKeyCodes: [ENTER]\n    }\n  }],\n  imports: [MatCommonModule, CommonModule, MatRippleModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CommonModule, MatRippleModule],\n      exports: [MatCommonModule, CHIP_DECLARATIONS],\n      declarations: [MatChipAction, CHIP_DECLARATIONS],\n      providers: [ErrorStateMatcher, {\n        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n        useValue: {\n          separatorKeyCodes: [ENTER]\n        }\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };","map":{"version":3,"names":["coerceBooleanProperty","ANIMATION_MODULE_TYPE","i0","InjectionToken","Directive","Inject","Input","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Attribute","Output","ContentChild","ViewChild","QueryList","ContentChildren","forwardRef","Self","NgModule","i2","DOCUMENT","CommonModule","i3","mixinTabIndex","mixinColor","mixinDisableRipple","mixinDisabled","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","mixinErrorState","MatCommonModule","MatRippleModule","ErrorStateMatcher","Subject","merge","take","takeUntil","startWith","switchMap","ENTER","SPACE","BACKSPACE","DELETE","TAB","hasModifierKey","i1","FocusKeyManager","i1$1","i2$1","NG_VALUE_ACCESSOR","Validators","i1$2","MatFormFieldControl","MAT_FORM_FIELD","MAT_CHIPS_DEFAULT_OPTIONS","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MAT_CHIP_REMOVE","MAT_CHIP","_MatChipActionBase","_MatChipActionMixinBase","MatChipAction","constructor","_elementRef","_parentChip","isInteractive","_isPrimary","_disabled","_allowFocusWhenDisabled","nativeElement","nodeName","setAttribute","disabled","value","_getDisabledAttribute","_getTabindex","tabIndex","toString","focus","_handleClick","event","preventDefault","_handlePrimaryActionInteraction","_handleKeydown","keyCode","ɵfac","ElementRef","ɵdir","type","args","selector","inputs","host","undefined","decorators","uid","_MatChipMixinBase","MatChip","_changeDetectorRef","elementRef","_ngZone","_focusMonitor","_document","animationMode","_globalRippleOptions","_a","_isRippleCentered","_onFocus","_onBlur","role","_hasFocusInternal","id","ariaLabel","_removable","_highlighted","removed","destroyed","basicChipAttrName","element","_animationsDisabled","_isBasicChip","hasAttribute","tagName","toLowerCase","parseInt","defaultTabIndex","_monitorFocus","_hasFocus","_value","_textElement","textContent","trim","removable","highlighted","ngAfterViewInit","querySelector","_pendingFocus","ngOnDestroy","stopMonitoring","emit","chip","complete","remove","_isRippleDisabled","disableRipple","_hasTrailingIcon","trailingIcon","removeIcon","primaryAction","_getSourceAction","target","_getActions","find","action","contains","result","push","monitor","subscribe","origin","hasFocus","next","onStable","pipe","run","ChangeDetectorRef","NgZone","FocusMonitor","ɵcmp","provide","useExisting","NgIf","exportAs","encapsulation","None","changeDetection","OnPush","providers","template","styles","leadingIcon","ripple","MatChipSelectionChange","source","selected","isUserInput","MatChipOption","arguments","chipListSelectable","_chipListMultiple","_selectable","_selected","selectionChange","selectable","markForCheck","_setSelectedState","ariaSelected","ngOnInit","select","deselect","selectViaInteraction","toggleSelected","isSelected","emitEvent","MatChipEditInput","initialize","initialValue","getNativeElement","setValue","_moveCursorToEndOfInput","getValue","range","createRange","selectNodeContents","collapse","sel","window","getSelection","removeAllRanges","addRange","MatChipRow","changeDetectorRef","ngZone","focusMonitor","globalRippleOptions","_editStartPending","editable","edited","_isEditing","_onEditFinish","_mousedown","_startEditing","stopPropagation","_doubleclick","setTimeout","_getEditInput","activeElement","body","contentEditInput","defaultEditInput","NgSwitch","NgSwitchCase","MatChipSetBase","_MatChipSetMixinBase","MatChipSet","_dir","_lastDestroyedFocusedChipIndex","_destroyed","_defaultRole","_explicitRole","_chipActions","chipFocusChanges","_getChipStream","chipDestroyedChanges","_syncChipsState","empty","_chips","length","focused","_hasFocusedChip","_setUpFocusManagement","_trackChipSetChanges","_trackDestroyedFocusedChip","_keyManager","destroy","some","forEach","_originatesFromChip","onKeydown","_isValidIndex","index","_allowFocusEscape","previousTabIndex","mappingFunction","changes","map","currentElement","classList","parentElement","chips","actions","reset","notifyOnChanges","withVerticalOrientation","withHorizontalOrientation","withHomeAndEnd","skipPredicate","_skipPredicate","document","updateActiveItem","change","direction","Promise","resolve","then","_redirectDestroyedChipFocus","chipArray","toArray","chipIndex","indexOf","newIndex","Math","min","chipToFocus","setPreviousItemActive","Directionality","descendants","MatChipListboxChange","MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR","MatChipListbox","multi","_onTouched","_onChange","_multiple","ariaOrientation","compareWith","o1","o2","_required","multiple","_syncListboxProperties","selectedChips","filter","required","chipSelectionChanges","chipBlurChanges","writeValue","ngAfterContentInit","_blur","_propagateChanges","firstSelectedChip","_getFirstSelectedChip","setFirstItemActive","_setSelectionByValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_clearSelection","Array","isArray","currentValue","_selectValue","_markAsTouched","_keydown","valueToEmit","skip","correspondingChip","MatChipGridChange","MatChipGridBase","dir","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","stateChanges","_MatChipGridMixinBase","MatChipGrid","parentForm","parentFormGroup","defaultErrorStateMatcher","controlType","_ariaDescribedbyIds","valueChange","valueAccessor","_chipInput","placeholder","_placeholder","_b","_c","_d","control","hasValidator","shouldLabelFloat","ngDevMode","Error","ngDoCheck","updateErrorState","registerInput","inputElement","setDescribedByIds","onContainerClick","first","ids","last","activeItem","setActiveItem","_focusLastChip","NgForm","FormGroupDirective","NgControl","errorStateMatcher","MatChipAvatar","MatChipTrailingIcon","MatChipRemove","nextUniqueId","MatChipInput","_defaultOptions","formField","_addOnBlur","separatorKeyCodes","chipEnd","add","chipGrid","_chipGrid","addOnBlur","ngOnChanges","_focusLastChipOnBackspace","_emitChipEnd","_keyup","_focus","_isSeparatorKey","input","chipInput","_onInput","clear","_ariaDescribedby","join","Set","has","MatFormField","CHIP_DECLARATIONS","MatChipsModule","ɵmod","ɵinj","useValue","imports","exports","declarations"],"sources":["C:/Users/Henry/Desktop/New folder/Atomas2/node_modules/@angular/material/fesm2015/chips.mjs"],"sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Input, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute, Output, ContentChild, ViewChild, QueryList, ContentChildren, forwardRef, Self, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i3 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, mixinErrorState, MatCommonModule, MatRippleModule, ErrorStateMatcher } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport * as i1$2 from '@angular/material/form-field';\nimport { MatFormFieldControl, MAT_FORM_FIELD } from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass _MatChipActionBase {\n}\nconst _MatChipActionMixinBase = mixinTabIndex(_MatChipActionBase, -1);\n/**\n * Section within a chip.\n * @docs-private\n */\nclass MatChipAction extends _MatChipActionMixinBase {\n    constructor(_elementRef, _parentChip) {\n        super();\n        this._elementRef = _elementRef;\n        this._parentChip = _parentChip;\n        /** Whether the action is interactive. */\n        this.isInteractive = true;\n        /** Whether this is the primary action in the chip. */\n        this._isPrimary = true;\n        this._disabled = false;\n        /**\n         * Private API to allow focusing this chip when it is disabled.\n         */\n        this._allowFocusWhenDisabled = false;\n        if (_elementRef.nativeElement.nodeName === 'BUTTON') {\n            _elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /** Whether the action is disabled. */\n    get disabled() {\n        return this._disabled || this._parentChip.disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Determine the value of the disabled attribute for this chip action.\n     */\n    _getDisabledAttribute() {\n        // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n        // string to indicate that disabled attribute should be included.\n        return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n    }\n    /**\n     * Determine the value of the tabindex attribute for this chip action.\n     */\n    _getTabindex() {\n        return (this.disabled && !this._allowFocusWhenDisabled) || !this.isInteractive\n            ? null\n            : this.tabIndex.toString();\n    }\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    _handleClick(event) {\n        if (!this.disabled && this.isInteractive && this._isPrimary) {\n            event.preventDefault();\n            this._parentChip._handlePrimaryActionInteraction();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) &&\n            !this.disabled &&\n            this.isInteractive &&\n            this._isPrimary) {\n            event.preventDefault();\n            this._parentChip._handlePrimaryActionInteraction();\n        }\n    }\n}\nMatChipAction.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipAction, deps: [{ token: i0.ElementRef }, { token: MAT_CHIP }], target: i0.ɵɵFactoryTarget.Directive });\nMatChipAction.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatChipAction, selector: \"[matChipAction]\", inputs: { disabled: \"disabled\", tabIndex: \"tabIndex\", isInteractive: \"isInteractive\", _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\" }, host: { listeners: { \"click\": \"_handleClick($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-evolution-chip__action--primary\": \"_isPrimary\", \"class.mdc-evolution-chip__action--presentational\": \"_isPrimary\", \"class.mdc-evolution-chip__action--trailing\": \"!_isPrimary\", \"attr.tabindex\": \"_getTabindex()\", \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"disabled\" }, classAttribute: \"mdc-evolution-chip__action mat-mdc-chip-action\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipAction, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipAction]',\n                    inputs: ['disabled', 'tabIndex'],\n                    host: {\n                        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n                        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n                        // Note that while our actions are interactive, we have to add the `--presentational` class,\n                        // in order to avoid some super-specific `:hover` styles from MDC.\n                        '[class.mdc-evolution-chip__action--presentational]': '_isPrimary',\n                        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary',\n                        '[attr.tabindex]': '_getTabindex()',\n                        '[attr.disabled]': '_getDisabledAttribute()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '(click)': '_handleClick($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_CHIP]\n                    }] }];\n    }, propDecorators: { isInteractive: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], _allowFocusWhenDisabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet uid = 0;\n/**\n * Boilerplate for applying mixins to MatChip.\n * @docs-private\n */\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n})), 'primary'), -1);\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\nclass MatChip extends _MatChipMixinBase {\n    constructor(_changeDetectorRef, elementRef, _ngZone, _focusMonitor, _document, animationMode, _globalRippleOptions, tabIndex) {\n        var _a;\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._focusMonitor = _focusMonitor;\n        this._globalRippleOptions = _globalRippleOptions;\n        /** Whether the ripple is centered on the chip. */\n        this._isRippleCentered = false;\n        /** Emits when the chip is focused. */\n        this._onFocus = new Subject();\n        /** Emits when the chip is blurred. */\n        this._onBlur = new Subject();\n        /** Role for the root of the chip. */\n        this.role = null;\n        /** Whether the chip has focus. */\n        this._hasFocusInternal = false;\n        /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n        this.id = `mat-mdc-chip-${uid++}`;\n        /** ARIA label for the content of the chip. */\n        this.ariaLabel = null;\n        this._removable = true;\n        this._highlighted = false;\n        /** Emitted when a chip is to be removed. */\n        this.removed = new EventEmitter();\n        /** Emitted when the chip is destroyed. */\n        this.destroyed = new EventEmitter();\n        /** The unstyled chip selector for this component. */\n        this.basicChipAttrName = 'mat-basic-chip';\n        const element = elementRef.nativeElement;\n        this._document = _document;\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this._isBasicChip =\n            element.hasAttribute(this.basicChipAttrName) ||\n                element.tagName.toLowerCase() === this.basicChipAttrName;\n        if (tabIndex != null) {\n            this.tabIndex = (_a = parseInt(tabIndex)) !== null && _a !== void 0 ? _a : this.defaultTabIndex;\n        }\n        this._monitorFocus();\n    }\n    _hasFocus() {\n        return this._hasFocusInternal;\n    }\n    /**\n     * The value of the chip. Defaults to the content inside\n     * the `mat-mdc-chip-action-label` element.\n     */\n    get value() {\n        return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n    }\n    set value(value) {\n        this._value = value;\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    get removable() {\n        return this._removable;\n    }\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /**\n     * Colors the chip for emphasis as if it were selected.\n     */\n    get highlighted() {\n        return this._highlighted;\n    }\n    set highlighted(value) {\n        this._highlighted = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n        if (this._pendingFocus) {\n            this._pendingFocus = false;\n            this.focus();\n        }\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this.destroyed.emit({ chip: this });\n        this.destroyed.complete();\n    }\n    /**\n     * Allows for programmatic removal of the chip.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Whether or not the ripple should be disabled. */\n    _isRippleDisabled() {\n        var _a;\n        return (this.disabled ||\n            this.disableRipple ||\n            this._animationsDisabled ||\n            this._isBasicChip ||\n            !!((_a = this._globalRippleOptions) === null || _a === void 0 ? void 0 : _a.disabled));\n    }\n    /** Returns whether the chip has a trailing icon. */\n    _hasTrailingIcon() {\n        return !!(this.trailingIcon || this.removeIcon);\n    }\n    /** Handles keyboard events on the chip. */\n    _handleKeydown(event) {\n        if (event.keyCode === BACKSPACE || event.keyCode === DELETE) {\n            event.preventDefault();\n            this.remove();\n        }\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this.disabled) {\n            // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n            // This can happen if the consumer tries to focus a chip immediately after it is added.\n            // Queue the method to be called again on init.\n            if (this.primaryAction) {\n                this.primaryAction.focus();\n            }\n            else {\n                this._pendingFocus = true;\n            }\n        }\n    }\n    /** Gets the action that contains a specific target node. */\n    _getSourceAction(target) {\n        return this._getActions().find(action => {\n            const element = action._elementRef.nativeElement;\n            return element === target || element.contains(target);\n        });\n    }\n    /** Gets all of the actions within the chip. */\n    _getActions() {\n        const result = [];\n        if (this.primaryAction) {\n            result.push(this.primaryAction);\n        }\n        if (this.removeIcon) {\n            result.push(this.removeIcon);\n        }\n        if (this.trailingIcon) {\n            result.push(this.trailingIcon);\n        }\n        return result;\n    }\n    /** Handles interactions with the primary action of the chip. */\n    _handlePrimaryActionInteraction() {\n        // Empty here, but is overwritten in child classes.\n    }\n    /** Starts the focus monitoring process on the chip. */\n    _monitorFocus() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const hasFocus = origin !== null;\n            if (hasFocus !== this._hasFocusInternal) {\n                this._hasFocusInternal = hasFocus;\n                if (hasFocus) {\n                    this._onFocus.next({ chip: this });\n                }\n                else {\n                    // When animations are enabled, Angular may end up removing the chip from the DOM a little\n                    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n                    // that moves focus not the next item. To work around the issue, we defer marking the chip\n                    // as not focused until the next time the zone stabilizes.\n                    this._ngZone.onStable\n                        .pipe(take(1))\n                        .subscribe(() => this._ngZone.run(() => this._onBlur.next({ chip: this })));\n                }\n            }\n        });\n    }\n}\nMatChip.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChip, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i1.FocusMonitor }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatChip.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatChip, selector: \"mat-basic-chip, mat-chip\", inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", role: \"role\", id: \"id\", ariaLabel: [\"aria-label\", \"ariaLabel\"], value: \"value\", removable: \"removable\", highlighted: \"highlighted\" }, outputs: { removed: \"removed\", destroyed: \"destroyed\" }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-basic-chip\": \"_isBasicChip\", \"class.mat-mdc-standard-chip\": \"!_isBasicChip\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"class._mat-animation-noopable\": \"_animationsDisabled\", \"id\": \"id\", \"attr.role\": \"role\", \"attr.tabindex\": \"role ? tabIndex : null\", \"attr.aria-label\": \"ariaLabel\" }, classAttribute: \"mat-mdc-chip\" }, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], queries: [{ propertyName: \"leadingIcon\", first: true, predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"trailingIcon\", first: true, predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"removeIcon\", first: true, predicate: MAT_CHIP_REMOVE, descendants: true }], viewQueries: [{ propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }, { propertyName: \"primaryAction\", first: true, predicate: MatChipAction, descendants: true }], exportAs: [\"matChip\"], usesInheritance: true, ngImport: i0, template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <div matChipAction [isInteractive]=\\\"false\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </div>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"disabled\", \"tabIndex\", \"isInteractive\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChip, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-basic-chip, mat-chip', inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'], exportAs: 'matChip', host: {\n                        'class': 'mat-mdc-chip',\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n                        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                        '[id]': 'id',\n                        '[attr.role]': 'role',\n                        '[attr.tabindex]': 'role ? tabIndex : null',\n                        '[attr.aria-label]': 'ariaLabel',\n                        '(keydown)': '_handleKeydown($event)',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <div matChipAction [isInteractive]=\\\"false\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </div>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }];\n    }, propDecorators: { role: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], value: [{\n                type: Input\n            }], removable: [{\n                type: Input\n            }], highlighted: [{\n                type: Input\n            }], removed: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], leadingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_AVATAR]\n            }], trailingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_TRAILING_ICON]\n            }], removeIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_REMOVE]\n            }], ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], primaryAction: [{\n                type: ViewChild,\n                args: [MatChipAction]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\nclass MatChipOption extends MatChip {\n    constructor() {\n        super(...arguments);\n        /** Whether the chip list is selectable. */\n        this.chipListSelectable = true;\n        /** Whether the chip list is in multi-selection mode. */\n        this._chipListMultiple = false;\n        this._selectable = true;\n        this._selected = false;\n        /** The unstyled chip selector for this component. */\n        this.basicChipAttrName = 'mat-basic-chip-option';\n        /** Emitted when the chip is selected or deselected. */\n        this.selectionChange = new EventEmitter();\n    }\n    /**\n     * Whether or not the chip is selectable.\n     *\n     * When a chip is not selectable, changes to its selected state are always\n     * ignored. By default an option chip is selectable, and it becomes\n     * non-selectable if its parent chip list is not selectable.\n     */\n    get selectable() {\n        return this._selectable && this.chipListSelectable;\n    }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the chip is selected. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        this._setSelectedState(coerceBooleanProperty(value), false, true);\n    }\n    /**\n     * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n     * interaction patterns.\n     *\n     * From [WAI ARIA Listbox authoring practices guide](\n     * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n     *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n     *  set to true. All options that are selectable but not selected have either aria-selected or\n     *  aria-checked set to false.\"\n     *\n     * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n     * VoiceOver reading every option as \"selected\" (#25736).\n     */\n    get ariaSelected() {\n        return this.selectable ? this.selected.toString() : null;\n    }\n    ngOnInit() {\n        this.role = 'presentation';\n    }\n    /** Selects the chip. */\n    select() {\n        this._setSelectedState(true, false, true);\n    }\n    /** Deselects the chip. */\n    deselect() {\n        this._setSelectedState(false, false, true);\n    }\n    /** Selects this chip and emits userInputSelection event */\n    selectViaInteraction() {\n        this._setSelectedState(true, true, true);\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._setSelectedState(!this.selected, isUserInput, true);\n        return this.selected;\n    }\n    _handlePrimaryActionInteraction() {\n        if (this.selectable && !this.disabled) {\n            this.toggleSelected(true);\n        }\n    }\n    _setSelectedState(isSelected, isUserInput, emitEvent) {\n        if (isSelected !== this.selected) {\n            this._selected = isSelected;\n            if (emitEvent) {\n                this.selectionChange.emit({\n                    source: this,\n                    isUserInput,\n                    selected: this.selected,\n                });\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChipOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipOption, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatChipOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatChipOption, selector: \"mat-basic-chip-option, mat-chip-option\", inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selectable: \"selectable\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, host: { properties: { \"class.mat-mdc-chip-selected\": \"selected\", \"class.mat-mdc-chip-multiple\": \"_chipListMultiple\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--selected\": \"selected\", \"class.mdc-evolution-chip--selecting\": \"!_animationsDisabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.role\": \"role\", \"id\": \"id\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-option mdc-evolution-chip mdc-evolution-chip--filter mdc-evolution-chip--selectable mdc-evolution-chip--with-primary-graphic\" }, providers: [\n        { provide: MatChip, useExisting: MatChipOption },\n        { provide: MAT_CHIP, useExisting: MatChipOption },\n    ], usesInheritance: true, ngImport: i0, template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    role=\\\"option\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n        <svg class=\\\"mdc-evolution-chip__checkmark-svg\\\" viewBox=\\\"-2 -3 30 30\\\" focusable=\\\"false\\\">\\n          <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n        </svg>\\n      </span>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"disabled\", \"tabIndex\", \"isInteractive\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-basic-chip-option, mat-chip-option', inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'], host: {\n                        'class': 'mat-mdc-chip mat-mdc-chip-option mdc-evolution-chip mdc-evolution-chip--filter mdc-evolution-chip--selectable mdc-evolution-chip--with-primary-graphic',\n                        '[class.mat-mdc-chip-selected]': 'selected',\n                        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--selected]': 'selected',\n                        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n                        // starts and removes it once the animation is finished. We don't need to go through all\n                        // the trouble, because we only care about the selection animation. MDC needs to do it,\n                        // because they also have an exit animation that we don't care about.\n                        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.role]': 'role',\n                        '[id]': 'id',\n                    }, providers: [\n                        { provide: MatChip, useExisting: MatChipOption },\n                        { provide: MAT_CHIP, useExisting: MatChipOption },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    role=\\\"option\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n        <svg class=\\\"mdc-evolution-chip__checkmark-svg\\\" viewBox=\\\"-2 -3 30 30\\\" focusable=\\\"false\\\">\\n          <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n        </svg>\\n      </span>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], propDecorators: { selectable: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\nclass MatChipEditInput {\n    constructor(_elementRef, _document) {\n        this._elementRef = _elementRef;\n        this._document = _document;\n    }\n    initialize(initialValue) {\n        this.getNativeElement().focus();\n        this.setValue(initialValue);\n    }\n    getNativeElement() {\n        return this._elementRef.nativeElement;\n    }\n    setValue(value) {\n        this.getNativeElement().textContent = value;\n        this._moveCursorToEndOfInput();\n    }\n    getValue() {\n        return this.getNativeElement().textContent || '';\n    }\n    _moveCursorToEndOfInput() {\n        const range = this._document.createRange();\n        range.selectNodeContents(this.getNativeElement());\n        range.collapse(false);\n        const sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n}\nMatChipEditInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipEditInput, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatChipEditInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatChipEditInput, selector: \"span[matChipEditInput]\", host: { attributes: { \"role\": \"textbox\", \"tabindex\": \"-1\", \"contenteditable\": \"true\" }, classAttribute: \"mat-chip-edit-input\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipEditInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'span[matChipEditInput]',\n                    host: {\n                        'class': 'mat-chip-edit-input',\n                        'role': 'textbox',\n                        'tabindex': '-1',\n                        'contenteditable': 'true',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\nclass MatChipRow extends MatChip {\n    constructor(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex) {\n        super(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex);\n        this.basicChipAttrName = 'mat-basic-chip-row';\n        /**\n         * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n         * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n         * while the editing action is being initialized.\n         */\n        this._editStartPending = false;\n        this.editable = false;\n        /** Emitted when the chip is edited. */\n        this.edited = new EventEmitter();\n        this._isEditing = false;\n        this.role = 'row';\n        this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n            if (this._isEditing && !this._editStartPending) {\n                this._onEditFinish();\n            }\n        });\n    }\n    _hasTrailingIcon() {\n        // The trailing icon is hidden while editing.\n        return !this._isEditing && super._hasTrailingIcon();\n    }\n    /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n    _mousedown(event) {\n        if (!this._isEditing) {\n            if (!this.disabled) {\n                this.focus();\n            }\n            event.preventDefault();\n        }\n    }\n    _handleKeydown(event) {\n        if (event.keyCode === ENTER && !this.disabled) {\n            if (this._isEditing) {\n                event.preventDefault();\n                this._onEditFinish();\n            }\n            else if (this.editable) {\n                this._startEditing(event);\n            }\n        }\n        else if (this._isEditing) {\n            // Stop the event from reaching the chip set in order to avoid navigating.\n            event.stopPropagation();\n        }\n        else {\n            super._handleKeydown(event);\n        }\n    }\n    _doubleclick(event) {\n        if (!this.disabled && this.editable) {\n            this._startEditing(event);\n        }\n    }\n    _startEditing(event) {\n        if (!this.primaryAction ||\n            (this.removeIcon && this._getSourceAction(event.target) === this.removeIcon)) {\n            return;\n        }\n        // The value depends on the DOM so we need to extract it before we flip the flag.\n        const value = this.value;\n        this._isEditing = true;\n        this._editStartPending = true;\n        // Defer initializing the input so it has time to be added to the DOM.\n        setTimeout(() => {\n            this._getEditInput().initialize(value);\n            this._editStartPending = false;\n        });\n    }\n    _onEditFinish() {\n        this._isEditing = false;\n        this._editStartPending = false;\n        this.edited.emit({ chip: this, value: this._getEditInput().getValue() });\n        // If the edit input is still focused or focus was returned to the body after it was destroyed,\n        // return focus to the chip contents.\n        if (this._document.activeElement === this._getEditInput().getNativeElement() ||\n            this._document.activeElement === this._document.body) {\n            this.primaryAction.focus();\n        }\n    }\n    /**\n     * Gets the projected chip edit input, or the default input if none is projected in. One of these\n     * two values is guaranteed to be defined.\n     */\n    _getEditInput() {\n        return this.contentEditInput || this.defaultEditInput;\n    }\n}\nMatChipRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipRow, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i1.FocusMonitor }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatChipRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatChipRow, selector: \"mat-chip-row, mat-basic-chip-row\", inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", editable: \"editable\" }, outputs: { edited: \"edited\" }, host: { listeners: { \"mousedown\": \"_mousedown($event)\", \"dblclick\": \"_doubleclick($event)\" }, properties: { \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-editing\": \"_isEditing\", \"class.mat-mdc-chip-editable\": \"editable\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip\" }, providers: [\n        { provide: MatChip, useExisting: MatChipRow },\n        { provide: MAT_CHIP, useExisting: MatChipRow },\n    ], queries: [{ propertyName: \"contentEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], viewQueries: [{ propertyName: \"defaultEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"!_isEditing\\\">\\n  <span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n       [matRippleCentered]=\\\"_isRippleCentered\\\"\\n       [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n</ng-container>\\n\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\">\\n  <span\\n    matChipAction\\n    [attr.role]=\\\"editable ? 'button' : null\\\"\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\" [ngSwitch]=\\\"_isEditing\\\">\\n      <ng-container *ngSwitchCase=\\\"false\\\"><ng-content></ng-content></ng-container>\\n\\n      <ng-container *ngSwitchCase=\\\"true\\\">\\n        <ng-content *ngIf=\\\"contentEditInput; else defaultMatChipEditInput\\\"\\n                    select=\\\"[matChipEditInput]\\\"></ng-content>\\n        <ng-template #defaultMatChipEditInput><span matChipEditInput></span></ng-template>\\n      </ng-container>\\n\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  role=\\\"gridcell\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"disabled\", \"tabIndex\", \"isInteractive\", \"_allowFocusWhenDisabled\"] }, { kind: \"directive\", type: MatChipEditInput, selector: \"span[matChipEditInput]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipRow, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-row, mat-basic-chip-row', inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'], host: {\n                        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-editing]': '_isEditing',\n                        '[class.mat-mdc-chip-editable]': 'editable',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[id]': 'id',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.role]': 'role',\n                        '(mousedown)': '_mousedown($event)',\n                        '(dblclick)': '_doubleclick($event)',\n                    }, providers: [\n                        { provide: MatChip, useExisting: MatChipRow },\n                        { provide: MAT_CHIP, useExisting: MatChipRow },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container *ngIf=\\\"!_isEditing\\\">\\n  <span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n       [matRippleCentered]=\\\"_isRippleCentered\\\"\\n       [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n</ng-container>\\n\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\">\\n  <span\\n    matChipAction\\n    [attr.role]=\\\"editable ? 'button' : null\\\"\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\" [ngSwitch]=\\\"_isEditing\\\">\\n      <ng-container *ngSwitchCase=\\\"false\\\"><ng-content></ng-content></ng-container>\\n\\n      <ng-container *ngSwitchCase=\\\"true\\\">\\n        <ng-content *ngIf=\\\"contentEditInput; else defaultMatChipEditInput\\\"\\n                    select=\\\"[matChipEditInput]\\\"></ng-content>\\n        <ng-template #defaultMatChipEditInput><span matChipEditInput></span></ng-template>\\n      </ng-container>\\n\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  role=\\\"gridcell\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative}.mat-mdc-chip-action-label{text-align:left}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }];\n    }, propDecorators: { editable: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }], defaultEditInput: [{\n                type: ViewChild,\n                args: [MatChipEditInput]\n            }], contentEditInput: [{\n                type: ContentChild,\n                args: [MatChipEditInput]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Boilerplate for applying mixins to MatChipSet.\n * @docs-private\n */\nclass MatChipSetBase {\n    constructor(_elementRef) { }\n}\nconst _MatChipSetMixinBase = mixinTabIndex(MatChipSetBase);\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\nclass MatChipSet extends _MatChipSetMixinBase {\n    constructor(_elementRef, _changeDetectorRef, _dir) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        /** Index of the last destroyed chip that had focus. */\n        this._lastDestroyedFocusedChipIndex = null;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Role to use if it hasn't been overwritten by the user. */\n        this._defaultRole = 'presentation';\n        this._disabled = false;\n        this._explicitRole = null;\n        /** Flat list of all the actions contained within the chips. */\n        this._chipActions = new QueryList();\n    }\n    /** Combined stream of all of the child chips' focus events. */\n    get chipFocusChanges() {\n        return this._getChipStream(chip => chip._onFocus);\n    }\n    /** Combined stream of all of the child chips' remove events. */\n    get chipDestroyedChanges() {\n        return this._getChipStream(chip => chip.destroyed);\n    }\n    /** Whether the chip set is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /** Whether the chip list contains chips or not. */\n    get empty() {\n        return this._chips.length === 0;\n    }\n    /** The ARIA role applied to the chip set. */\n    get role() {\n        if (this._explicitRole) {\n            return this._explicitRole;\n        }\n        return this.empty ? null : this._defaultRole;\n    }\n    set role(value) {\n        this._explicitRole = value;\n    }\n    /** Whether any of the chips inside of this chip-set has focus. */\n    get focused() {\n        return this._hasFocusedChip();\n    }\n    ngAfterViewInit() {\n        this._setUpFocusManagement();\n        this._trackChipSetChanges();\n        this._trackDestroyedFocusedChip();\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this._keyManager) === null || _a === void 0 ? void 0 : _a.destroy();\n        this._chipActions.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this._chips && this._chips.some(chip => chip._hasFocus());\n    }\n    /** Syncs the chip-set's state with the individual chips. */\n    _syncChipsState() {\n        if (this._chips) {\n            this._chips.forEach(chip => {\n                chip.disabled = this._disabled;\n                chip._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n    focus() { }\n    /** Handles keyboard events on the chip set. */\n    _handleKeydown(event) {\n        if (this._originatesFromChip(event)) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this._chips.length;\n    }\n    /**\n     * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the grid from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        const previousTabIndex = this.tabIndex;\n        if (this.tabIndex !== -1) {\n            this.tabIndex = -1;\n            setTimeout(() => {\n                this.tabIndex = previousTabIndex;\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Gets a stream of events from all the chips within the set.\n     * The stream will automatically incorporate any newly-added chips.\n     */\n    _getChipStream(mappingFunction) {\n        return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            // Null check the classList, because IE and Edge don't support it on all elements.\n            if (currentElement.classList && currentElement.classList.contains('mdc-evolution-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Sets up the chip set's focus management logic. */\n    _setUpFocusManagement() {\n        var _a;\n        // Create a flat `QueryList` containing the actions of all of the chips.\n        // This allows us to navigate both within the chip and move to the next/previous\n        // one using the existing `ListKeyManager`.\n        this._chips.changes.pipe(startWith(this._chips)).subscribe((chips) => {\n            const actions = [];\n            chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n            this._chipActions.reset(actions);\n            this._chipActions.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._chipActions)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr')\n            .withHomeAndEnd()\n            .skipPredicate(action => this._skipPredicate(action));\n        // Keep the manager active index in sync so that navigation picks\n        // up from the current chip if the user clicks into the list directly.\n        this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({ chip }) => {\n            const action = chip._getSourceAction(document.activeElement);\n            if (action) {\n                this._keyManager.updateActiveItem(action);\n            }\n        });\n        (_a = this._dir) === null || _a === void 0 ? void 0 : _a.change.pipe(takeUntil(this._destroyed)).subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive and disabled actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n        // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n        // chips.\n        return !action.isInteractive || action.disabled;\n    }\n    /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n    _trackChipSetChanges() {\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => this._syncChipsState());\n            }\n            this._redirectDestroyedChipFocus();\n        });\n    }\n    /** Starts tracking the destroyed chips in order to capture the focused one. */\n    _trackDestroyedFocusedChip() {\n        this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe((event) => {\n            const chipArray = this._chips.toArray();\n            const chipIndex = chipArray.indexOf(event.chip);\n            // If the focused chip is destroyed, save its index so that we can move focus to the next\n            // chip. We only save the index here, rather than move the focus immediately, because we want\n            // to wait until the chip is removed from the chip list before focusing the next one. This\n            // allows us to keep focus on the same index if the chip gets swapped out.\n            if (this._isValidIndex(chipIndex) && event.chip._hasFocus()) {\n                this._lastDestroyedFocusedChipIndex = chipIndex;\n            }\n        });\n    }\n    /**\n     * Finds the next appropriate chip to move focus to,\n     * if the currently-focused chip is destroyed.\n     */\n    _redirectDestroyedChipFocus() {\n        if (this._lastDestroyedFocusedChipIndex == null) {\n            return;\n        }\n        if (this._chips.length) {\n            const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n            const chipToFocus = this._chips.toArray()[newIndex];\n            if (chipToFocus.disabled) {\n                // If we're down to one disabled chip, move focus back to the set.\n                if (this._chips.length === 1) {\n                    this.focus();\n                }\n                else {\n                    this._keyManager.setPreviousItemActive();\n                }\n            }\n            else {\n                chipToFocus.focus();\n            }\n        }\n        else {\n            this.focus();\n        }\n        this._lastDestroyedFocusedChipIndex = null;\n    }\n}\nMatChipSet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipSet, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatChipSet.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatChipSet, selector: \"mat-chip-set\", inputs: { disabled: \"disabled\", role: \"role\" }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip-set mdc-evolution-chip-set\" }, queries: [{ propertyName: \"_chips\", predicate: MatChip, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `, isInline: true, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipSet, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-set', template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `, host: {\n                        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n                        '(keydown)': '_handleKeydown($event)',\n                        '[attr.role]': 'role',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { disabled: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChip, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n    constructor(\n    /** Chip listbox that emitted the event. */\n    source, \n    /** Value of the chip listbox when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatChipListbox),\n    multi: true,\n};\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\nclass MatChipListbox extends MatChipSet {\n    constructor() {\n        super(...arguments);\n        /**\n         * Function when touched. Set as part of ControlValueAccessor implementation.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        /**\n         * Function when changed. Set as part of ControlValueAccessor implementation.\n         * @docs-private\n         */\n        this._onChange = () => { };\n        // TODO: MDC uses `grid` here\n        this._defaultRole = 'listbox';\n        this._multiple = false;\n        /** Orientation of the chip list. */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /**\n         * A function to compare the option values with the selected values. The first argument\n         * is a value from an option. The second is a value from the selection. A boolean\n         * should be returned.\n         */\n        this.compareWith = (o1, o2) => o1 === o2;\n        this._required = false;\n        /** Event emitted when the selected chip listbox value has been changed by the user. */\n        this.change = new EventEmitter();\n    }\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncListboxProperties();\n    }\n    /** The array of selected chips inside the chip listbox. */\n    get selected() {\n        const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n        return this.multiple ? selectedChips : selectedChips[0];\n    }\n    /**\n     * Whether or not this chip listbox is selectable.\n     *\n     * When a chip listbox is not selectable, the selected states for all\n     * the chips inside the chip listbox are always ignored.\n     */\n    get selectable() {\n        return this._selectable;\n    }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        this._syncListboxProperties();\n    }\n    /** Whether this chip listbox is required. */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return this._getChipStream(chip => chip.selectionChange);\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n        return this._getChipStream(chip => chip._onBlur);\n    }\n    /** The value of the listbox, which is the combined value of the selected chips. */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    ngAfterContentInit() {\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            // Update listbox selectable/multiple properties on chips\n            this._syncListboxProperties();\n        });\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n        this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (!this.multiple) {\n                this._chips.forEach(chip => {\n                    if (chip !== event.source) {\n                        chip._setSelectedState(false, false, false);\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /**\n     * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n     * are no selected chips.\n     */\n    focus() {\n        if (this.disabled) {\n            return;\n        }\n        const firstSelectedChip = this._getFirstSelectedChip();\n        if (firstSelectedChip && !firstSelectedChip.disabled) {\n            firstSelectedChip.focus();\n        }\n        else if (this._chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n        if (this._chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Selects all chips with value. */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n        }\n        else {\n            this._selectValue(value, isUserInput);\n        }\n    }\n    /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n    _blur() {\n        if (!this.disabled) {\n            // Wait to see if focus moves to an individual chip.\n            setTimeout(() => {\n                if (!this.focused) {\n                    this._propagateChanges();\n                    this._markAsTouched();\n                }\n            });\n        }\n    }\n    _keydown(event) {\n        if (event.keyCode === TAB) {\n            super._allowFocusEscape();\n        }\n    }\n    /** Marks the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : undefined;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListboxChange(this, valueToEmit));\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Deselects every chip in the listbox.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput) {\n        const correspondingChip = this._chips.find(chip => {\n            return chip.value != null && this.compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n        }\n        return correspondingChip;\n    }\n    /** Syncs the chip-listbox selection state with the individual chips. */\n    _syncListboxProperties() {\n        if (this._chips) {\n            // Defer setting the value in order to avoid the \"Expression\n            // has changed after it was checked\" errors from Angular.\n            Promise.resolve().then(() => {\n                this._chips.forEach(chip => {\n                    chip._chipListMultiple = this.multiple;\n                    chip.chipListSelectable = this._selectable;\n                    chip._changeDetectorRef.markForCheck();\n                });\n            });\n        }\n    }\n    /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n    _getFirstSelectedChip() {\n        if (Array.isArray(this.selected)) {\n            return this.selected.length ? this.selected[0] : undefined;\n        }\n        else {\n            return this.selected;\n        }\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n        // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n        // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n        // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n        // exceptions for compound widgets.\n        //\n        // From [Developing a Keyboard Interface](\n        // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n        //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n        //   Listbox...\"\n        return !action.isInteractive;\n    }\n}\nMatChipListbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipListbox, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatChipListbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatChipListbox, selector: \"mat-chip-listbox\", inputs: { tabIndex: \"tabIndex\", multiple: \"multiple\", ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], selectable: \"selectable\", compareWith: \"compareWith\", required: \"required\", value: \"value\" }, outputs: { change: \"change\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.role\": \"role\", \"tabIndex\": \"empty ? -1 : tabIndex\", \"attr.aria-describedby\": \"_ariaDescribedby || null\", \"attr.aria-required\": \"role ? required : null\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-multiselectable\": \"multiple\", \"attr.aria-orientation\": \"ariaOrientation\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mdc-evolution-chip-set mat-mdc-chip-listbox\" }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], queries: [{ propertyName: \"_chips\", predicate: MatChipOption, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `, isInline: true, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipListbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-listbox', template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `, inputs: ['tabIndex'], host: {\n                        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n                        '[attr.role]': 'role',\n                        '[tabIndex]': 'empty ? -1 : tabIndex',\n                        // TODO: replace this binding with use of AriaDescriber\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-required]': 'role ? required : null',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.aria-orientation]': 'ariaOrientation',\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-list-required]': 'required',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                        '(keydown)': '_keydown($event)',\n                    }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"] }]\n        }], propDecorators: { multiple: [{\n                type: Input\n            }], ariaOrientation: [{\n                type: Input,\n                args: ['aria-orientation']\n            }], selectable: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChipOption, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n    constructor(\n    /** Chip grid that emitted the event. */\n    source, \n    /** Value of the chip grid when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Boilerplate for applying mixins to MatChipGrid.\n * @docs-private\n */\nclass MatChipGridBase extends MatChipSet {\n    constructor(elementRef, changeDetectorRef, dir, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /**\n     * Form control bound to the component.\n     * Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    ngControl) {\n        super(elementRef, changeDetectorRef, dir);\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n        /**\n         * Emits whenever the component state changes and should cause the parent\n         * form-field to update. Implemented as part of `MatFormFieldControl`.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n    }\n}\nconst _MatChipGridMixinBase = mixinErrorState(MatChipGridBase);\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\nclass MatChipGrid extends _MatChipGridMixinBase {\n    constructor(elementRef, changeDetectorRef, dir, parentForm, parentFormGroup, defaultErrorStateMatcher, ngControl) {\n        super(elementRef, changeDetectorRef, dir, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-chip-grid';\n        this._defaultRole = 'grid';\n        /**\n         * List of element ids to propagate to the chipInput's aria-describedby attribute.\n         */\n        this._ariaDescribedbyIds = [];\n        /**\n         * Function when touched. Set as part of ControlValueAccessor implementation.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        /**\n         * Function when changed. Set as part of ControlValueAccessor implementation.\n         * @docs-private\n         */\n        this._onChange = () => { };\n        this._value = [];\n        /** Emits when the chip grid value has been changed by the user. */\n        this.change = new EventEmitter();\n        /**\n         * Emits whenever the raw value of the chip-grid changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput.id;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return ((!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0));\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n    get focused() {\n        return this._chipInput.focused || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        var _a, _b, _c, _d;\n        return (_d = (_a = this._required) !== null && _a !== void 0 ? _a : (_c = (_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c.hasValidator(Validators.required)) !== null && _d !== void 0 ? _d : false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return !this.empty || this.focused;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this._value = value;\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n        return this._getChipStream(chip => chip._onBlur);\n    }\n    ngAfterContentInit() {\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n        merge(this.chipFocusChanges, this._chips.changes)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.stateChanges.next());\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.stateChanges.complete();\n    }\n    /** Associates an HTML input element with this chip grid. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n        this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this.disabled && !this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first chip in this chip grid, or the associated input when there\n     * are no eligible chips.\n     */\n    focus() {\n        if (this.disabled || this._chipInput.focused) {\n            return;\n        }\n        if (!this._chips.length || this._chips.first.disabled) {\n            // Delay until the next tick, because this can cause a \"changed after checked\"\n            // error if the input does something on focus (e.g. opens an autocomplete).\n            Promise.resolve().then(() => this._chipInput.focus());\n        }\n        else if (this._chips.length) {\n            this._keyManager.setFirstItemActive();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        // We must keep this up to date to handle the case where ids are set\n        // before the chip input is registered.\n        this._ariaDescribedbyIds = ids;\n        if (this._chipInput) {\n            // Use a setTimeout in case this is being run during change detection\n            // and the chip input has already determined its host binding for\n            // aria-describedBy.\n            setTimeout(() => {\n                this._chipInput.setDescribedByIds(ids);\n            }, 0);\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n        // The user is responsible for creating the child chips, so we just store the value.\n        this._value = value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n    _blur() {\n        if (!this.disabled) {\n            // Check whether the focus moved to chip input.\n            // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n            // to chip input, do nothing.\n            // Timeout is needed to wait for the focus() event trigger on chip input.\n            setTimeout(() => {\n                if (!this.focused) {\n                    this._propagateChanges();\n                    this._markAsTouched();\n                }\n            });\n        }\n    }\n    /**\n     * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the grid from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (!this._chipInput.focused) {\n            super._allowFocusEscape();\n        }\n    }\n    /** Handles custom keyboard events. */\n    _handleKeydown(event) {\n        if (event.keyCode === TAB) {\n            if (this._chipInput.focused &&\n                hasModifierKey(event, 'shiftKey') &&\n                this._chips.length &&\n                !this._chips.last.disabled) {\n                event.preventDefault();\n                if (this._keyManager.activeItem) {\n                    this._keyManager.setActiveItem(this._keyManager.activeItem);\n                }\n                else {\n                    this._focusLastChip();\n                }\n            }\n            else {\n                // Use the super method here since it doesn't check for the input\n                // focused state. This allows focus to escape if there's only one\n                // disabled chip left in the list.\n                super._allowFocusEscape();\n            }\n        }\n        else if (!this._chipInput.focused) {\n            super._handleKeydown(event);\n        }\n        this.stateChanges.next();\n    }\n    _focusLastChip() {\n        if (this._chips.length) {\n            this._chips.last.focus();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n        const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n        this._value = valueToEmit;\n        this.change.emit(new MatChipGridChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n}\nMatChipGrid.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipGrid, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.Directionality, optional: true }, { token: i2$1.NgForm, optional: true }, { token: i2$1.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }, { token: i2$1.NgControl, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Component });\nMatChipGrid.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatChipGrid, selector: \"mat-chip-grid\", inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", placeholder: \"placeholder\", required: \"required\", value: \"value\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\" }, properties: { \"attr.role\": \"role\", \"tabIndex\": \"_chips && _chips.length === 0 ? -1 : tabIndex\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-invalid\": \"errorState\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], queries: [{ propertyName: \"_chips\", predicate: MatChipRow, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `, isInline: true, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipGrid, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-grid', template: `\n    <span class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </span>\n  `, inputs: ['tabIndex'], host: {\n                        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n                        '[attr.role]': 'role',\n                        '[tabIndex]': '_chips && _chips.length === 0 ? -1 : tabIndex',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n                        '[class.mat-mdc-chip-list-required]': 'required',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                    }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i2$1.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i2$1.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.ErrorStateMatcher }, { type: i2$1.NgControl, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }];\n    }, propDecorators: { disabled: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChipRow, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Avatar image within a chip. */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatChipAvatar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatChipAvatar, selector: \"mat-chip-avatar, [matChipAvatar]\", host: { attributes: { \"role\": \"img\" }, classAttribute: \"mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary\" }, providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-avatar, [matChipAvatar]',\n                    host: {\n                        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n                        'role': 'img',\n                    },\n                    providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }],\n                }]\n        }] });\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n    constructor() {\n        super(...arguments);\n        /**\n         * MDC considers all trailing actions as a remove icon,\n         * but we support non-interactive trailing icons.\n         */\n        this.isInteractive = false;\n        this._isPrimary = false;\n    }\n}\nMatChipTrailingIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipTrailingIcon, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatChipTrailingIcon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatChipTrailingIcon, selector: \"mat-chip-trailing-icon, [matChipTrailingIcon]\", host: { attributes: { \"aria-hidden\": \"true\" }, classAttribute: \"mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipTrailingIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                    host: {\n                        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n                        'aria-hidden': 'true',\n                    },\n                    providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }],\n                }]\n        }] });\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\nclass MatChipRemove extends MatChipAction {\n    constructor() {\n        super(...arguments);\n        this._isPrimary = false;\n    }\n    _handleClick(event) {\n        if (!this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip.remove();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip.remove();\n        }\n    }\n}\nMatChipRemove.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipRemove, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatChipRemove.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatChipRemove, selector: \"[matChipRemove]\", host: { attributes: { \"role\": \"button\" }, properties: { \"attr.aria-hidden\": \"null\" }, classAttribute: \"mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-mdc-focus-indicator mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipRemove, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipRemove]',\n                    host: {\n                        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-mdc-focus-indicator ' +\n                            'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n                        'role': 'button',\n                        '[attr.aria-hidden]': 'null',\n                    },\n                    providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\nclass MatChipInput {\n    constructor(_elementRef, _defaultOptions, formField) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /** Whether the control is focused. */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /** Emitted when a chip is to be added. */\n        this.chipEnd = new EventEmitter();\n        /** The input's placeholder text. */\n        this.placeholder = '';\n        /** Unique id for the input. */\n        this.id = `mat-mdc-chip-list-input-${nextUniqueId++}`;\n        this._disabled = false;\n        this.inputElement = this._elementRef.nativeElement;\n        if (formField) {\n            this.inputElement.classList.add('mat-mdc-form-field-input-control');\n        }\n    }\n    /** Register input for chip list */\n    set chipGrid(value) {\n        if (value) {\n            this._chipGrid = value;\n            this._chipGrid.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    get addOnBlur() {\n        return this._addOnBlur;\n    }\n    set addOnBlur(value) {\n        this._addOnBlur = coerceBooleanProperty(value);\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return this._disabled || (this._chipGrid && this._chipGrid.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether the input is empty. */\n    get empty() {\n        return !this.inputElement.value;\n    }\n    ngOnChanges() {\n        this._chipGrid.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.chipEnd.complete();\n    }\n    ngAfterContentInit() {\n        this._focusLastChipOnBackspace = this.empty;\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        if (event) {\n            // To prevent the user from accidentally deleting chips when pressing BACKSPACE continuously,\n            // We focus the last chip on backspace only after the user has released the backspace button,\n            // And the input is empty (see behaviour in _keyup)\n            if (event.keyCode === BACKSPACE && this._focusLastChipOnBackspace) {\n                this._chipGrid._focusLastChip();\n                event.preventDefault();\n                return;\n            }\n            else {\n                this._focusLastChipOnBackspace = false;\n            }\n        }\n        this._emitChipEnd(event);\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    _keyup(event) {\n        // Allow user to move focus to chips next time he presses backspace\n        if (!this._focusLastChipOnBackspace && event.keyCode === BACKSPACE && this.empty) {\n            this._focusLastChipOnBackspace = true;\n            event.preventDefault();\n        }\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipGrid.focused) {\n            this._chipGrid._blur();\n        }\n        this._chipGrid.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._focusLastChipOnBackspace = this.empty;\n        this._chipGrid.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({\n                input: this.inputElement,\n                value: this.inputElement.value,\n                chipInput: this,\n            });\n            event === null || event === void 0 ? void 0 : event.preventDefault();\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipGrid.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus() {\n        this.inputElement.focus();\n    }\n    /** Clears the input */\n    clear() {\n        this.inputElement.value = '';\n        this._focusLastChipOnBackspace = true;\n    }\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n}\nMatChipInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipInput, deps: [{ token: i0.ElementRef }, { token: MAT_CHIPS_DEFAULT_OPTIONS }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatChipInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatChipInput, selector: \"input[matChipInputFor]\", inputs: { chipGrid: [\"matChipInputFor\", \"chipGrid\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, host: { listeners: { \"keydown\": \"_keydown($event)\", \"keyup\": \"_keyup($event)\", \"blur\": \"_blur()\", \"focus\": \"_focus()\", \"input\": \"_onInput()\" }, properties: { \"id\": \"id\", \"attr.disabled\": \"disabled || null\", \"attr.placeholder\": \"placeholder || null\", \"attr.aria-invalid\": \"_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null\", \"attr.aria-describedby\": \"_ariaDescribedby || null\", \"attr.aria-required\": \"_chipGrid && _chipGrid.required || null\", \"attr.required\": \"_chipGrid && _chipGrid.required || null\" }, classAttribute: \"mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matChipInputFor]',\n                    exportAs: 'matChipInput, matChipInputFor',\n                    host: {\n                        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n                        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n                        // the MDC chips were landed initially with it.\n                        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n                        '(keydown)': '_keydown($event)',\n                        '(keyup)': '_keyup($event)',\n                        '(blur)': '_blur()',\n                        '(focus)': '_focus()',\n                        '(input)': '_onInput()',\n                        '[id]': 'id',\n                        '[attr.disabled]': 'disabled || null',\n                        '[attr.placeholder]': 'placeholder || null',\n                        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n                        '[attr.required]': '_chipGrid && _chipGrid.required || null',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_CHIPS_DEFAULT_OPTIONS]\n                    }] }, { type: i1$2.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }];\n    }, propDecorators: { chipGrid: [{\n                type: Input,\n                args: ['matChipInputFor']\n            }], addOnBlur: [{\n                type: Input,\n                args: ['matChipInputAddOnBlur']\n            }], separatorKeyCodes: [{\n                type: Input,\n                args: ['matChipInputSeparatorKeyCodes']\n            }], chipEnd: [{\n                type: Output,\n                args: ['matChipInputTokenEnd']\n            }], placeholder: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHIP_DECLARATIONS = [\n    MatChip,\n    MatChipAvatar,\n    MatChipEditInput,\n    MatChipGrid,\n    MatChipInput,\n    MatChipListbox,\n    MatChipOption,\n    MatChipRemove,\n    MatChipRow,\n    MatChipSet,\n    MatChipTrailingIcon,\n];\nclass MatChipsModule {\n}\nMatChipsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatChipsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipsModule, declarations: [MatChipAction, MatChip,\n        MatChipAvatar,\n        MatChipEditInput,\n        MatChipGrid,\n        MatChipInput,\n        MatChipListbox,\n        MatChipOption,\n        MatChipRemove,\n        MatChipRow,\n        MatChipSet,\n        MatChipTrailingIcon], imports: [MatCommonModule, CommonModule, MatRippleModule], exports: [MatCommonModule, MatChip,\n        MatChipAvatar,\n        MatChipEditInput,\n        MatChipGrid,\n        MatChipInput,\n        MatChipListbox,\n        MatChipOption,\n        MatChipRemove,\n        MatChipRow,\n        MatChipSet,\n        MatChipTrailingIcon] });\nMatChipsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipsModule, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: {\n                separatorKeyCodes: [ENTER],\n            },\n        },\n    ], imports: [MatCommonModule, CommonModule, MatRippleModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatChipsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CommonModule, MatRippleModule],\n                    exports: [MatCommonModule, CHIP_DECLARATIONS],\n                    declarations: [MatChipAction, CHIP_DECLARATIONS],\n                    providers: [\n                        ErrorStateMatcher,\n                        {\n                            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                            useValue: {\n                                separatorKeyCodes: [ENTER],\n                            },\n                        },\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}