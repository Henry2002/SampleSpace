{"ast":null,"code":"import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\nconst _c0 = [\"*\"];\n\nfunction MatDrawerContainer_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked());\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n  }\n}\n\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\n\nfunction MatSidenavContainer_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked());\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n  }\n}\n\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\";\nconst matDrawerAnimations = {\n  /** Animation that slides a drawer in and out. */\n  transformDrawer: trigger('transform', [// We remove the `transform` here completely, rather than setting it to zero, because:\n  // 1. Having a transform can cause elements with ripples or an animated\n  //    transform to shift around in Chrome with an RTL layout (see #10023).\n  // 2. 3d transforms causes text to appear blurry on IE and Edge.\n  state('open, open-instant', style({\n    'transform': 'none',\n    'visibility': 'visible'\n  })), state('void', style({\n    // Avoids the shadow showing up when closed in SSR.\n    'box-shadow': 'none',\n    'visibility': 'hidden'\n  })), transition('void => open-instant', animate('0ms')), transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))])\n};\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\n\nfunction throwMatDuplicatedDrawerError(position) {\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\n\n\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n  providedIn: 'root',\n  factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\n\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\n\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n  return false;\n}\n\nclass MatDrawerContent extends CdkScrollable {\n  constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n    super(elementRef, scrollDispatcher, ngZone);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._container = _container;\n  }\n\n  ngAfterContentInit() {\n    this._container._contentMarginChanges.subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n}\n\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) {\n  return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nMatDrawerContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawerContent,\n  selectors: [[\"mat-drawer-content\"]],\n  hostAttrs: [1, \"mat-drawer-content\"],\n  hostVars: 4,\n  hostBindings: function MatDrawerContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatDrawerContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatDrawerContent.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: MatDrawerContainer,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(() => MatDrawerContainer)]\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: ScrollDispatcher\n}, {\n  type: NgZone\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatDrawerContainer,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => MatDrawerContainer)]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.ScrollDispatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\n\n\nclass MatDrawer {\n  constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n    this._elementRef = _elementRef;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._focusMonitor = _focusMonitor;\n    this._platform = _platform;\n    this._ngZone = _ngZone;\n    this._doc = _doc;\n    this._container = _container;\n    this._elementFocusedBeforeDrawerWasOpened = null;\n    /** Whether the drawer is initialized. Used for disabling the initial animation. */\n\n    this._enableAnimations = false;\n    this._position = 'start';\n    this._mode = 'over';\n    this._disableClose = false;\n    this._opened = false;\n    /** Emits whenever the drawer has started animating. */\n\n    this._animationStarted = new Subject();\n    /** Emits whenever the drawer is done animating. */\n\n    this._animationEnd = new Subject();\n    /** Current state of the sidenav animation. */\n    // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n    // metadata is not inherited by child classes, instead the host binding data is defined in a way\n    // that can be inherited.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n\n    this._animationState = 'void';\n    /** Event emitted when the drawer open state is changed. */\n\n    this.openedChange = // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n    new EventEmitter(\n    /* isAsync */\n    true);\n    /** Event emitted when the drawer has been opened. */\n\n    this._openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n    /** Event emitted when the drawer has started opening. */\n\n    this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n    /** Event emitted when the drawer has been closed. */\n\n    this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n    /** Event emitted when the drawer has started closing. */\n\n    this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n    /** Emits when the component is destroyed. */\n\n    this._destroyed = new Subject();\n    /** Event emitted when the drawer's position changes. */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onPositionChanged = new EventEmitter();\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     */\n\n    this._modeChanged = new Subject();\n    this.openedChange.subscribe(opened => {\n      if (opened) {\n        if (this._doc) {\n          this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n        }\n\n        this._takeFocus();\n      } else if (this._isFocusWithinDrawer()) {\n        this._restoreFocus();\n      }\n    });\n    /**\n     * Listen to `keydown` events outside the zone so that change detection is not run every\n     * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n     * and we don't have close disabled.\n     */\n\n    this._ngZone.runOutsideAngular(() => {\n      fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n        return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n      }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n        this.close();\n        event.stopPropagation();\n        event.preventDefault();\n      }));\n    }); // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n\n\n    this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      const {\n        fromState,\n        toState\n      } = event;\n\n      if (toState.indexOf('open') === 0 && fromState === 'void' || toState === 'void' && fromState.indexOf('open') === 0) {\n        this.openedChange.emit(this._opened);\n      }\n    });\n  }\n  /** The side that the drawer is attached to. */\n\n\n  get position() {\n    return this._position;\n  }\n\n  set position(value) {\n    // Make sure we have a valid value.\n    value = value === 'end' ? 'end' : 'start';\n\n    if (value != this._position) {\n      this._position = value;\n      this.onPositionChanged.emit();\n    }\n  }\n  /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n\n\n  get mode() {\n    return this._mode;\n  }\n\n  set mode(value) {\n    this._mode = value;\n\n    this._updateFocusTrapState();\n\n    this._modeChanged.next();\n  }\n  /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n\n\n  get disableClose() {\n    return this._disableClose;\n  }\n\n  set disableClose(value) {\n    this._disableClose = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the drawer should focus the first focusable element automatically when opened.\n   * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n   * enabled, focus will be moved into the sidenav in `side` mode as well.\n   */\n\n\n  get autoFocus() {\n    const value = this._autoFocus; // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n    // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n    // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n\n    return value == null ? this.mode !== 'side' : value;\n  }\n\n  set autoFocus(value) {\n    this._autoFocus = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the drawer is opened. We overload this because we trigger an event when it\n   * starts or end.\n   */\n\n\n  get opened() {\n    return this._opened;\n  }\n\n  set opened(value) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /**\n   * Moves focus into the drawer. Note that this works even if\n   * the focus trap is disabled in `side` mode.\n   */\n\n\n  _takeFocus() {\n    if (!this.autoFocus || !this._focusTrap) {\n      return;\n    }\n\n    this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n      // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n      // still works. We need to check that `focus` is a function due to Universal.\n      if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n        this._elementRef.nativeElement.focus();\n      }\n    });\n  }\n  /**\n   * Restores focus to the element that was originally focused when the drawer opened.\n   * If no element was focused at that time, the focus will be restored to the drawer.\n   */\n\n\n  _restoreFocus() {\n    if (!this.autoFocus) {\n      return;\n    } // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n\n\n    if (this._elementFocusedBeforeDrawerWasOpened) {\n      this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n    } else {\n      this._elementRef.nativeElement.blur();\n    }\n\n    this._elementFocusedBeforeDrawerWasOpened = null;\n    this._openedVia = null;\n  }\n  /** Whether focus is currently within the drawer. */\n\n\n  _isFocusWithinDrawer() {\n    var _a;\n\n    const activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n    return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n  }\n\n  ngAfterContentInit() {\n    this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n\n    this._updateFocusTrapState();\n  }\n\n  ngAfterContentChecked() {\n    // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n    // drawers that are open by default. When we're on the server, we shouldn't enable the\n    // animations, because we don't want the drawer to animate the first time the user sees\n    // the page.\n    if (this._platform.isBrowser) {\n      this._enableAnimations = true;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n\n    this._animationStarted.complete();\n\n    this._animationEnd.complete();\n\n    this._modeChanged.complete();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n  }\n  /**\n   * Open the drawer.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n\n\n  open(openedVia) {\n    return this.toggle(true, openedVia);\n  }\n  /** Close the drawer. */\n\n\n  close() {\n    return this.toggle(false);\n  }\n  /** Closes the drawer with context that the backdrop was clicked. */\n\n\n  _closeViaBackdropClick() {\n    // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n    // don't need to check whether focus is currently in the drawer, as clicking on the\n    // backdrop causes blurring of the active element.\n    return this._setOpen(\n    /* isOpen */\n    false,\n    /* restoreFocus */\n    true);\n  }\n  /**\n   * Toggle this drawer.\n   * @param isOpen Whether the drawer should be open.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n\n\n  toggle(isOpen = !this.opened, openedVia) {\n    // If the focus is currently inside the drawer content and we are closing the drawer,\n    // restore the focus to the initially focused element (when the drawer opened).\n    return this._setOpen(isOpen,\n    /* restoreFocus */\n    !isOpen && this._isFocusWithinDrawer(), openedVia);\n  }\n  /**\n   * Toggles the opened state of the drawer.\n   * @param isOpen Whether the drawer should open or close.\n   * @param restoreFocus Whether focus should be restored on close.\n   * @param openedVia Focus origin that can be optionally set when opening a drawer. The\n   *   origin will be used later when focus is restored on drawer close.\n   */\n\n\n  _setOpen(isOpen, restoreFocus, openedVia = 'program') {\n    this._opened = isOpen;\n\n    if (isOpen) {\n      this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n      this._openedVia = openedVia;\n    } else {\n      this._animationState = 'void';\n\n      if (restoreFocus) {\n        this._restoreFocus();\n      }\n    }\n\n    this._updateFocusTrapState();\n\n    return new Promise(resolve => {\n      this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n    });\n  }\n\n  _getWidth() {\n    return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n  }\n  /** Updates the enabled state of the focus trap. */\n\n\n  _updateFocusTrapState() {\n    if (this._focusTrap) {\n      // The focus trap is only enabled when the drawer is open in any mode other than side.\n      this._focusTrap.enabled = this.opened && this.mode !== 'side';\n    }\n  } // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n\n\n  _animationStartListener(event) {\n    this._animationStarted.next(event);\n  } // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n\n\n  _animationDoneListener(event) {\n    this._animationEnd.next(event);\n  }\n\n}\n\nMatDrawer.ɵfac = function MatDrawer_Factory(t) {\n  return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8));\n};\n\nMatDrawer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawer,\n  selectors: [[\"mat-drawer\"]],\n  hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"],\n  hostVars: 12,\n  hostBindings: function MatDrawer_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) {\n        return ctx._animationStartListener($event);\n      })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) {\n        return ctx._animationDoneListener($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"align\", null);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    }\n  },\n  inputs: {\n    position: \"position\",\n    mode: \"mode\",\n    disableClose: \"disableClose\",\n    autoFocus: \"autoFocus\",\n    opened: \"opened\"\n  },\n  outputs: {\n    openedChange: \"openedChange\",\n    _openedStream: \"opened\",\n    openedStart: \"openedStart\",\n    _closedStream: \"closed\",\n    closedStart: \"closedStart\",\n    onPositionChanged: \"positionChanged\"\n  },\n  exportAs: [\"matDrawer\"],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n  template: function MatDrawer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [ɵngcc1.CdkScrollable],\n  encapsulation: 2,\n  data: {\n    animation: [matDrawerAnimations.transformDrawer]\n  },\n  changeDetection: 0\n});\n\nMatDrawer.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: FocusTrapFactory\n}, {\n  type: FocusMonitor\n}, {\n  type: Platform\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: MatDrawerContainer,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DRAWER_CONTAINER]\n  }]\n}];\n\nMatDrawer.propDecorators = {\n  position: [{\n    type: Input\n  }],\n  mode: [{\n    type: Input\n  }],\n  disableClose: [{\n    type: Input\n  }],\n  autoFocus: [{\n    type: Input\n  }],\n  opened: [{\n    type: Input\n  }],\n  _animationState: [{\n    type: HostBinding,\n    args: ['@transform']\n  }],\n  openedChange: [{\n    type: Output\n  }],\n  _openedStream: [{\n    type: Output,\n    args: ['opened']\n  }],\n  openedStart: [{\n    type: Output\n  }],\n  _closedStream: [{\n    type: Output,\n    args: ['closed']\n  }],\n  closedStart: [{\n    type: Output\n  }],\n  onPositionChanged: [{\n    type: Output,\n    args: ['positionChanged']\n  }],\n  _animationStartListener: [{\n    type: HostListener,\n    args: ['@transform.start', ['$event']]\n  }],\n  _animationDoneListener: [{\n    type: HostListener,\n    args: ['@transform.done', ['$event']]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer',\n      exportAs: 'matDrawer',\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-drawer-opened]': 'opened',\n        'tabIndex': '-1'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.FocusTrapFactory\n    }, {\n      type: ɵngcc2.FocusMonitor\n    }, {\n      type: ɵngcc3.Platform\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: MatDrawerContainer,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DRAWER_CONTAINER]\n      }]\n    }];\n  }, {\n    _animationState: [{\n      type: HostBinding,\n      args: ['@transform']\n    }],\n    openedChange: [{\n      type: Output\n    }],\n    _openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    openedStart: [{\n      type: Output\n    }],\n    _closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    closedStart: [{\n      type: Output\n    }],\n    onPositionChanged: [{\n      type: Output,\n      args: ['positionChanged']\n    }],\n    position: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    disableClose: [{\n      type: Input\n    }],\n    autoFocus: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input\n    }],\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener: [{\n      type: HostListener,\n      args: ['@transform.start', ['$event']]\n    }],\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener: [{\n      type: HostListener,\n      args: ['@transform.done', ['$event']]\n    }]\n  });\n})();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\n\n\nclass MatDrawerContainer {\n  constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n    this._dir = _dir;\n    this._element = _element;\n    this._ngZone = _ngZone;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /** Drawers that belong to this container. */\n\n    this._drawers = new QueryList();\n    /** Event emitted when the drawer backdrop is clicked. */\n\n    this.backdropClick = new EventEmitter();\n    /** Emits when the component is destroyed. */\n\n    this._destroyed = new Subject();\n    /** Emits on every ngDoCheck. Used for debouncing reflows. */\n\n    this._doCheckSubject = new Subject();\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     */\n\n    this._contentMargins = {\n      left: null,\n      right: null\n    };\n    this._contentMarginChanges = new Subject(); // If a `Dir` directive exists up the tree, listen direction changes\n    // and update the left/right properties to point to the proper start/end.\n\n    if (_dir) {\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._validateDrawers();\n\n        this.updateContentMargins();\n      });\n    } // Since the minimum width of the sidenav depends on the viewport width,\n    // we need to recompute the margins if the viewport changes.\n\n\n    viewportRuler.change().pipe(takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n    this._autosize = defaultAutosize;\n  }\n  /** The drawer child with the `start` position. */\n\n\n  get start() {\n    return this._start;\n  }\n  /** The drawer child with the `end` position. */\n\n\n  get end() {\n    return this._end;\n  }\n  /**\n   * Whether to automatically resize the container whenever\n   * the size of any of its drawers changes.\n   *\n   * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n   * the drawers on every change detection cycle. Can be configured globally via the\n   * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n   */\n\n\n  get autosize() {\n    return this._autosize;\n  }\n\n  set autosize(value) {\n    this._autosize = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n   * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n   * mode as well.\n   */\n\n\n  get hasBackdrop() {\n    if (this._backdropOverride == null) {\n      return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n    }\n\n    return this._backdropOverride;\n  }\n\n  set hasBackdrop(value) {\n    this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n  }\n  /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n\n\n  get scrollable() {\n    return this._userContent || this._content;\n  }\n\n  ngAfterContentInit() {\n    this._allDrawers.changes.pipe(startWith(this._allDrawers), takeUntil(this._destroyed)).subscribe(drawer => {\n      this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n\n      this._drawers.notifyOnChanges();\n    });\n\n    this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n      this._validateDrawers();\n\n      this._drawers.forEach(drawer => {\n        this._watchDrawerToggle(drawer);\n\n        this._watchDrawerPosition(drawer);\n\n        this._watchDrawerMode(drawer);\n      });\n\n      if (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) {\n        this.updateContentMargins();\n      }\n\n      this._changeDetectorRef.markForCheck();\n    }); // Avoid hitting the NgZone through the debounce timeout.\n\n\n    this._ngZone.runOutsideAngular(() => {\n      this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n      takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n    });\n  }\n\n  ngOnDestroy() {\n    this._contentMarginChanges.complete();\n\n    this._doCheckSubject.complete();\n\n    this._drawers.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n  }\n  /** Calls `open` of both start and end drawers */\n\n\n  open() {\n    this._drawers.forEach(drawer => drawer.open());\n  }\n  /** Calls `close` of both start and end drawers */\n\n\n  close() {\n    this._drawers.forEach(drawer => drawer.close());\n  }\n  /**\n   * Recalculates and updates the inline styles for the content. Note that this should be used\n   * sparingly, because it causes a reflow.\n   */\n\n\n  updateContentMargins() {\n    // 1. For drawers in `over` mode, they don't affect the content.\n    // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n    //    left margin (for left drawer) or right margin (for right the drawer).\n    // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n    //    adding to the left or right margin and simultaneously subtracting the same amount of\n    //    margin from the other side.\n    let left = 0;\n    let right = 0;\n\n    if (this._left && this._left.opened) {\n      if (this._left.mode == 'side') {\n        left += this._left._getWidth();\n      } else if (this._left.mode == 'push') {\n        const width = this._left._getWidth();\n\n        left += width;\n        right -= width;\n      }\n    }\n\n    if (this._right && this._right.opened) {\n      if (this._right.mode == 'side') {\n        right += this._right._getWidth();\n      } else if (this._right.mode == 'push') {\n        const width = this._right._getWidth();\n\n        right += width;\n        left -= width;\n      }\n    } // If either `right` or `left` is zero, don't set a style to the element. This\n    // allows users to specify a custom size via CSS class in SSR scenarios where the\n    // measured widths will always be zero. Note that we reset to `null` here, rather\n    // than below, in order to ensure that the types in the `if` below are consistent.\n\n\n    left = left || null;\n    right = right || null;\n\n    if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n      this._contentMargins = {\n        left,\n        right\n      }; // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n      // to do it only when something changed, otherwise we can end up hitting the zone too often.\n\n      this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n    }\n  }\n\n  ngDoCheck() {\n    // If users opted into autosizing, do a check every change detection cycle.\n    if (this._autosize && this._isPushed()) {\n      // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n      this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n    }\n  }\n  /**\n   * Subscribes to drawer events in order to set a class on the main container element when the\n   * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n   * is properly hidden.\n   */\n\n\n  _watchDrawerToggle(drawer) {\n    drawer._animationStarted.pipe(filter(event => event.fromState !== event.toState), takeUntil(this._drawers.changes)).subscribe(event => {\n      // Set the transition class on the container so that the animations occur. This should not\n      // be set initially because animations should only be triggered via a change in state.\n      if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n        this._element.nativeElement.classList.add('mat-drawer-transition');\n      }\n\n      this.updateContentMargins();\n\n      this._changeDetectorRef.markForCheck();\n    });\n\n    if (drawer.mode !== 'side') {\n      drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n    }\n  }\n  /**\n   * Subscribes to drawer onPositionChanged event in order to\n   * re-validate drawers when the position changes.\n   */\n\n\n  _watchDrawerPosition(drawer) {\n    if (!drawer) {\n      return;\n    } // NOTE: We need to wait for the microtask queue to be empty before validating,\n    // since both drawers may be swapping positions at the same time.\n\n\n    drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n      this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n        this._validateDrawers();\n      });\n    });\n  }\n  /** Subscribes to changes in drawer mode so we can run change detection. */\n\n\n  _watchDrawerMode(drawer) {\n    if (drawer) {\n      drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed))).subscribe(() => {\n        this.updateContentMargins();\n\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n\n\n  _setContainerClass(isAdd) {\n    const classList = this._element.nativeElement.classList;\n    const className = 'mat-drawer-container-has-open';\n\n    if (isAdd) {\n      classList.add(className);\n    } else {\n      classList.remove(className);\n    }\n  }\n  /** Validate the state of the drawer children components. */\n\n\n  _validateDrawers() {\n    this._start = this._end = null; // Ensure that we have at most one start and one end drawer.\n\n    this._drawers.forEach(drawer => {\n      if (drawer.position == 'end') {\n        if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatDuplicatedDrawerError('end');\n        }\n\n        this._end = drawer;\n      } else {\n        if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatDuplicatedDrawerError('start');\n        }\n\n        this._start = drawer;\n      }\n    });\n\n    this._right = this._left = null; // Detect if we're LTR or RTL.\n\n    if (this._dir && this._dir.value === 'rtl') {\n      this._left = this._end;\n      this._right = this._start;\n    } else {\n      this._left = this._start;\n      this._right = this._end;\n    }\n  }\n  /** Whether the container is being pushed to the side by one of the drawers. */\n\n\n  _isPushed() {\n    return this._isDrawerOpen(this._start) && this._start.mode != 'over' || this._isDrawerOpen(this._end) && this._end.mode != 'over';\n  }\n\n  _onBackdropClicked() {\n    this.backdropClick.emit();\n\n    this._closeModalDrawersViaBackdrop();\n  }\n\n  _closeModalDrawersViaBackdrop() {\n    // Close all open drawers where closing is not disabled and the mode is not `side`.\n    [this._start, this._end].filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)).forEach(drawer => drawer._closeViaBackdropClick());\n  }\n\n  _isShowingBackdrop() {\n    return this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start) || this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end);\n  }\n\n  _canHaveBackdrop(drawer) {\n    return drawer.mode !== 'side' || !!this._backdropOverride;\n  }\n\n  _isDrawerOpen(drawer) {\n    return drawer != null && drawer.opened;\n  }\n\n}\n\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) {\n  return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatDrawerContainer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawerContainer,\n  selectors: [[\"mat-drawer-container\"]],\n  contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    }\n  },\n  viewQuery: function MatDrawerContainer_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatDrawerContent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-drawer-container\"],\n  hostVars: 2,\n  hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    }\n  },\n  inputs: {\n    autosize: \"autosize\",\n    hasBackdrop: \"hasBackdrop\"\n  },\n  outputs: {\n    backdropClick: \"backdropClick\"\n  },\n  exportAs: [\"matDrawerContainer\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_DRAWER_CONTAINER,\n    useExisting: MatDrawerContainer\n  }])],\n  ngContentSelectors: _c2,\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n  template: function MatDrawerContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    }\n  },\n  dependencies: [ɵngcc5.NgIf, MatDrawerContent],\n  styles: [_c5],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatDrawerContainer.ctorParameters = () => [{\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n\nMatDrawerContainer.propDecorators = {\n  _allDrawers: [{\n    type: ContentChildren,\n    args: [MatDrawer, {\n      // We need to use `descendants: true`, because Ivy will no longer match\n      // indirect descendants if it's left as false.\n      descendants: true\n    }]\n  }],\n  _content: [{\n    type: ContentChild,\n    args: [MatDrawerContent]\n  }],\n  _userContent: [{\n    type: ViewChild,\n    args: [MatDrawerContent]\n  }],\n  autosize: [{\n    type: Input\n  }],\n  hasBackdrop: [{\n    type: Input\n  }],\n  backdropClick: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-container',\n      exportAs: 'matDrawerContainer',\n      template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n      host: {\n        'class': 'mat-drawer-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatDrawerContainer\n      }],\n      styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc4.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.ViewportRuler\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    backdropClick: [{\n      type: Output\n    }],\n    autosize: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatDrawer, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatDrawerContent]\n    }],\n    _userContent: [{\n      type: ViewChild,\n      args: [MatDrawerContent]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatSidenavContent extends MatDrawerContent {\n  constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n    super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n  }\n\n}\n\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) {\n  return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nMatSidenavContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenavContent,\n  selectors: [[\"mat-sidenav-content\"]],\n  hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"],\n  hostVars: 4,\n  hostBindings: function MatSidenavContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatSidenavContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatSidenavContent.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: MatSidenavContainer,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(() => MatSidenavContainer)]\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: ScrollDispatcher\n}, {\n  type: NgZone\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content mat-sidenav-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatSidenavContainer,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => MatSidenavContainer)]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.ScrollDispatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\nclass MatSidenav extends MatDrawer {\n  constructor() {\n    super(...arguments);\n    this._fixedInViewport = false;\n    this._fixedTopGap = 0;\n    this._fixedBottomGap = 0;\n  }\n  /** Whether the sidenav is fixed in the viewport. */\n\n\n  get fixedInViewport() {\n    return this._fixedInViewport;\n  }\n\n  set fixedInViewport(value) {\n    this._fixedInViewport = coerceBooleanProperty(value);\n  }\n  /**\n   * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n   * mode.\n   */\n\n\n  get fixedTopGap() {\n    return this._fixedTopGap;\n  }\n\n  set fixedTopGap(value) {\n    this._fixedTopGap = coerceNumberProperty(value);\n  }\n  /**\n   * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n   * fixed mode.\n   */\n\n\n  get fixedBottomGap() {\n    return this._fixedBottomGap;\n  }\n\n  set fixedBottomGap(value) {\n    this._fixedBottomGap = coerceNumberProperty(value);\n  }\n\n}\n\nMatSidenav.ɵfac = /*@__PURE__*/function () {\n  let ɵMatSidenav_BaseFactory;\n  return function MatSidenav_Factory(t) {\n    return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav);\n  };\n}();\n\nMatSidenav.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenav,\n  selectors: [[\"mat-sidenav\"]],\n  hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"],\n  hostVars: 17,\n  hostBindings: function MatSidenav_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"align\", null);\n      ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    }\n  },\n  inputs: {\n    fixedInViewport: \"fixedInViewport\",\n    fixedTopGap: \"fixedTopGap\",\n    fixedBottomGap: \"fixedBottomGap\"\n  },\n  exportAs: [\"matSidenav\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n  template: function MatSidenav_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [ɵngcc1.CdkScrollable],\n  encapsulation: 2,\n  data: {\n    animation: [matDrawerAnimations.transformDrawer]\n  },\n  changeDetection: 0\n});\nMatSidenav.propDecorators = {\n  fixedInViewport: [{\n    type: Input\n  }],\n  fixedTopGap: [{\n    type: Input\n  }],\n  fixedBottomGap: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav',\n      exportAs: 'matSidenav',\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer mat-sidenav',\n        'tabIndex': '-1',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-drawer-opened]': 'opened',\n        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, {\n    fixedInViewport: [{\n      type: Input\n    }],\n    fixedTopGap: [{\n      type: Input\n    }],\n    fixedBottomGap: [{\n      type: Input\n    }]\n  });\n})();\n\nclass MatSidenavContainer extends MatDrawerContainer {}\n\nMatSidenavContainer.ɵfac = /*@__PURE__*/function () {\n  let ɵMatSidenavContainer_BaseFactory;\n  return function MatSidenavContainer_Factory(t) {\n    return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer);\n  };\n}();\n\nMatSidenavContainer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenavContainer,\n  selectors: [[\"mat-sidenav-container\"]],\n  contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"],\n  hostVars: 2,\n  hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    }\n  },\n  exportAs: [\"matSidenavContainer\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_DRAWER_CONTAINER,\n    useExisting: MatSidenavContainer\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c4,\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]],\n  template: function MatSidenavContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c3);\n      ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    }\n  },\n  dependencies: [ɵngcc5.NgIf, ɵngcc1.CdkScrollable, MatSidenavContent],\n  styles: [_c5],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatSidenavContainer.propDecorators = {\n  _allDrawers: [{\n    type: ContentChildren,\n    args: [MatSidenav, {\n      // We need to use `descendants: true`, because Ivy will no longer match\n      // indirect descendants if it's left as false.\n      descendants: true\n    }]\n  }],\n  _content: [{\n    type: ContentChild,\n    args: [MatSidenavContent]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-container',\n      exportAs: 'matSidenavContainer',\n      template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n      host: {\n        'class': 'mat-drawer-container mat-sidenav-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatSidenavContainer\n      }],\n      styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n    }]\n  }], null, {\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatSidenav, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatSidenavContent]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatSidenavModule {}\n\nMatSidenavModule.ɵfac = function MatSidenavModule_Factory(t) {\n  return new (t || MatSidenavModule)();\n};\n\nMatSidenavModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatSidenavModule\n});\nMatSidenavModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule, CdkScrollableModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule],\n      exports: [CdkScrollableModule, MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent],\n      declarations: [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, {\n    declarations: function () {\n      return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule];\n    },\n    exports: function () {\n      return [CdkScrollableModule, MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };","map":{"version":3,"names":["Platform","PlatformModule","CdkScrollable","ScrollDispatcher","ViewportRuler","CdkScrollableModule","DOCUMENT","CommonModule","InjectionToken","Component","ChangeDetectionStrategy","ViewEncapsulation","ChangeDetectorRef","Inject","forwardRef","ElementRef","NgZone","EventEmitter","Optional","Input","HostBinding","Output","HostListener","QueryList","ContentChildren","ContentChild","ViewChild","NgModule","MatCommonModule","FocusTrapFactory","FocusMonitor","Directionality","coerceBooleanProperty","coerceNumberProperty","ESCAPE","hasModifierKey","Subject","fromEvent","merge","filter","map","mapTo","takeUntil","distinctUntilChanged","take","startWith","debounceTime","trigger","state","style","transition","animate","ANIMATION_MODULE_TYPE","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","_c0","MatDrawerContainer_div_0_Template","rf","ctx","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatDrawerContainer_div_0_Template_div_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵnextContext","ɵɵresetView","_onBackdropClicked","ɵɵelementEnd","ctx_r0","ɵɵclassProp","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","ɵɵprojection","_c1","_c2","MatSidenavContainer_div_0_Template","MatSidenavContainer_div_0_Template_div_click_0_listener","MatSidenavContainer_mat_sidenav_content_3_Template","_c3","_c4","_c5","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","position","Error","MAT_DRAWER_DEFAULT_AUTOSIZE","providedIn","factory","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","constructor","_changeDetectorRef","_container","elementRef","scrollDispatcher","ngZone","ngAfterContentInit","_contentMarginChanges","subscribe","markForCheck","ɵfac","MatDrawerContent_Factory","t","ɵɵdirectiveInject","MatDrawerContainer","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatDrawerContent_HostBindings","ɵɵstyleProp","_contentMargins","left","right","features","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","template","MatDrawerContent_Template","ɵɵprojectionDef","encapsulation","changeDetection","ctorParameters","decorators","args","ngDevMode","ɵsetClassMetadata","selector","host","OnPush","None","MatDrawer","_elementRef","_focusTrapFactory","_focusMonitor","_platform","_ngZone","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","_openedStream","pipe","o","openedStart","e","fromState","toState","indexOf","undefined","_closedStream","closedStart","_destroyed","onPositionChanged","_modeChanged","opened","activeElement","_takeFocus","_isFocusWithinDrawer","_restoreFocus","runOutsideAngular","nativeElement","event","keyCode","disableClose","run","close","stopPropagation","preventDefault","x","y","emit","value","mode","_updateFocusTrapState","next","autoFocus","_autoFocus","toggle","_focusTrap","focusInitialElementWhenReady","then","hasMovedFocus","focus","focusVia","_openedVia","blur","_a","activeEl","contains","create","ngAfterContentChecked","isBrowser","ngOnDestroy","destroy","complete","open","openedVia","_closeViaBackdropClick","_setOpen","isOpen","restoreFocus","Promise","resolve","_getWidth","offsetWidth","enabled","_animationStartListener","_animationDoneListener","MatDrawer_Factory","MatDrawer_HostBindings","ɵɵsyntheticHostListener","MatDrawer_animation_transform_start_HostBindingHandler","$event","MatDrawer_animation_transform_done_HostBindingHandler","ɵɵattribute","ɵɵsyntheticHostProperty","inputs","outputs","exportAs","consts","MatDrawer_Template","dependencies","data","animation","propDecorators","animations","_dir","_element","viewportRuler","defaultAutosize","_animationMode","_drawers","backdropClick","_doCheckSubject","change","_validateDrawers","updateContentMargins","_autosize","start","_start","end","_end","autosize","hasBackdrop","_backdropOverride","scrollable","_userContent","_content","_allDrawers","changes","drawer","reset","item","notifyOnChanges","forEach","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","length","_isDrawerOpen","_left","width","_right","ngDoCheck","_isPushed","classList","add","_setContainerClass","onMicrotaskEmpty","isAdd","className","remove","_closeModalDrawersViaBackdrop","_canHaveBackdrop","MatDrawerContainer_Factory","contentQueries","MatDrawerContainer_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatDrawerContainer_Query","ɵɵviewQuery","MatDrawerContainer_HostBindings","ɵɵProvidersFeature","provide","useExisting","MatDrawerContainer_Template","ɵɵtemplate","ɵɵproperty","ɵɵadvance","NgIf","styles","String","descendants","providers","MatSidenavContent","changeDetectorRef","container","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","arguments","_fixedInViewport","_fixedTopGap","_fixedBottomGap","fixedInViewport","fixedTopGap","fixedBottomGap","ɵMatSidenav_BaseFactory","MatSidenav_Factory","ɵɵgetInheritedFactory","MatSidenav_HostBindings","MatSidenav_Template","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_Factory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","MatSidenavModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","ɵangular_material_src_material_sidenav_sidenav_a"],"sources":["C:/Users/Henry/Desktop/New folder/Atomas2/node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js"],"sourcesContent":["import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked()); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked()); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\";\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatDrawerContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatDrawerContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus();\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /** The side that the drawer is attached to. */\n    get position() { return this._position; }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() { return this._mode; }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() { return this._disableClose; }\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() { return this._opened; }\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        });\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        var _a;\n        const activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurring of the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true);\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        return this._setOpen(isOpen, /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), openedVia);\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param openedVia Focus origin that can be optionally set when opening a drawer. The\n     *   origin will be used later when focus is restored on drawer close.\n     */\n    _setOpen(isOpen, restoreFocus, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus();\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, dependencies: [ɵngcc1.CdkScrollable], encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    /** The drawer child with the `start` position. */\n    get start() { return this._start; }\n    /** The drawer child with the `end` position. */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() { return this._autosize; }\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, dependencies: [ɵngcc5.NgIf, MatDrawerContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\", host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatSidenavContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSidenavContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() { return this._fixedInViewport; }\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = /*@__PURE__*/ function () { let ɵMatSidenav_BaseFactory; return function MatSidenav_Factory(t) { return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav); }; }();\nMatSidenav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, dependencies: [ɵngcc1.CdkScrollable], encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = /*@__PURE__*/ function () { let ɵMatSidenavContainer_BaseFactory; return function MatSidenavContainer_Factory(t) { return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer); }; }();\nMatSidenavContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, dependencies: [ɵngcc5.NgIf, ɵngcc1.CdkScrollable, MatSidenavContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\", host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵfac = function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); };\nMatSidenavModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule, CdkScrollableModule,\n        MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PlatformModule,\n                    CdkScrollableModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}