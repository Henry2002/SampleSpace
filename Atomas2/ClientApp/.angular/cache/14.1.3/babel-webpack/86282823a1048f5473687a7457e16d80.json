{"ast":null,"code":"import * as i1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ViewChild, inject, Optional, ViewChildren, ContentChild, ContentChildren, forwardRef, EventEmitter, Directive, Output, NgModule } from '@angular/core';\nimport * as i2$1 from '@angular/material/core';\nimport { MatRipple, mixinColor, mixinDisableRipple, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\n/**\n * Injection token that can be used for a `MatSlider` to provide itself as a\n * parent to the `MatSliderThumb` and `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\n\nconst _c0 = [\"knob\"];\nconst _c1 = [\"valueIndicatorContainer\"];\n\nfunction MatSliderVisualThumb_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4, 5)(2, \"div\", 6)(3, \"span\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.valueIndicatorText);\n  }\n}\n\nconst _c2 = [\"trackActive\"];\n\nfunction MatSlider_div_6_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n\n  if (rf & 2) {\n    const tickMark_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(tickMark_r6 === 0 ? \"mdc-slider__tick-mark--active\" : \"mdc-slider__tick-mark--inactive\");\n    i0.ɵɵstyleProp(\"transform\", ctx_r5._calcTickMarkTransform(i_r7));\n  }\n}\n\nfunction MatSlider_div_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MatSlider_div_6_ng_container_2_div_1_Template, 1, 4, \"div\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4._tickMarks);\n  }\n}\n\nfunction MatSlider_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8, 9);\n    i0.ɵɵtemplate(2, MatSlider_div_6_ng_container_2_Template, 2, 1, \"ng-container\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1._cachedWidth);\n  }\n}\n\nfunction MatSlider_mat_slider_visual_thumb_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-slider-visual-thumb\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"discrete\", ctx_r2.discrete)(\"thumbPosition\", 1)(\"valueIndicatorText\", ctx_r2.startValueIndicatorText);\n  }\n}\n\nconst _c3 = [\"*\"];\nconst MAT_SLIDER = new InjectionToken('_MatSlider');\n/**\n * Injection token that can be used to query for a `MatSliderThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\n\nconst MAT_SLIDER_THUMB = new InjectionToken('_MatSliderThumb');\n/**\n * Injection token that can be used to query for a `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\n\nconst MAT_SLIDER_RANGE_THUMB = new InjectionToken('_MatSliderRangeThumb');\n/**\n * Injection token that can be used to query for a `MatSliderVisualThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\n\nconst MAT_SLIDER_VISUAL_THUMB = new InjectionToken('_MatSliderVisualThumb');\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use event bindings directly on the MatSliderThumbs for `change` and `input` events. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\n\nclass MatSliderChange {}\n/**\n * The visual slider thumb.\n *\n * Handles the slider thumb ripple states (hover, focus, and active),\n * and displaying the value tooltip on discrete sliders.\n * @docs-private\n */\n\n\nclass MatSliderVisualThumb {\n  constructor(_cdr, _ngZone, _elementRef, _slider) {\n    this._cdr = _cdr;\n    this._ngZone = _ngZone;\n    this._slider = _slider;\n    /** Whether the slider thumb is currently being hovered. */\n\n    this._isHovered = false;\n    /** Whether the slider thumb is currently being pressed. */\n\n    this._isActive = false;\n    /** Whether the value indicator tooltip is visible. */\n\n    this._isValueIndicatorVisible = false;\n\n    this._onPointerMove = event => {\n      if (this._sliderInput._isFocused) {\n        return;\n      }\n\n      const rect = this._hostElement.getBoundingClientRect();\n\n      const isHovered = this._slider._isCursorOnSliderThumb(event, rect);\n\n      this._isHovered = isHovered;\n\n      if (isHovered) {\n        this._showHoverRipple();\n      } else {\n        this._hideRipple(this._hoverRippleRef);\n      }\n    };\n\n    this._onMouseLeave = () => {\n      this._isHovered = false;\n\n      this._hideRipple(this._hoverRippleRef);\n    };\n\n    this._onFocus = () => {\n      // We don't want to show the hover ripple on top of the focus ripple.\n      // Happen when the users cursor is over a thumb and then the user tabs to it.\n      this._hideRipple(this._hoverRippleRef);\n\n      this._showFocusRipple();\n\n      this._hostElement.classList.add('mdc-slider__thumb--focused');\n    };\n\n    this._onBlur = () => {\n      // Happens when the user tabs away while still dragging a thumb.\n      if (!this._isActive) {\n        this._hideRipple(this._focusRippleRef);\n      } // Happens when the user tabs away from a thumb but their cursor is still over it.\n\n\n      if (this._isHovered) {\n        this._showHoverRipple();\n      }\n\n      this._hostElement.classList.remove('mdc-slider__thumb--focused');\n    };\n\n    this._onDragStart = event => {\n      if (event.button !== 0) {\n        return;\n      }\n\n      this._isActive = true;\n\n      this._showActiveRipple();\n    };\n\n    this._onDragEnd = () => {\n      this._isActive = false;\n\n      this._hideRipple(this._activeRippleRef); // Happens when the user starts dragging a thumb, tabs away, and then stops dragging.\n\n\n      if (!this._sliderInput._isFocused) {\n        this._hideRipple(this._focusRippleRef);\n      }\n    };\n\n    this._hostElement = _elementRef.nativeElement;\n  }\n\n  ngAfterViewInit() {\n    this._ripple.radius = 24;\n    this._sliderInput = this._slider._getInput(this.thumbPosition);\n    this._sliderInputEl = this._sliderInput._hostElement;\n    const input = this._sliderInputEl; // These listeners don't update any data bindings so we bind them outside\n    // of the NgZone to prevent Angular from needlessly running change detection.\n\n    this._ngZone.runOutsideAngular(() => {\n      input.addEventListener('pointermove', this._onPointerMove);\n      input.addEventListener('pointerdown', this._onDragStart);\n      input.addEventListener('pointerup', this._onDragEnd);\n      input.addEventListener('pointerleave', this._onMouseLeave);\n      input.addEventListener('focus', this._onFocus);\n      input.addEventListener('blur', this._onBlur);\n    });\n  }\n\n  ngOnDestroy() {\n    const input = this._sliderInputEl;\n    input.removeEventListener('pointermove', this._onPointerMove);\n    input.removeEventListener('pointerdown', this._onDragStart);\n    input.removeEventListener('pointerup', this._onDragEnd);\n    input.removeEventListener('pointerleave', this._onMouseLeave);\n    input.removeEventListener('focus', this._onFocus);\n    input.removeEventListener('blur', this._onBlur);\n  }\n  /** Handles displaying the hover ripple. */\n\n\n  _showHoverRipple() {\n    if (!this._isShowingRipple(this._hoverRippleRef)) {\n      this._hoverRippleRef = this._showRipple({\n        enterDuration: 0,\n        exitDuration: 0\n      });\n      this._hoverRippleRef?.element.classList.add('mat-mdc-slider-hover-ripple');\n    }\n  }\n  /** Handles displaying the focus ripple. */\n\n\n  _showFocusRipple() {\n    // Show the focus ripple event if noop animations are enabled.\n    if (!this._isShowingRipple(this._focusRippleRef)) {\n      this._focusRippleRef = this._showRipple({\n        enterDuration: 0,\n        exitDuration: 0\n      }, true);\n      this._focusRippleRef?.element.classList.add('mat-mdc-slider-focus-ripple');\n    }\n  }\n  /** Handles displaying the active ripple. */\n\n\n  _showActiveRipple() {\n    if (!this._isShowingRipple(this._activeRippleRef)) {\n      this._activeRippleRef = this._showRipple({\n        enterDuration: 225,\n        exitDuration: 400\n      });\n      this._activeRippleRef?.element.classList.add('mat-mdc-slider-active-ripple');\n    }\n  }\n  /** Whether the given rippleRef is currently fading in or visible. */\n\n\n  _isShowingRipple(rippleRef) {\n    return rippleRef?.state === 0\n    /* RippleState.FADING_IN */\n    || rippleRef?.state === 1\n    /* RippleState.VISIBLE */\n    ;\n  }\n  /** Manually launches the slider thumb ripple using the specified ripple animation config. */\n\n\n  _showRipple(animation, ignoreGlobalRippleConfig) {\n    if (this._slider.disabled) {\n      return;\n    }\n\n    this._showValueIndicator();\n\n    if (this._slider._isRange) {\n      const sibling = this._slider._getThumb(this.thumbPosition === 1\n      /* _MatThumb.START */\n      ? 2\n      /* _MatThumb.END */\n      : 1\n      /* _MatThumb.START */\n      );\n\n      sibling._showValueIndicator();\n    }\n\n    if (this._slider._globalRippleOptions?.disabled && !ignoreGlobalRippleConfig) {\n      return;\n    }\n\n    return this._ripple.launch({\n      animation: this._slider._noopAnimations ? {\n        enterDuration: 0,\n        exitDuration: 0\n      } : animation,\n      centered: true,\n      persistent: true\n    });\n  }\n  /**\n   * Fades out the given ripple.\n   * Also hides the value indicator if no ripple is showing.\n   */\n\n\n  _hideRipple(rippleRef) {\n    rippleRef?.fadeOut();\n\n    if (this._isShowingAnyRipple()) {\n      return;\n    }\n\n    if (!this._slider._isRange) {\n      this._hideValueIndicator();\n    }\n\n    const sibling = this._getSibling();\n\n    if (!sibling._isShowingAnyRipple()) {\n      this._hideValueIndicator();\n\n      sibling._hideValueIndicator();\n    }\n  }\n  /** Shows the value indicator ui. */\n\n\n  _showValueIndicator() {\n    this._hostElement.classList.add('mdc-slider__thumb--with-indicator');\n  }\n  /** Hides the value indicator ui. */\n\n\n  _hideValueIndicator() {\n    this._hostElement.classList.remove('mdc-slider__thumb--with-indicator');\n  }\n\n  _getSibling() {\n    return this._slider._getThumb(this.thumbPosition === 1\n    /* _MatThumb.START */\n    ? 2\n    /* _MatThumb.END */\n    : 1\n    /* _MatThumb.START */\n    );\n  }\n  /** Gets the value indicator container's native HTML element. */\n\n\n  _getValueIndicatorContainer() {\n    return this._valueIndicatorContainer?.nativeElement;\n  }\n  /** Gets the native HTML element of the slider thumb knob. */\n\n\n  _getKnob() {\n    return this._knob.nativeElement;\n  }\n\n  _isShowingAnyRipple() {\n    return this._isShowingRipple(this._hoverRippleRef) || this._isShowingRipple(this._focusRippleRef) || this._isShowingRipple(this._activeRippleRef);\n  }\n\n}\n\nMatSliderVisualThumb.ɵfac = function MatSliderVisualThumb_Factory(t) {\n  return new (t || MatSliderVisualThumb)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_SLIDER));\n};\n\nMatSliderVisualThumb.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatSliderVisualThumb,\n  selectors: [[\"mat-slider-visual-thumb\"]],\n  viewQuery: function MatSliderVisualThumb_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatRipple, 5);\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._ripple = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._knob = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._valueIndicatorContainer = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mdc-slider__thumb\", \"mat-mdc-slider-visual-thumb\"],\n  inputs: {\n    discrete: \"discrete\",\n    thumbPosition: \"thumbPosition\",\n    valueIndicatorText: \"valueIndicatorText\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_SLIDER_VISUAL_THUMB,\n    useExisting: MatSliderVisualThumb\n  }])],\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mdc-slider__value-indicator-container\", 4, \"ngIf\"], [1, \"mdc-slider__thumb-knob\"], [\"knob\", \"\"], [\"matRipple\", \"\", 1, \"mat-mdc-focus-indicator\", 3, \"matRippleDisabled\"], [1, \"mdc-slider__value-indicator-container\"], [\"valueIndicatorContainer\", \"\"], [1, \"mdc-slider__value-indicator\"], [1, \"mdc-slider__value-indicator-text\"]],\n  template: function MatSliderVisualThumb_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, MatSliderVisualThumb_div_0_Template, 5, 1, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1, 2)(3, \"div\", 3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.discrete);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"matRippleDisabled\", true);\n    }\n  },\n  dependencies: [i2.NgIf, i2$1.MatRipple],\n  styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderVisualThumb, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider-visual-thumb',\n      host: {\n        'class': 'mdc-slider__thumb mat-mdc-slider-visual-thumb'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_SLIDER_VISUAL_THUMB,\n        useExisting: MatSliderVisualThumb\n      }],\n      template: \"<div class=\\\"mdc-slider__value-indicator-container\\\" *ngIf=\\\"discrete\\\" #valueIndicatorContainer>\\n  <div class=\\\"mdc-slider__value-indicator\\\">\\n    <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n  </div>\\n</div>\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-mdc-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\",\n      styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_SLIDER]\n      }]\n    }];\n  }, {\n    discrete: [{\n      type: Input\n    }],\n    thumbPosition: [{\n      type: Input\n    }],\n    valueIndicatorText: [{\n      type: Input\n    }],\n    _ripple: [{\n      type: ViewChild,\n      args: [MatRipple]\n    }],\n    _knob: [{\n      type: ViewChild,\n      args: ['knob']\n    }],\n    _valueIndicatorContainer: [{\n      type: ViewChild,\n      args: ['valueIndicatorContainer']\n    }]\n  });\n})(); // TODO(wagnermaciel): maybe handle the following edge case:\n// 1. start dragging discrete slider\n// 2. tab to disable checkbox\n// 3. without ending drag, disable the slider\n// Boilerplate for applying mixins to MatSlider.\n\n\nconst _MatSliderMixinBase = mixinColor(mixinDisableRipple(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n\n}), 'primary');\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\n\n\nclass MatSlider extends _MatSliderMixinBase {\n  /** Whether the slider is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(v) {\n    this._disabled = coerceBooleanProperty(v);\n\n    const endInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    const startInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    if (endInput) {\n      endInput.disabled = this._disabled;\n    }\n\n    if (startInput) {\n      startInput.disabled = this._disabled;\n    }\n  }\n  /** Whether the slider displays a numeric value label upon pressing the thumb. */\n\n\n  get discrete() {\n    return this._discrete;\n  }\n\n  set discrete(v) {\n    this._discrete = coerceBooleanProperty(v);\n\n    this._updateValueIndicatorUIs();\n  }\n  /** Whether the slider displays tick marks along the slider track. */\n\n\n  get showTickMarks() {\n    return this._showTickMarks;\n  }\n\n  set showTickMarks(v) {\n    this._showTickMarks = coerceBooleanProperty(v);\n  }\n  /** The minimum value that the slider can have. */\n\n\n  get min() {\n    return this._min;\n  }\n\n  set min(v) {\n    const min = coerceNumberProperty(v, this._min);\n\n    if (this._min !== min) {\n      this._updateMin(min);\n    }\n  }\n\n  _updateMin(min) {\n    const prevMin = this._min;\n    this._min = min;\n    this._isRange ? this._updateMinRange({\n      old: prevMin,\n      new: min\n    }) : this._updateMinNonRange(min);\n\n    this._onMinMaxOrStepChange();\n  }\n\n  _updateMinRange(min) {\n    const endInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    const startInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    startInput.min = min.new;\n    endInput.min = Math.max(min.new, startInput.value);\n    startInput.max = Math.min(endInput.max, endInput.value);\n\n    startInput._updateWidthInactive();\n\n    endInput._updateWidthInactive();\n\n    min.new < min.old ? this._onTranslateXChangeBySideEffect(endInput, startInput) : this._onTranslateXChangeBySideEffect(startInput, endInput);\n\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n\n  _updateMinNonRange(min) {\n    const input = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    if (input) {\n      const oldValue = input.value;\n      input.min = min;\n\n      input._updateThumbUIByValue();\n\n      this._updateTrackUI(input);\n\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  /** The maximum value that the slider can have. */\n\n\n  get max() {\n    return this._max;\n  }\n\n  set max(v) {\n    const max = coerceNumberProperty(v, this._max);\n\n    if (this._max !== max) {\n      this._updateMax(max);\n    }\n  }\n\n  _updateMax(max) {\n    const prevMax = this._max;\n    this._max = max;\n    this._isRange ? this._updateMaxRange({\n      old: prevMax,\n      new: max\n    }) : this._updateMaxNonRange(max);\n\n    this._onMinMaxOrStepChange();\n  }\n\n  _updateMaxRange(max) {\n    const endInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    const startInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    endInput.max = max.new;\n    startInput.max = Math.min(max.new, endInput.value);\n    endInput.min = startInput.value;\n\n    endInput._updateWidthInactive();\n\n    startInput._updateWidthInactive();\n\n    max.new > max.old ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n\n  _updateMaxNonRange(max) {\n    const input = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    if (input) {\n      const oldValue = input.value;\n      input.max = max;\n\n      input._updateThumbUIByValue();\n\n      this._updateTrackUI(input);\n\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  /** The values at which the thumb will snap. */\n\n\n  get step() {\n    return this._step;\n  }\n\n  set step(v) {\n    const step = coerceNumberProperty(v, this._step);\n\n    if (this._step !== step) {\n      this._updateStep(step);\n    }\n  }\n\n  _updateStep(step) {\n    this._step = step;\n    this._isRange ? this._updateStepRange() : this._updateStepNonRange();\n\n    this._onMinMaxOrStepChange();\n  }\n\n  _updateStepRange() {\n    const endInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    const startInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    const prevStartValue = startInput.value;\n    endInput.min = this._min;\n    startInput.max = this._max;\n    endInput.step = this._step;\n    startInput.step = this._step;\n\n    if (this._platform.SAFARI) {\n      endInput.value = endInput.value;\n      startInput.value = startInput.value;\n    }\n\n    endInput.min = Math.max(this._min, startInput.value);\n    startInput.max = Math.min(this._max, endInput.value);\n\n    startInput._updateWidthInactive();\n\n    endInput._updateWidthInactive();\n\n    endInput.value < prevStartValue ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n\n  _updateStepNonRange() {\n    const input = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    if (input) {\n      const oldValue = input.value;\n      input.step = this._step;\n\n      if (this._platform.SAFARI) {\n        input.value = input.value;\n      }\n\n      input._updateThumbUIByValue();\n\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n\n  constructor(_ngZone, _cdr, elementRef, _dir, _globalRippleOptions, animationMode) {\n    super(elementRef);\n    this._ngZone = _ngZone;\n    this._cdr = _cdr;\n    this._dir = _dir;\n    this._globalRippleOptions = _globalRippleOptions;\n    this._disabled = false;\n    this._discrete = false;\n    this._showTickMarks = false;\n    this._min = 0;\n    this._max = 100;\n    this._step = 1;\n    /**\n     * Function that will be used to format the value before it is displayed\n     * in the thumb label. Can be used to format very large number in order\n     * for them to fit into the slider thumb.\n     */\n\n    this.displayWith = value => `${value}`;\n\n    this._rippleRadius = 24; // The value indicator tooltip text for the visual slider thumb(s).\n\n    /** @docs-private */\n\n    this.startValueIndicatorText = '';\n    /** @docs-private */\n\n    this.endValueIndicatorText = '';\n    this._isRange = false;\n    /** Whether the slider is rtl. */\n\n    this._isRtl = false;\n    this._hasViewInitialized = false;\n    /**\n     * The width of the tick mark track.\n     * The tick mark track width is different from full track width\n     */\n\n    this._tickMarkTrackWidth = 0;\n    this._hasAnimation = false;\n    this._resizeTimer = null;\n    this._platform = inject(Platform);\n    /** The radius of the native slider's knob. AFAIK there is no way to avoid hardcoding this. */\n\n    this._knobRadius = 8;\n    /** Whether or not the slider thumbs overlap. */\n\n    this._thumbsOverlap = false;\n    this._noopAnimations = animationMode === 'NoopAnimations';\n    this._dirChangeSubscription = this._dir.change.subscribe(() => this._onDirChange());\n    this._isRtl = this._dir.value === 'rtl';\n  }\n\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._updateDimensions();\n    }\n\n    const eInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    const sInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    this._isRange = !!eInput && !!sInput;\n\n    this._cdr.detectChanges();\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      _validateInputs(this._isRange, this._getInput(2\n      /* _MatThumb.END */\n      ), this._getInput(1\n      /* _MatThumb.START */\n      ));\n    }\n\n    const thumb = this._getThumb(2\n    /* _MatThumb.END */\n    );\n\n    this._rippleRadius = thumb._ripple.radius;\n    this._inputPadding = this._rippleRadius - this._knobRadius;\n    this._inputOffset = this._knobRadius;\n    this._isRange ? this._initUIRange(eInput, sInput) : this._initUINonRange(eInput);\n\n    this._updateTrackUI(eInput);\n\n    this._updateTickMarkUI();\n\n    this._updateTickMarkTrackUI();\n\n    this._observeHostResize();\n\n    this._cdr.detectChanges();\n  }\n\n  _initUINonRange(eInput) {\n    eInput.initProps();\n    eInput.initUI();\n\n    this._updateValueIndicatorUI(eInput);\n\n    this._hasViewInitialized = true;\n\n    eInput._updateThumbUIByValue();\n  }\n\n  _initUIRange(eInput, sInput) {\n    eInput.initProps();\n    eInput.initUI();\n    sInput.initProps();\n    sInput.initUI();\n\n    eInput._updateMinMax();\n\n    sInput._updateMinMax();\n\n    eInput._updateStaticStyles();\n\n    sInput._updateStaticStyles();\n\n    this._updateValueIndicatorUIs();\n\n    this._hasViewInitialized = true;\n\n    eInput._updateThumbUIByValue();\n\n    sInput._updateThumbUIByValue();\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n\n    this._resizeObserver?.disconnect();\n    this._resizeObserver = null;\n  }\n  /** Handles updating the slider ui after a dir change. */\n\n\n  _onDirChange() {\n    this._isRtl = this._dir.value === 'rtl';\n    this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange();\n\n    this._updateTickMarkUI();\n  }\n\n  _onDirChangeRange() {\n    const endInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    const startInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    endInput._setIsLeftThumb();\n\n    startInput._setIsLeftThumb();\n\n    endInput.translateX = endInput._calcTranslateXByValue();\n    startInput.translateX = startInput._calcTranslateXByValue();\n\n    endInput._updateStaticStyles();\n\n    startInput._updateStaticStyles();\n\n    endInput._updateWidthInactive();\n\n    startInput._updateWidthInactive();\n\n    endInput._updateThumbUIByValue();\n\n    startInput._updateThumbUIByValue();\n  }\n\n  _onDirChangeNonRange() {\n    const input = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    input._updateThumbUIByValue();\n  }\n  /** Starts observing and updating the slider if the host changes its size. */\n\n\n  _observeHostResize() {\n    if (typeof ResizeObserver === 'undefined' || !ResizeObserver) {\n      return;\n    }\n\n    this._ngZone.runOutsideAngular(() => {\n      this._resizeObserver = new ResizeObserver(() => {\n        if (this._isActive()) {\n          return;\n        }\n\n        if (this._resizeTimer) {\n          clearTimeout(this._resizeTimer);\n        }\n\n        this._onResize();\n      });\n\n      this._resizeObserver.observe(this._elementRef.nativeElement);\n    });\n  }\n  /** Whether any of the thumbs are currently active. */\n\n\n  _isActive() {\n    return this._getThumb(1\n    /* _MatThumb.START */\n    )._isActive || this._getThumb(2\n    /* _MatThumb.END */\n    )._isActive;\n  }\n\n  _getValue(thumbPosition = 2\n  /* _MatThumb.END */\n  ) {\n    const input = this._getInput(thumbPosition);\n\n    if (!input) {\n      return this.min;\n    }\n\n    return input.value;\n  }\n\n  _skipUpdate() {\n    return !!(this._getInput(1\n    /* _MatThumb.START */\n    )?._skipUIUpdate || this._getInput(2\n    /* _MatThumb.END */\n    )?._skipUIUpdate);\n  }\n  /** Stores the slider dimensions. */\n\n\n  _updateDimensions() {\n    this._cachedWidth = this._elementRef.nativeElement.offsetWidth;\n    this._cachedLeft = this._elementRef.nativeElement.getBoundingClientRect().left;\n  }\n  /** Sets the styles for the active portion of the track. */\n\n\n  _setTrackActiveStyles(styles) {\n    const trackStyle = this._trackActive.nativeElement.style;\n    trackStyle.left = styles.left;\n    trackStyle.right = styles.right;\n    trackStyle.transformOrigin = styles.transformOrigin;\n    trackStyle.transform = styles.transform;\n  }\n  /** Returns the translateX positioning for a tick mark based on it's index. */\n\n\n  _calcTickMarkTransform(index) {\n    // TODO(wagnermaciel): See if we can avoid doing this and just using flex to position these.\n    const translateX = index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1));\n    return `translateX(${translateX}px`;\n  } // Handlers for updating the slider ui.\n\n\n  _onTranslateXChange(source) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n\n    this._updateThumbUI(source);\n\n    this._updateTrackUI(source);\n\n    this._updateOverlappingThumbUI(source);\n  }\n\n  _onTranslateXChangeBySideEffect(input1, input2) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n\n    input1._updateThumbUIByValue();\n\n    input2._updateThumbUIByValue();\n  }\n\n  _onValueChange(source) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n\n    this._updateValueIndicatorUI(source);\n\n    this._updateTickMarkUI();\n\n    this._cdr.detectChanges();\n  }\n\n  _onMinMaxOrStepChange() {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n\n    this._updateTickMarkUI();\n\n    this._updateTickMarkTrackUI();\n\n    this._cdr.markForCheck();\n  }\n\n  _onResize() {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n\n    this._updateDimensions();\n\n    if (this._isRange) {\n      const eInput = this._getInput(2\n      /* _MatThumb.END */\n      );\n\n      const sInput = this._getInput(1\n      /* _MatThumb.START */\n      );\n\n      eInput._updateThumbUIByValue();\n\n      sInput._updateThumbUIByValue();\n\n      eInput._updateStaticStyles();\n\n      sInput._updateStaticStyles();\n\n      eInput._updateMinMax();\n\n      sInput._updateMinMax();\n\n      eInput._updateWidthInactive();\n\n      sInput._updateWidthInactive();\n    } else {\n      const eInput = this._getInput(2\n      /* _MatThumb.END */\n      );\n\n      if (eInput) {\n        eInput._updateThumbUIByValue();\n      }\n    }\n\n    this._updateTickMarkUI();\n\n    this._updateTickMarkTrackUI();\n\n    this._cdr.detectChanges();\n  }\n  /** Returns true if the slider knobs are overlapping one another. */\n\n\n  _areThumbsOverlapping() {\n    const startInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    const endInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    if (!startInput || !endInput) {\n      return false;\n    }\n\n    return endInput.translateX - startInput.translateX < 20;\n  }\n  /**\n   * Updates the class names of overlapping slider thumbs so\n   * that the current active thumb is styled to be on \"top\".\n   */\n\n\n  _updateOverlappingThumbClassNames(source) {\n    const sibling = source.getSibling();\n\n    const sourceThumb = this._getThumb(source.thumbPosition);\n\n    const siblingThumb = this._getThumb(sibling.thumbPosition);\n\n    siblingThumb._hostElement.classList.remove('mdc-slider__thumb--top');\n\n    sourceThumb._hostElement.classList.toggle('mdc-slider__thumb--top', this._thumbsOverlap);\n  }\n  /** Updates the UI of slider thumbs when they begin or stop overlapping. */\n\n\n  _updateOverlappingThumbUI(source) {\n    if (!this._isRange || this._skipUpdate()) {\n      return;\n    }\n\n    if (this._thumbsOverlap !== this._areThumbsOverlapping()) {\n      this._thumbsOverlap = !this._thumbsOverlap;\n\n      this._updateOverlappingThumbClassNames(source);\n    }\n  } // _MatThumb styles update conditions\n  //\n  // 1. TranslateX, resize, or dir change\n  //    - Reason: The thumb styles need to be updated according to the new translateX.\n  // 2. Min, max, or step\n  //    - Reason: The value may have silently changed.\n\n  /** Updates the translateX of the given thumb. */\n\n\n  _updateThumbUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n\n    const thumb = this._getThumb(source.thumbPosition === 2\n    /* _MatThumb.END */\n    ? 2\n    /* _MatThumb.END */\n    : 1\n    /* _MatThumb.START */\n    );\n\n    thumb._hostElement.style.transform = `translateX(${source.translateX}px)`;\n  } // Value indicator text update conditions\n  //\n  // 1. Value\n  //    - Reason: The value displayed needs to be updated.\n  // 2. Min, max, or step\n  //    - Reason: The value may have silently changed.\n\n  /** Updates the value indicator tooltip ui for the given thumb. */\n\n\n  _updateValueIndicatorUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n\n    const valuetext = this.displayWith(source.value);\n    this._hasViewInitialized ? source._valuetext = valuetext : source._hostElement.setAttribute('aria-valuetext', valuetext);\n\n    if (this.discrete) {\n      source.thumbPosition === 1\n      /* _MatThumb.START */\n      ? this.startValueIndicatorText = valuetext : this.endValueIndicatorText = valuetext;\n\n      const visualThumb = this._getThumb(source.thumbPosition);\n\n      valuetext.length < 3 ? visualThumb._hostElement.classList.add('mdc-slider__thumb--short-value') : visualThumb._hostElement.classList.remove('mdc-slider__thumb--short-value');\n    }\n  }\n  /** Updates all value indicator UIs in the slider. */\n\n\n  _updateValueIndicatorUIs() {\n    const eInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    const sInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    if (eInput) {\n      this._updateValueIndicatorUI(eInput);\n    }\n\n    if (sInput) {\n      this._updateValueIndicatorUI(sInput);\n    }\n  } // Update Tick Mark Track Width\n  //\n  // 1. Min, max, or step\n  //    - Reason: The maximum reachable value may have changed.\n  //    - Side note: The maximum reachable value is different from the maximum value set by the\n  //      user. For example, a slider with [min: 5, max: 100, step: 10] would have a maximum\n  //      reachable value of 95.\n  // 2. Resize\n  //    - Reason: The position for the maximum reachable value needs to be recalculated.\n\n  /** Updates the width of the tick mark track. */\n\n\n  _updateTickMarkTrackUI() {\n    if (!this.showTickMarks || this._skipUpdate()) {\n      return;\n    }\n\n    const step = this._step && this._step > 0 ? this._step : 1;\n    const maxValue = Math.floor(this.max / step) * step;\n    const percentage = (maxValue - this.min) / (this.max - this.min);\n    this._tickMarkTrackWidth = this._cachedWidth * percentage - 6;\n  } // Track active update conditions\n  //\n  // 1. TranslateX\n  //    - Reason: The track active should line up with the new thumb position.\n  // 2. Min or max\n  //    - Reason #1: The 'active' percentage needs to be recalculated.\n  //    - Reason #2: The value may have silently changed.\n  // 3. Step\n  //    - Reason: The value may have silently changed causing the thumb(s) to shift.\n  // 4. Dir change\n  //    - Reason: The track active will need to be updated according to the new thumb position(s).\n  // 5. Resize\n  //    - Reason: The total width the 'active' tracks translateX is based on has changed.\n\n  /** Updates the scale on the active portion of the track. */\n\n\n  _updateTrackUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n\n    this._isRange ? this._updateTrackUIRange(source) : this._updateTrackUINonRange(source);\n  }\n\n  _updateTrackUIRange(source) {\n    const sibling = source.getSibling();\n\n    if (!sibling || !this._cachedWidth) {\n      return;\n    }\n\n    const activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;\n\n    if (source._isLeftThumb && this._cachedWidth) {\n      this._setTrackActiveStyles({\n        left: 'auto',\n        right: `${this._cachedWidth - sibling.translateX}px`,\n        transformOrigin: 'right',\n        transform: `scaleX(${activePercentage})`\n      });\n    } else {\n      this._setTrackActiveStyles({\n        left: `${sibling.translateX}px`,\n        right: 'auto',\n        transformOrigin: 'left',\n        transform: `scaleX(${activePercentage})`\n      });\n    }\n  }\n\n  _updateTrackUINonRange(source) {\n    this._isRtl ? this._setTrackActiveStyles({\n      left: 'auto',\n      right: '0px',\n      transformOrigin: 'right',\n      transform: `scaleX(${1 - source.fillPercentage})`\n    }) : this._setTrackActiveStyles({\n      left: '0px',\n      right: 'auto',\n      transformOrigin: 'left',\n      transform: `scaleX(${source.fillPercentage})`\n    });\n  } // Tick mark update conditions\n  //\n  // 1. Value\n  //    - Reason: a tick mark which was once active might now be inactive or vice versa.\n  // 2. Min, max, or step\n  //    - Reason #1: the number of tick marks may have changed.\n  //    - Reason #2: The value may have silently changed.\n\n  /** Updates the dots along the slider track. */\n\n\n  _updateTickMarkUI() {\n    if (!this.showTickMarks || this.step === undefined || this.min === undefined || this.max === undefined) {\n      return;\n    }\n\n    const step = this.step > 0 ? this.step : 1;\n    this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step);\n\n    if (this._isRtl) {\n      this._tickMarks.reverse();\n    }\n  }\n\n  _updateTickMarkUINonRange(step) {\n    const value = this._getValue();\n\n    let numActive = Math.max(Math.round((value - this.min) / step), 0);\n    let numInactive = Math.max(Math.round((this.max - value) / step), 0);\n    this._isRtl ? numActive++ : numInactive++;\n    this._tickMarks = Array(numActive).fill(0\n    /* _MatTickMark.ACTIVE */\n    ).concat(Array(numInactive).fill(1\n    /* _MatTickMark.INACTIVE */\n    ));\n  }\n\n  _updateTickMarkUIRange(step) {\n    const endValue = this._getValue();\n\n    const startValue = this._getValue(1\n    /* _MatThumb.START */\n    );\n\n    const numInactiveBeforeStartThumb = Math.max(Math.floor((startValue - this.min) / step), 0);\n    const numActive = Math.max(Math.floor((endValue - startValue) / step) + 1, 0);\n    const numInactiveAfterEndThumb = Math.max(Math.floor((this.max - endValue) / step), 0);\n    this._tickMarks = Array(numInactiveBeforeStartThumb).fill(1\n    /* _MatTickMark.INACTIVE */\n    ).concat(Array(numActive).fill(0\n    /* _MatTickMark.ACTIVE */\n    ), Array(numInactiveAfterEndThumb).fill(1\n    /* _MatTickMark.INACTIVE */\n    ));\n  }\n  /** Gets the slider thumb input of the given thumb position. */\n\n\n  _getInput(thumbPosition) {\n    if (thumbPosition === 2\n    /* _MatThumb.END */\n    && this._input) {\n      return this._input;\n    }\n\n    if (this._inputs?.length) {\n      return thumbPosition === 1\n      /* _MatThumb.START */\n      ? this._inputs.first : this._inputs.last;\n    }\n\n    return;\n  }\n  /** Gets the slider thumb HTML input element of the given thumb position. */\n\n\n  _getThumb(thumbPosition) {\n    return thumbPosition === 2\n    /* _MatThumb.END */\n    ? this._thumbs?.last : this._thumbs?.first;\n  }\n\n  _setTransition(withAnimation) {\n    this._hasAnimation = !this._platform.IOS && withAnimation && !this._noopAnimations;\n\n    this._elementRef.nativeElement.classList.toggle('mat-mdc-slider-with-animation', this._hasAnimation);\n  }\n  /** Whether the given pointer event occurred within the bounds of the slider pointer's DOM Rect. */\n\n\n  _isCursorOnSliderThumb(event, rect) {\n    const radius = rect.width / 2;\n    const centerX = rect.x + radius;\n    const centerY = rect.y + radius;\n    const dx = event.clientX - centerX;\n    const dy = event.clientY - centerY;\n    return Math.pow(dx, 2) + Math.pow(dy, 2) < Math.pow(radius, 2);\n  }\n\n}\n\nMatSlider.ɵfac = function MatSlider_Factory(t) {\n  return new (t || MatSlider)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatSlider.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatSlider,\n  selectors: [[\"mat-slider\"]],\n  contentQueries: function MatSlider_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_THUMB, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_RANGE_THUMB, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._input = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputs = _t);\n    }\n  },\n  viewQuery: function MatSlider_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(MAT_SLIDER_VISUAL_THUMB, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._trackActive = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._thumbs = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-mdc-slider\", \"mdc-slider\"],\n  hostVars: 10,\n  hostBindings: function MatSlider_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mdc-slider--range\", ctx._isRange)(\"mdc-slider--disabled\", ctx.disabled)(\"mdc-slider--discrete\", ctx.discrete)(\"mdc-slider--tick-marks\", ctx.showTickMarks)(\"_mat-animation-noopable\", ctx._noopAnimations);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disableRipple: \"disableRipple\",\n    disabled: \"disabled\",\n    discrete: \"discrete\",\n    showTickMarks: \"showTickMarks\",\n    min: \"min\",\n    max: \"max\",\n    step: \"step\",\n    displayWith: \"displayWith\"\n  },\n  exportAs: [\"matSlider\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_SLIDER,\n    useExisting: MatSlider\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c3,\n  decls: 9,\n  vars: 5,\n  consts: [[1, \"mdc-slider__track\"], [1, \"mdc-slider__track--inactive\"], [1, \"mdc-slider__track--active\"], [1, \"mdc-slider__track--active_fill\"], [\"trackActive\", \"\"], [\"class\", \"mdc-slider__tick-marks\", 4, \"ngIf\"], [3, \"discrete\", \"thumbPosition\", \"valueIndicatorText\", 4, \"ngIf\"], [3, \"discrete\", \"thumbPosition\", \"valueIndicatorText\"], [1, \"mdc-slider__tick-marks\"], [\"tickMarkContainer\", \"\"], [4, \"ngIf\"], [3, \"class\", \"transform\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function MatSlider_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵelement(2, \"div\", 1);\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"div\", 3, 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, MatSlider_div_6_Template, 3, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, MatSlider_mat_slider_visual_thumb_7_Template, 1, 3, \"mat-slider-visual-thumb\", 6);\n      i0.ɵɵelement(8, \"mat-slider-visual-thumb\", 7);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.showTickMarks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx._isRange);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"discrete\", ctx.discrete)(\"thumbPosition\", 2)(\"valueIndicatorText\", ctx.endValueIndicatorText);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, MatSliderVisualThumb],\n  styles: [\".mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden}.mdc-slider .mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;pointer-events:none;position:absolute;top:2px;width:44px}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px);top:calc((var(--mdc-slider-inactive-track-height, 4px) - var(--mdc-slider-active-track-height, 6px)) / 2)}.mat-mdc-slider .mdc-slider__track--active_fill{border-top-width:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{box-sizing:content-box;pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__value-indicator{word-break:normal}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSlider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider',\n      host: {\n        'class': 'mat-mdc-slider mdc-slider',\n        '[class.mdc-slider--range]': '_isRange',\n        '[class.mdc-slider--disabled]': 'disabled',\n        '[class.mdc-slider--discrete]': 'discrete',\n        '[class.mdc-slider--tick-marks]': 'showTickMarks',\n        '[class._mat-animation-noopable]': '_noopAnimations'\n      },\n      exportAs: 'matSlider',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      inputs: ['color', 'disableRipple'],\n      providers: [{\n        provide: MAT_SLIDER,\n        useExisting: MatSlider\n      }],\n      template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"showTickMarks\\\" class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n    <ng-container *ngIf=\\\"_cachedWidth\\\">\\n        <div\\n          *ngFor=\\\"let tickMark of _tickMarks; let i = index\\\"\\n          [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n          [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n    </ng-container>\\n  </div>\\n</div>\\n\\n<!-- Thumbs -->\\n<mat-slider-visual-thumb\\n  *ngIf=\\\"_isRange\\\"\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"1\\\"\\n  [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\",\n      styles: [\".mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden}.mdc-slider .mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;pointer-events:none;position:absolute;top:2px;width:44px}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px);top:calc((var(--mdc-slider-inactive-track-height, 4px) - var(--mdc-slider-active-track-height, 6px)) / 2)}.mat-mdc-slider .mdc-slider__track--active_fill{border-top-width:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{box-sizing:content-box;pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__value-indicator{word-break:normal}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _trackActive: [{\n      type: ViewChild,\n      args: ['trackActive']\n    }],\n    _thumbs: [{\n      type: ViewChildren,\n      args: [MAT_SLIDER_VISUAL_THUMB]\n    }],\n    _input: [{\n      type: ContentChild,\n      args: [MAT_SLIDER_THUMB]\n    }],\n    _inputs: [{\n      type: ContentChildren,\n      args: [MAT_SLIDER_RANGE_THUMB, {\n        descendants: false\n      }]\n    }],\n    disabled: [{\n      type: Input\n    }],\n    discrete: [{\n      type: Input\n    }],\n    showTickMarks: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    displayWith: [{\n      type: Input\n    }]\n  });\n})();\n/** Ensures that there is not an invalid configuration for the slider thumb inputs. */\n\n\nfunction _validateInputs(isRange, endInputElement, startInputElement) {\n  const startValid = !isRange || startInputElement?._hostElement.hasAttribute('matSliderStartThumb');\n\n  const endValid = endInputElement._hostElement.hasAttribute(isRange ? 'matSliderEndThumb' : 'matSliderThumb');\n\n  if (!startValid || !endValid) {\n    _throwInvalidInputConfigurationError();\n  }\n}\n\nfunction _throwInvalidInputConfigurationError() {\n  throw Error(`Invalid slider thumb input configuration!\n\n   Valid configurations are as follows:\n\n     <mat-slider>\n       <input matSliderThumb>\n     </mat-slider>\n\n     or\n\n     <mat-slider>\n       <input matSliderStartThumb>\n       <input matSliderEndThumb>\n     </mat-slider>\n   `);\n}\n/**\n * Provider that allows the slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\n\n\nconst MAT_SLIDER_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSliderThumb),\n  multi: true\n};\n/**\n * Provider that allows the range slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\n\nconst MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSliderRangeThumb),\n  multi: true\n};\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<mat-slider>`.\n * Up to two may be placed inside of a `<mat-slider>`.\n *\n * If one is used, the selector `matSliderThumb` must be used, and the outcome will be a normal\n * slider. If two are used, the selectors `matSliderStartThumb` and `matSliderEndThumb` must be\n * used, and the outcome will be a range slider with two slider thumbs.\n */\n\nclass MatSliderThumb {\n  get value() {\n    return coerceNumberProperty(this._hostElement.value);\n  }\n\n  set value(v) {\n    const val = coerceNumberProperty(v).toString();\n\n    if (!this._hasSetInitialValue) {\n      this._initialValue = val;\n      return;\n    }\n\n    if (this._isActive) {\n      return;\n    }\n\n    this._hostElement.value = val;\n\n    this._updateThumbUIByValue();\n\n    this._slider._onValueChange(this);\n\n    this._cdr.detectChanges();\n\n    this._slider._cdr.markForCheck();\n  }\n  /**\n   * The current translateX in px of the slider visual thumb.\n   * @docs-private\n   */\n\n\n  get translateX() {\n    if (this._slider.min >= this._slider.max) {\n      this._translateX = 0;\n      return this._translateX;\n    }\n\n    if (this._translateX === undefined) {\n      this._translateX = this._calcTranslateXByValue();\n    }\n\n    return this._translateX;\n  }\n\n  set translateX(v) {\n    this._translateX = v;\n  }\n  /** @docs-private */\n\n\n  get min() {\n    return coerceNumberProperty(this._hostElement.min);\n  }\n\n  set min(v) {\n    this._hostElement.min = coerceNumberProperty(v).toString();\n\n    this._cdr.detectChanges();\n  }\n  /** @docs-private */\n\n\n  get max() {\n    return coerceNumberProperty(this._hostElement.max);\n  }\n\n  set max(v) {\n    this._hostElement.max = coerceNumberProperty(v).toString();\n\n    this._cdr.detectChanges();\n  }\n\n  get step() {\n    return coerceNumberProperty(this._hostElement.step);\n  }\n\n  set step(v) {\n    this._hostElement.step = coerceNumberProperty(v).toString();\n\n    this._cdr.detectChanges();\n  }\n  /** @docs-private */\n\n\n  get disabled() {\n    return coerceBooleanProperty(this._hostElement.disabled);\n  }\n\n  set disabled(v) {\n    this._hostElement.disabled = coerceBooleanProperty(v);\n\n    this._cdr.detectChanges();\n\n    if (this._slider.disabled !== this.disabled) {\n      this._slider.disabled = this.disabled;\n    }\n  }\n  /** The percentage of the slider that coincides with the value. */\n\n\n  get percentage() {\n    if (this._slider.min >= this._slider.max) {\n      return this._slider._isRtl ? 1 : 0;\n    }\n\n    return (this.value - this._slider.min) / (this._slider.max - this._slider.min);\n  }\n  /** @docs-private */\n\n\n  get fillPercentage() {\n    if (!this._slider._cachedWidth) {\n      return this._slider._isRtl ? 1 : 0;\n    }\n\n    if (this._translateX === 0) {\n      return 0;\n    }\n\n    return this.translateX / this._slider._cachedWidth;\n  }\n  /** Used to relay updates to _isFocused to the slider visual thumbs. */\n\n\n  _setIsFocused(v) {\n    this._isFocused = v;\n  }\n\n  constructor(_ngZone, _elementRef, _cdr, _slider) {\n    this._ngZone = _ngZone;\n    this._elementRef = _elementRef;\n    this._cdr = _cdr;\n    this._slider = _slider;\n    /** Event emitted when the `value` is changed. */\n\n    this.valueChange = new EventEmitter();\n    /** Event emitted when the slider thumb starts being dragged. */\n\n    this.dragStart = new EventEmitter();\n    /** Event emitted when the slider thumb stops being dragged. */\n\n    this.dragEnd = new EventEmitter();\n    /**\n     * Indicates whether this thumb is the start or end thumb.\n     * @docs-private\n     */\n\n    this.thumbPosition = 2\n    /* _MatThumb.END */\n    ;\n    /** The radius of a native html slider's knob. */\n\n    this._knobRadius = 8;\n    /** Whether user's cursor is currently in a mouse down state on the input. */\n\n    this._isActive = false;\n    /** Whether the input is currently focused (either by tab or after clicking). */\n\n    this._isFocused = false;\n    /**\n     * Whether the initial value has been set.\n     * This exists because the initial value cannot be immediately set because the min and max\n     * must first be relayed from the parent MatSlider component, which can only happen later\n     * in the component lifecycle.\n     */\n\n    this._hasSetInitialValue = false;\n    /** Emits when the component is destroyed. */\n\n    this._destroyed = new Subject();\n    /**\n     * Indicates whether UI updates should be skipped.\n     *\n     * This flag is used to avoid flickering\n     * when correcting values on pointer up/down.\n     */\n\n    this._skipUIUpdate = false;\n    /** Callback called when the slider input has been touched. */\n\n    this._onTouchedFn = () => {};\n    /**\n     * Whether the NgModel has been initialized.\n     *\n     * This flag is used to ignore ghost null calls to\n     * writeValue which can break slider initialization.\n     *\n     * See https://github.com/angular/angular/issues/14988.\n     */\n\n\n    this._isControlInitialized = false;\n    this._platform = inject(Platform);\n    this._hostElement = _elementRef.nativeElement;\n\n    this._ngZone.runOutsideAngular(() => {\n      this._hostElement.addEventListener('pointerdown', this._onPointerDown.bind(this));\n\n      this._hostElement.addEventListener('pointermove', this._onPointerMove.bind(this));\n\n      this._hostElement.addEventListener('pointerup', this._onPointerUp.bind(this));\n    });\n  }\n\n  ngOnDestroy() {\n    this._hostElement.removeEventListener('pointerdown', this._onPointerDown);\n\n    this._hostElement.removeEventListener('pointermove', this._onPointerMove);\n\n    this._hostElement.removeEventListener('pointerup', this._onPointerUp);\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    this.dragStart.complete();\n    this.dragEnd.complete();\n  }\n  /** @docs-private */\n\n\n  initProps() {\n    this._updateWidthInactive(); // If this or the parent slider is disabled, just make everything disabled.\n\n\n    if (this.disabled !== this._slider.disabled) {\n      // The MatSlider setter for disabled will relay this and disable both inputs.\n      this._slider.disabled = true;\n    }\n\n    this.step = this._slider.step;\n    this.min = this._slider.min;\n    this.max = this._slider.max;\n\n    this._initValue();\n  }\n  /** @docs-private */\n\n\n  initUI() {\n    this._updateThumbUIByValue();\n  }\n\n  _initValue() {\n    this._hasSetInitialValue = true;\n\n    if (this._initialValue === undefined) {\n      this.value = this._getDefaultValue();\n    } else {\n      this._hostElement.value = this._initialValue;\n\n      this._updateThumbUIByValue();\n\n      this._slider._onValueChange(this);\n\n      this._cdr.detectChanges();\n    }\n  }\n\n  _getDefaultValue() {\n    return this.min;\n  }\n\n  _onBlur() {\n    this._setIsFocused(false);\n\n    this._onTouchedFn();\n  }\n\n  _onFocus() {\n    this._setIsFocused(true);\n  }\n\n  _onChange() {\n    this.valueChange.emit(this.value); // only used to handle the edge case where user\n    // mousedown on the slider then uses arrow keys.\n\n    if (this._isActive) {\n      this._updateThumbUIByValue({\n        withAnimation: true\n      });\n    }\n  }\n\n  _onInput() {\n    this._onChangeFn?.(this.value); // handles arrowing and updating the value when\n    // a step is defined.\n\n    if (this._slider.step || !this._isActive) {\n      this._updateThumbUIByValue({\n        withAnimation: true\n      });\n    }\n\n    this._slider._onValueChange(this);\n  }\n\n  _onNgControlValueChange() {\n    // only used to handle when the value change\n    // originates outside of the slider.\n    if (!this._isActive || !this._isFocused) {\n      this._slider._onValueChange(this);\n\n      this._updateThumbUIByValue();\n    }\n\n    this._slider.disabled = this._formControl.disabled;\n  }\n\n  _onPointerDown(event) {\n    if (this.disabled || event.button !== 0) {\n      return;\n    } // On IOS, dragging only works if the pointer down happens on the\n    // slider thumb and the slider does not receive focus from pointer events.\n\n\n    if (this._platform.IOS) {\n      const isCursorOnSliderThumb = this._slider._isCursorOnSliderThumb(event, this._slider._getThumb(this.thumbPosition)._hostElement.getBoundingClientRect());\n\n      this._isActive = isCursorOnSliderThumb;\n\n      this._updateWidthActive();\n\n      this._slider._updateDimensions();\n\n      return;\n    }\n\n    this._isActive = true;\n\n    this._setIsFocused(true);\n\n    this._updateWidthActive();\n\n    this._slider._updateDimensions(); // Does nothing if a step is defined because we\n    // want the value to snap to the values on input.\n\n\n    if (!this._slider.step) {\n      this._updateThumbUIByPointerEvent(event, {\n        withAnimation: true\n      });\n    }\n\n    if (!this.disabled) {\n      this._handleValueCorrection(event);\n\n      this.dragStart.emit({\n        source: this,\n        parent: this._slider,\n        value: this.value\n      });\n    }\n  }\n  /**\n   * Corrects the value of the slider on pointer up/down.\n   *\n   * Called on pointer down and up because the value is set based\n   * on the inactive width instead of the active width.\n   */\n\n\n  _handleValueCorrection(event) {\n    // Don't update the UI with the current value! The value on pointerdown\n    // and pointerup is calculated in the split second before the input(s)\n    // resize. See _updateWidthInactive() and _updateWidthActive() for more\n    // details.\n    this._skipUIUpdate = true; // Note that this function gets triggered before the actual value of the\n    // slider is updated. This means if we were to set the value here, it\n    // would immediately be overwritten. Using setTimeout ensures the setting\n    // of the value happens after the value has been updated by the\n    // pointerdown event.\n\n    setTimeout(() => {\n      this._skipUIUpdate = false;\n\n      this._fixValue(event);\n    }, 0);\n  }\n  /** Corrects the value of the slider based on the pointer event's position. */\n\n\n  _fixValue(event) {\n    const xPos = event.clientX - this._slider._cachedLeft;\n    const width = this._slider._cachedWidth;\n    const step = this._slider.step === 0 ? 1 : this._slider.step;\n    const numSteps = Math.floor((this._slider.max - this._slider.min) / step);\n    const percentage = this._slider._isRtl ? 1 - xPos / width : xPos / width; // To ensure the percentage is rounded to the necessary number of decimals.\n\n    const fixedPercentage = Math.round(percentage * numSteps) / numSteps;\n    const impreciseValue = fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min;\n    const value = Math.round(impreciseValue / step) * step;\n    const prevValue = this.value;\n\n    if (value === prevValue) {\n      // Because we prevented UI updates, if it turns out that the race\n      // condition didn't happen and the value is already correct, we\n      // have to apply the ui updates now.\n      this._slider._onValueChange(this);\n\n      this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n        withAnimation: this._slider._hasAnimation\n      });\n      return;\n    }\n\n    this.value = value;\n    this.valueChange.emit(this.value);\n    this._onChangeFn?.(this.value);\n\n    this._slider._onValueChange(this);\n\n    this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n      withAnimation: this._slider._hasAnimation\n    });\n  }\n\n  _onPointerMove(event) {\n    // Again, does nothing if a step is defined because\n    // we want the value to snap to the values on input.\n    if (!this._slider.step && this._isActive) {\n      this._updateThumbUIByPointerEvent(event);\n    }\n  }\n\n  _onPointerUp() {\n    if (this._isActive) {\n      this._isActive = false;\n      this.dragEnd.emit({\n        source: this,\n        parent: this._slider,\n        value: this.value\n      }); // This setTimeout is to prevent the pointerup from triggering a value\n      // change on the input based on the inactive width. It's not clear why\n      // but for some reason on IOS this race condition is even more common so\n      // the timeout needs to be increased.\n\n      setTimeout(() => this._updateWidthInactive(), this._platform.IOS ? 10 : 0);\n    }\n  }\n\n  _clamp(v) {\n    return Math.max(Math.min(v, this._slider._cachedWidth), 0);\n  }\n\n  _calcTranslateXByValue() {\n    if (this._slider._isRtl) {\n      return (1 - this.percentage) * this._slider._cachedWidth;\n    }\n\n    return this.percentage * this._slider._cachedWidth;\n  }\n\n  _calcTranslateXByPointerEvent(event) {\n    return event.clientX - this._slider._cachedLeft;\n  }\n  /**\n   * Used to set the slider width to the correct\n   * dimensions while the user is dragging.\n   */\n\n\n  _updateWidthActive() {\n    this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n    this._hostElement.style.width = `calc(100% + ${this._slider._inputPadding}px)`;\n  }\n  /**\n   * Sets the slider input to disproportionate dimensions to allow for touch\n   * events to be captured on touch devices.\n   */\n\n\n  _updateWidthInactive() {\n    this._hostElement.style.padding = '0px';\n    this._hostElement.style.width = 'calc(100% + 48px)';\n    this._hostElement.style.left = '-24px';\n  }\n\n  _updateThumbUIByValue(options) {\n    this.translateX = this._clamp(this._calcTranslateXByValue());\n\n    this._updateThumbUI(options);\n  }\n\n  _updateThumbUIByPointerEvent(event, options) {\n    this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event));\n\n    this._updateThumbUI(options);\n  }\n\n  _updateThumbUI(options) {\n    this._slider._setTransition(!!options?.withAnimation);\n\n    this._slider._onTranslateXChange(this);\n  }\n  /**\n   * Sets the input's value.\n   * @param value The new value of the input\n   * @docs-private\n   */\n\n\n  writeValue(value) {\n    if (this._isControlInitialized || value !== null) {\n      this.value = value;\n    }\n  }\n  /**\n   * Registers a callback to be invoked when the input's value changes from user input.\n   * @param fn The callback to register\n   * @docs-private\n   */\n\n\n  registerOnChange(fn) {\n    this._onChangeFn = fn;\n    this._isControlInitialized = true;\n  }\n  /**\n   * Registers a callback to be invoked when the input is blurred by the user.\n   * @param fn The callback to register\n   * @docs-private\n   */\n\n\n  registerOnTouched(fn) {\n    this._onTouchedFn = fn;\n  }\n  /**\n   * Sets the disabled state of the slider.\n   * @param isDisabled The new disabled state\n   * @docs-private\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  focus() {\n    this._hostElement.focus();\n  }\n\n  blur() {\n    this._hostElement.blur();\n  }\n\n}\n\nMatSliderThumb.ɵfac = function MatSliderThumb_Factory(t) {\n  return new (t || MatSliderThumb)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_SLIDER));\n};\n\nMatSliderThumb.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatSliderThumb,\n  selectors: [[\"input\", \"matSliderThumb\", \"\"]],\n  hostAttrs: [\"type\", \"range\", 1, \"mdc-slider__input\"],\n  hostVars: 1,\n  hostBindings: function MatSliderThumb_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"change\", function MatSliderThumb_change_HostBindingHandler() {\n        return ctx._onChange();\n      })(\"input\", function MatSliderThumb_input_HostBindingHandler() {\n        return ctx._onInput();\n      })(\"blur\", function MatSliderThumb_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      })(\"focus\", function MatSliderThumb_focus_HostBindingHandler() {\n        return ctx._onFocus();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-valuetext\", ctx._valuetext);\n    }\n  },\n  inputs: {\n    value: \"value\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    dragStart: \"dragStart\",\n    dragEnd: \"dragEnd\"\n  },\n  exportAs: [\"matSliderThumb\"],\n  features: [i0.ɵɵProvidersFeature([MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n    provide: MAT_SLIDER_THUMB,\n    useExisting: MatSliderThumb\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderThumb, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matSliderThumb]',\n      exportAs: 'matSliderThumb',\n      host: {\n        'class': 'mdc-slider__input',\n        'type': 'range',\n        '[attr.aria-valuetext]': '_valuetext',\n        '(change)': '_onChange()',\n        '(input)': '_onInput()',\n        // TODO(wagnermaciel): Consider using a global event listener instead.\n        // Reason: I have found a semi-consistent way to mouse up without triggering this event.\n        '(blur)': '_onBlur()',\n        '(focus)': '_onFocus()'\n      },\n      providers: [MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_THUMB,\n        useExisting: MatSliderThumb\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_SLIDER]\n      }]\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }]\n  });\n})();\n\nclass MatSliderRangeThumb extends MatSliderThumb {\n  /** @docs-private */\n  getSibling() {\n    if (!this._sibling) {\n      this._sibling = this._slider._getInput(this._isEndThumb ? 1\n      /* _MatThumb.START */\n      : 2\n      /* _MatThumb.END */\n      );\n    }\n\n    return this._sibling;\n  }\n  /**\n   * Returns the minimum translateX position allowed for this slider input's visual thumb.\n   * @docs-private\n   */\n\n\n  getMinPos() {\n    const sibling = this.getSibling();\n\n    if (!this._isLeftThumb && sibling) {\n      return sibling.translateX;\n    }\n\n    return 0;\n  }\n  /**\n   * Returns the maximum translateX position allowed for this slider input's visual thumb.\n   * @docs-private\n   */\n\n\n  getMaxPos() {\n    const sibling = this.getSibling();\n\n    if (this._isLeftThumb && sibling) {\n      return sibling.translateX;\n    }\n\n    return this._slider._cachedWidth;\n  }\n\n  _setIsLeftThumb() {\n    this._isLeftThumb = this._isEndThumb && this._slider._isRtl || !this._isEndThumb && !this._slider._isRtl;\n  }\n\n  constructor(_ngZone, _slider, _elementRef, _cdr) {\n    super(_ngZone, _elementRef, _cdr, _slider);\n    this._cdr = _cdr;\n    this._isEndThumb = this._hostElement.hasAttribute('matSliderEndThumb');\n\n    this._setIsLeftThumb();\n\n    this.thumbPosition = this._isEndThumb ? 2\n    /* _MatThumb.END */\n    : 1\n    /* _MatThumb.START */\n    ;\n  }\n\n  _getDefaultValue() {\n    return this._isEndThumb && this._slider._isRange ? this.max : this.min;\n  }\n\n  _onInput() {\n    super._onInput();\n\n    this._updateSibling();\n\n    if (!this._isActive) {\n      this._updateWidthInactive();\n    }\n  }\n\n  _onNgControlValueChange() {\n    super._onNgControlValueChange();\n\n    this.getSibling()?._updateMinMax();\n  }\n\n  _onPointerDown(event) {\n    if (this.disabled || event.button !== 0) {\n      return;\n    }\n\n    if (this._sibling) {\n      this._sibling._updateWidthActive();\n\n      this._sibling._hostElement.classList.add('mat-mdc-slider-input-no-pointer-events');\n    }\n\n    super._onPointerDown(event);\n  }\n\n  _onPointerUp() {\n    super._onPointerUp();\n\n    if (this._sibling) {\n      setTimeout(() => {\n        this._sibling._updateWidthInactive();\n\n        this._sibling._hostElement.classList.remove('mat-mdc-slider-input-no-pointer-events');\n      });\n    }\n  }\n\n  _onPointerMove(event) {\n    super._onPointerMove(event);\n\n    if (!this._slider.step && this._isActive) {\n      this._updateSibling();\n    }\n  }\n\n  _fixValue(event) {\n    super._fixValue(event);\n\n    this._sibling?._updateMinMax();\n  }\n\n  _clamp(v) {\n    return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());\n  }\n\n  _updateMinMax() {\n    const sibling = this.getSibling();\n\n    if (!sibling) {\n      return;\n    }\n\n    if (this._isEndThumb) {\n      this.min = Math.max(this._slider.min, sibling.value);\n      this.max = this._slider.max;\n    } else {\n      this.min = this._slider.min;\n      this.max = Math.min(this._slider.max, sibling.value);\n    }\n  }\n\n  _updateWidthActive() {\n    const minWidth = this._slider._rippleRadius * 2 - this._slider._inputPadding * 2;\n    const maxWidth = this._slider._cachedWidth + this._slider._inputPadding - minWidth;\n    const percentage = this._slider.min < this._slider.max ? (this.max - this.min) / (this._slider.max - this._slider.min) : 1;\n    const width = maxWidth * percentage + minWidth;\n    this._hostElement.style.width = `${width}px`;\n    this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n  }\n\n  _updateWidthInactive() {\n    const sibling = this.getSibling();\n\n    if (!sibling) {\n      return;\n    }\n\n    const maxWidth = this._slider._cachedWidth;\n    const midValue = this._isEndThumb ? this.value - (this.value - sibling.value) / 2 : this.value + (sibling.value - this.value) / 2;\n\n    const _percentage = this._isEndThumb ? (this.max - midValue) / (this._slider.max - this._slider.min) : (midValue - this.min) / (this._slider.max - this._slider.min);\n\n    const percentage = this._slider.min < this._slider.max ? _percentage : 1; // Extend the native input width by the radius of the ripple\n\n    let ripplePadding = this._slider._rippleRadius; // If one of the inputs is maximally sized (the value of both thumbs is\n    // equal to the min or max), make that input take up all of the width and\n    // make the other unselectable.\n\n    if (percentage === 1) {\n      ripplePadding = 48;\n    } else if (percentage === 0) {\n      ripplePadding = 0;\n    }\n\n    const width = maxWidth * percentage + ripplePadding;\n    this._hostElement.style.width = `${width}px`;\n    this._hostElement.style.padding = '0px';\n\n    if (this._isLeftThumb) {\n      this._hostElement.style.left = '-24px';\n      this._hostElement.style.right = 'auto';\n    } else {\n      this._hostElement.style.left = 'auto';\n      this._hostElement.style.right = '-24px';\n    }\n  }\n\n  _updateStaticStyles() {\n    this._hostElement.classList.toggle('mat-slider__right-input', !this._isLeftThumb);\n  }\n\n  _updateSibling() {\n    const sibling = this.getSibling();\n\n    if (!sibling) {\n      return;\n    }\n\n    sibling._updateMinMax();\n\n    if (this._isActive) {\n      sibling._updateWidthActive();\n    } else {\n      sibling._updateWidthInactive();\n    }\n  }\n  /**\n   * Sets the input's value.\n   * @param value The new value of the input\n   * @docs-private\n   */\n\n\n  writeValue(value) {\n    if (this._isControlInitialized || value !== null) {\n      this.value = value;\n\n      this._updateWidthInactive();\n\n      this._updateSibling();\n    }\n  }\n\n}\n\nMatSliderRangeThumb.ɵfac = function MatSliderRangeThumb_Factory(t) {\n  return new (t || MatSliderRangeThumb)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MAT_SLIDER), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nMatSliderRangeThumb.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatSliderRangeThumb,\n  selectors: [[\"input\", \"matSliderStartThumb\", \"\"], [\"input\", \"matSliderEndThumb\", \"\"]],\n  exportAs: [\"matSliderRangeThumb\"],\n  features: [i0.ɵɵProvidersFeature([MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n    provide: MAT_SLIDER_RANGE_THUMB,\n    useExisting: MatSliderRangeThumb\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderRangeThumb, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matSliderStartThumb], input[matSliderEndThumb]',\n      exportAs: 'matSliderRangeThumb',\n      providers: [MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_RANGE_THUMB,\n        useExisting: MatSliderRangeThumb\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_SLIDER]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n\nclass MatSliderModule {}\n\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) {\n  return new (t || MatSliderModule)();\n};\n\nMatSliderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatSliderModule\n});\nMatSliderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [MatCommonModule, CommonModule, MatRippleModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CommonModule, MatRippleModule],\n      exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb],\n      declarations: [MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MatSlider, MatSliderChange, MatSliderModule, MatSliderRangeThumb, MatSliderThumb, MatSliderVisualThumb };","map":{"version":3,"names":["i1","coerceBooleanProperty","coerceNumberProperty","Platform","i0","InjectionToken","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","ViewChild","inject","Optional","ViewChildren","ContentChild","ContentChildren","forwardRef","EventEmitter","Directive","Output","NgModule","i2$1","MatRipple","mixinColor","mixinDisableRipple","MAT_RIPPLE_GLOBAL_OPTIONS","MatCommonModule","MatRippleModule","ANIMATION_MODULE_TYPE","i2","CommonModule","NG_VALUE_ACCESSOR","Subject","MAT_SLIDER","MAT_SLIDER_THUMB","MAT_SLIDER_RANGE_THUMB","MAT_SLIDER_VISUAL_THUMB","MatSliderChange","MatSliderVisualThumb","constructor","_cdr","_ngZone","_elementRef","_slider","_isHovered","_isActive","_isValueIndicatorVisible","_onPointerMove","event","_sliderInput","_isFocused","rect","_hostElement","getBoundingClientRect","isHovered","_isCursorOnSliderThumb","_showHoverRipple","_hideRipple","_hoverRippleRef","_onMouseLeave","_onFocus","_showFocusRipple","classList","add","_onBlur","_focusRippleRef","remove","_onDragStart","button","_showActiveRipple","_onDragEnd","_activeRippleRef","nativeElement","ngAfterViewInit","_ripple","radius","_getInput","thumbPosition","_sliderInputEl","input","runOutsideAngular","addEventListener","ngOnDestroy","removeEventListener","_isShowingRipple","_showRipple","enterDuration","exitDuration","element","rippleRef","state","animation","ignoreGlobalRippleConfig","disabled","_showValueIndicator","_isRange","sibling","_getThumb","_globalRippleOptions","launch","_noopAnimations","centered","persistent","fadeOut","_isShowingAnyRipple","_hideValueIndicator","_getSibling","_getValueIndicatorContainer","_valueIndicatorContainer","_getKnob","_knob","ɵfac","ChangeDetectorRef","NgZone","ElementRef","ɵcmp","provide","useExisting","NgIf","type","args","selector","host","changeDetection","OnPush","encapsulation","None","providers","template","styles","undefined","decorators","discrete","valueIndicatorText","_MatSliderMixinBase","MatSlider","_disabled","v","endInput","startInput","_discrete","_updateValueIndicatorUIs","showTickMarks","_showTickMarks","min","_min","_updateMin","prevMin","_updateMinRange","old","new","_updateMinNonRange","_onMinMaxOrStepChange","oldEndValue","value","oldStartValue","Math","max","_updateWidthInactive","_onTranslateXChangeBySideEffect","_onValueChange","oldValue","_updateThumbUIByValue","_updateTrackUI","_max","_updateMax","prevMax","_updateMaxRange","_updateMaxNonRange","step","_step","_updateStep","_updateStepRange","_updateStepNonRange","prevStartValue","_platform","SAFARI","elementRef","_dir","animationMode","displayWith","_rippleRadius","startValueIndicatorText","endValueIndicatorText","_isRtl","_hasViewInitialized","_tickMarkTrackWidth","_hasAnimation","_resizeTimer","_knobRadius","_thumbsOverlap","_dirChangeSubscription","change","subscribe","_onDirChange","isBrowser","_updateDimensions","eInput","sInput","detectChanges","ngDevMode","_validateInputs","thumb","_inputPadding","_inputOffset","_initUIRange","_initUINonRange","_updateTickMarkUI","_updateTickMarkTrackUI","_observeHostResize","initProps","initUI","_updateValueIndicatorUI","_updateMinMax","_updateStaticStyles","unsubscribe","_resizeObserver","disconnect","_onDirChangeRange","_onDirChangeNonRange","_setIsLeftThumb","translateX","_calcTranslateXByValue","ResizeObserver","clearTimeout","_onResize","observe","_getValue","_skipUpdate","_skipUIUpdate","_cachedWidth","offsetWidth","_cachedLeft","left","_setTrackActiveStyles","trackStyle","_trackActive","style","right","transformOrigin","transform","_calcTickMarkTransform","index","_tickMarks","length","_onTranslateXChange","source","_updateThumbUI","_updateOverlappingThumbUI","input1","input2","markForCheck","_areThumbsOverlapping","_updateOverlappingThumbClassNames","getSibling","sourceThumb","siblingThumb","toggle","valuetext","_valuetext","setAttribute","visualThumb","maxValue","floor","percentage","_updateTrackUIRange","_updateTrackUINonRange","activePercentage","abs","_isLeftThumb","fillPercentage","_updateTickMarkUIRange","_updateTickMarkUINonRange","reverse","numActive","round","numInactive","Array","fill","concat","endValue","startValue","numInactiveBeforeStartThumb","numInactiveAfterEndThumb","_input","_inputs","first","last","_thumbs","_setTransition","withAnimation","IOS","width","centerX","x","centerY","y","dx","clientX","dy","clientY","pow","Directionality","NgForOf","exportAs","inputs","descendants","isRange","endInputElement","startInputElement","startValid","hasAttribute","endValid","_throwInvalidInputConfigurationError","Error","MAT_SLIDER_THUMB_VALUE_ACCESSOR","MatSliderThumb","multi","MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR","MatSliderRangeThumb","val","toString","_hasSetInitialValue","_initialValue","_translateX","_setIsFocused","valueChange","dragStart","dragEnd","_destroyed","_onTouchedFn","_isControlInitialized","_onPointerDown","bind","_onPointerUp","next","complete","_initValue","_getDefaultValue","_onChange","emit","_onInput","_onChangeFn","_onNgControlValueChange","_formControl","isCursorOnSliderThumb","_updateWidthActive","_updateThumbUIByPointerEvent","_handleValueCorrection","parent","setTimeout","_fixValue","xPos","numSteps","fixedPercentage","impreciseValue","prevValue","_clamp","_calcTranslateXByPointerEvent","padding","options","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","focus","blur","ɵdir","_sibling","_isEndThumb","getMinPos","getMaxPos","_updateSibling","minWidth","maxWidth","midValue","_percentage","ripplePadding","MatSliderModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/Henry/Desktop/New folder/Atomas2/node_modules/@angular/material/fesm2022/slider.mjs"],"sourcesContent":["import * as i1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ViewChild, inject, Optional, ViewChildren, ContentChild, ContentChildren, forwardRef, EventEmitter, Directive, Output, NgModule } from '@angular/core';\nimport * as i2$1 from '@angular/material/core';\nimport { MatRipple, mixinColor, mixinDisableRipple, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n/**\n * Injection token that can be used for a `MatSlider` to provide itself as a\n * parent to the `MatSliderThumb` and `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER = new InjectionToken('_MatSlider');\n/**\n * Injection token that can be used to query for a `MatSliderThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB = new InjectionToken('_MatSliderThumb');\n/**\n * Injection token that can be used to query for a `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB = new InjectionToken('_MatSliderRangeThumb');\n/**\n * Injection token that can be used to query for a `MatSliderVisualThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_VISUAL_THUMB = new InjectionToken('_MatSliderVisualThumb');\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use event bindings directly on the MatSliderThumbs for `change` and `input` events. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatSliderChange {\n}\n\n/**\n * The visual slider thumb.\n *\n * Handles the slider thumb ripple states (hover, focus, and active),\n * and displaying the value tooltip on discrete sliders.\n * @docs-private\n */\nclass MatSliderVisualThumb {\n    constructor(_cdr, _ngZone, _elementRef, _slider) {\n        this._cdr = _cdr;\n        this._ngZone = _ngZone;\n        this._slider = _slider;\n        /** Whether the slider thumb is currently being hovered. */\n        this._isHovered = false;\n        /** Whether the slider thumb is currently being pressed. */\n        this._isActive = false;\n        /** Whether the value indicator tooltip is visible. */\n        this._isValueIndicatorVisible = false;\n        this._onPointerMove = (event) => {\n            if (this._sliderInput._isFocused) {\n                return;\n            }\n            const rect = this._hostElement.getBoundingClientRect();\n            const isHovered = this._slider._isCursorOnSliderThumb(event, rect);\n            this._isHovered = isHovered;\n            if (isHovered) {\n                this._showHoverRipple();\n            }\n            else {\n                this._hideRipple(this._hoverRippleRef);\n            }\n        };\n        this._onMouseLeave = () => {\n            this._isHovered = false;\n            this._hideRipple(this._hoverRippleRef);\n        };\n        this._onFocus = () => {\n            // We don't want to show the hover ripple on top of the focus ripple.\n            // Happen when the users cursor is over a thumb and then the user tabs to it.\n            this._hideRipple(this._hoverRippleRef);\n            this._showFocusRipple();\n            this._hostElement.classList.add('mdc-slider__thumb--focused');\n        };\n        this._onBlur = () => {\n            // Happens when the user tabs away while still dragging a thumb.\n            if (!this._isActive) {\n                this._hideRipple(this._focusRippleRef);\n            }\n            // Happens when the user tabs away from a thumb but their cursor is still over it.\n            if (this._isHovered) {\n                this._showHoverRipple();\n            }\n            this._hostElement.classList.remove('mdc-slider__thumb--focused');\n        };\n        this._onDragStart = (event) => {\n            if (event.button !== 0) {\n                return;\n            }\n            this._isActive = true;\n            this._showActiveRipple();\n        };\n        this._onDragEnd = () => {\n            this._isActive = false;\n            this._hideRipple(this._activeRippleRef);\n            // Happens when the user starts dragging a thumb, tabs away, and then stops dragging.\n            if (!this._sliderInput._isFocused) {\n                this._hideRipple(this._focusRippleRef);\n            }\n        };\n        this._hostElement = _elementRef.nativeElement;\n    }\n    ngAfterViewInit() {\n        this._ripple.radius = 24;\n        this._sliderInput = this._slider._getInput(this.thumbPosition);\n        this._sliderInputEl = this._sliderInput._hostElement;\n        const input = this._sliderInputEl;\n        // These listeners don't update any data bindings so we bind them outside\n        // of the NgZone to prevent Angular from needlessly running change detection.\n        this._ngZone.runOutsideAngular(() => {\n            input.addEventListener('pointermove', this._onPointerMove);\n            input.addEventListener('pointerdown', this._onDragStart);\n            input.addEventListener('pointerup', this._onDragEnd);\n            input.addEventListener('pointerleave', this._onMouseLeave);\n            input.addEventListener('focus', this._onFocus);\n            input.addEventListener('blur', this._onBlur);\n        });\n    }\n    ngOnDestroy() {\n        const input = this._sliderInputEl;\n        input.removeEventListener('pointermove', this._onPointerMove);\n        input.removeEventListener('pointerdown', this._onDragStart);\n        input.removeEventListener('pointerup', this._onDragEnd);\n        input.removeEventListener('pointerleave', this._onMouseLeave);\n        input.removeEventListener('focus', this._onFocus);\n        input.removeEventListener('blur', this._onBlur);\n    }\n    /** Handles displaying the hover ripple. */\n    _showHoverRipple() {\n        if (!this._isShowingRipple(this._hoverRippleRef)) {\n            this._hoverRippleRef = this._showRipple({ enterDuration: 0, exitDuration: 0 });\n            this._hoverRippleRef?.element.classList.add('mat-mdc-slider-hover-ripple');\n        }\n    }\n    /** Handles displaying the focus ripple. */\n    _showFocusRipple() {\n        // Show the focus ripple event if noop animations are enabled.\n        if (!this._isShowingRipple(this._focusRippleRef)) {\n            this._focusRippleRef = this._showRipple({ enterDuration: 0, exitDuration: 0 }, true);\n            this._focusRippleRef?.element.classList.add('mat-mdc-slider-focus-ripple');\n        }\n    }\n    /** Handles displaying the active ripple. */\n    _showActiveRipple() {\n        if (!this._isShowingRipple(this._activeRippleRef)) {\n            this._activeRippleRef = this._showRipple({ enterDuration: 225, exitDuration: 400 });\n            this._activeRippleRef?.element.classList.add('mat-mdc-slider-active-ripple');\n        }\n    }\n    /** Whether the given rippleRef is currently fading in or visible. */\n    _isShowingRipple(rippleRef) {\n        return rippleRef?.state === 0 /* RippleState.FADING_IN */ || rippleRef?.state === 1 /* RippleState.VISIBLE */;\n    }\n    /** Manually launches the slider thumb ripple using the specified ripple animation config. */\n    _showRipple(animation, ignoreGlobalRippleConfig) {\n        if (this._slider.disabled) {\n            return;\n        }\n        this._showValueIndicator();\n        if (this._slider._isRange) {\n            const sibling = this._slider._getThumb(this.thumbPosition === 1 /* _MatThumb.START */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n            sibling._showValueIndicator();\n        }\n        if (this._slider._globalRippleOptions?.disabled && !ignoreGlobalRippleConfig) {\n            return;\n        }\n        return this._ripple.launch({\n            animation: this._slider._noopAnimations ? { enterDuration: 0, exitDuration: 0 } : animation,\n            centered: true,\n            persistent: true,\n        });\n    }\n    /**\n     * Fades out the given ripple.\n     * Also hides the value indicator if no ripple is showing.\n     */\n    _hideRipple(rippleRef) {\n        rippleRef?.fadeOut();\n        if (this._isShowingAnyRipple()) {\n            return;\n        }\n        if (!this._slider._isRange) {\n            this._hideValueIndicator();\n        }\n        const sibling = this._getSibling();\n        if (!sibling._isShowingAnyRipple()) {\n            this._hideValueIndicator();\n            sibling._hideValueIndicator();\n        }\n    }\n    /** Shows the value indicator ui. */\n    _showValueIndicator() {\n        this._hostElement.classList.add('mdc-slider__thumb--with-indicator');\n    }\n    /** Hides the value indicator ui. */\n    _hideValueIndicator() {\n        this._hostElement.classList.remove('mdc-slider__thumb--with-indicator');\n    }\n    _getSibling() {\n        return this._slider._getThumb(this.thumbPosition === 1 /* _MatThumb.START */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n    }\n    /** Gets the value indicator container's native HTML element. */\n    _getValueIndicatorContainer() {\n        return this._valueIndicatorContainer?.nativeElement;\n    }\n    /** Gets the native HTML element of the slider thumb knob. */\n    _getKnob() {\n        return this._knob.nativeElement;\n    }\n    _isShowingAnyRipple() {\n        return (this._isShowingRipple(this._hoverRippleRef) ||\n            this._isShowingRipple(this._focusRippleRef) ||\n            this._isShowingRipple(this._activeRippleRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSliderVisualThumb, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i0.ElementRef }, { token: MAT_SLIDER }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSliderVisualThumb, selector: \"mat-slider-visual-thumb\", inputs: { discrete: \"discrete\", thumbPosition: \"thumbPosition\", valueIndicatorText: \"valueIndicatorText\" }, host: { classAttribute: \"mdc-slider__thumb mat-mdc-slider-visual-thumb\" }, providers: [{ provide: MAT_SLIDER_VISUAL_THUMB, useExisting: MatSliderVisualThumb }], viewQueries: [{ propertyName: \"_ripple\", first: true, predicate: MatRipple, descendants: true }, { propertyName: \"_knob\", first: true, predicate: [\"knob\"], descendants: true }, { propertyName: \"_valueIndicatorContainer\", first: true, predicate: [\"valueIndicatorContainer\"], descendants: true }], ngImport: i0, template: \"<div class=\\\"mdc-slider__value-indicator-container\\\" *ngIf=\\\"discrete\\\" #valueIndicatorContainer>\\n  <div class=\\\"mdc-slider__value-indicator\\\">\\n    <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n  </div>\\n</div>\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-mdc-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\", styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSliderVisualThumb, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slider-visual-thumb', host: {\n                        'class': 'mdc-slider__thumb mat-mdc-slider-visual-thumb',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [{ provide: MAT_SLIDER_VISUAL_THUMB, useExisting: MatSliderVisualThumb }], template: \"<div class=\\\"mdc-slider__value-indicator-container\\\" *ngIf=\\\"discrete\\\" #valueIndicatorContainer>\\n  <div class=\\\"mdc-slider__value-indicator\\\">\\n    <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n  </div>\\n</div>\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-mdc-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\", styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SLIDER]\n                }] }]; }, propDecorators: { discrete: [{\n                type: Input\n            }], thumbPosition: [{\n                type: Input\n            }], valueIndicatorText: [{\n                type: Input\n            }], _ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], _knob: [{\n                type: ViewChild,\n                args: ['knob']\n            }], _valueIndicatorContainer: [{\n                type: ViewChild,\n                args: ['valueIndicatorContainer']\n            }] } });\n\n// TODO(wagnermaciel): maybe handle the following edge case:\n// 1. start dragging discrete slider\n// 2. tab to disable checkbox\n// 3. without ending drag, disable the slider\n// Boilerplate for applying mixins to MatSlider.\nconst _MatSliderMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    /** Whether the slider is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(v) {\n        this._disabled = coerceBooleanProperty(v);\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        if (endInput) {\n            endInput.disabled = this._disabled;\n        }\n        if (startInput) {\n            startInput.disabled = this._disabled;\n        }\n    }\n    /** Whether the slider displays a numeric value label upon pressing the thumb. */\n    get discrete() {\n        return this._discrete;\n    }\n    set discrete(v) {\n        this._discrete = coerceBooleanProperty(v);\n        this._updateValueIndicatorUIs();\n    }\n    /** Whether the slider displays tick marks along the slider track. */\n    get showTickMarks() {\n        return this._showTickMarks;\n    }\n    set showTickMarks(v) {\n        this._showTickMarks = coerceBooleanProperty(v);\n    }\n    /** The minimum value that the slider can have. */\n    get min() {\n        return this._min;\n    }\n    set min(v) {\n        const min = coerceNumberProperty(v, this._min);\n        if (this._min !== min) {\n            this._updateMin(min);\n        }\n    }\n    _updateMin(min) {\n        const prevMin = this._min;\n        this._min = min;\n        this._isRange ? this._updateMinRange({ old: prevMin, new: min }) : this._updateMinNonRange(min);\n        this._onMinMaxOrStepChange();\n    }\n    _updateMinRange(min) {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        startInput.min = min.new;\n        endInput.min = Math.max(min.new, startInput.value);\n        startInput.max = Math.min(endInput.max, endInput.value);\n        startInput._updateWidthInactive();\n        endInput._updateWidthInactive();\n        min.new < min.old\n            ? this._onTranslateXChangeBySideEffect(endInput, startInput)\n            : this._onTranslateXChangeBySideEffect(startInput, endInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateMinNonRange(min) {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        if (input) {\n            const oldValue = input.value;\n            input.min = min;\n            input._updateThumbUIByValue();\n            this._updateTrackUI(input);\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    /** The maximum value that the slider can have. */\n    get max() {\n        return this._max;\n    }\n    set max(v) {\n        const max = coerceNumberProperty(v, this._max);\n        if (this._max !== max) {\n            this._updateMax(max);\n        }\n    }\n    _updateMax(max) {\n        const prevMax = this._max;\n        this._max = max;\n        this._isRange ? this._updateMaxRange({ old: prevMax, new: max }) : this._updateMaxNonRange(max);\n        this._onMinMaxOrStepChange();\n    }\n    _updateMaxRange(max) {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        endInput.max = max.new;\n        startInput.max = Math.min(max.new, endInput.value);\n        endInput.min = startInput.value;\n        endInput._updateWidthInactive();\n        startInput._updateWidthInactive();\n        max.new > max.old\n            ? this._onTranslateXChangeBySideEffect(startInput, endInput)\n            : this._onTranslateXChangeBySideEffect(endInput, startInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateMaxNonRange(max) {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        if (input) {\n            const oldValue = input.value;\n            input.max = max;\n            input._updateThumbUIByValue();\n            this._updateTrackUI(input);\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    /** The values at which the thumb will snap. */\n    get step() {\n        return this._step;\n    }\n    set step(v) {\n        const step = coerceNumberProperty(v, this._step);\n        if (this._step !== step) {\n            this._updateStep(step);\n        }\n    }\n    _updateStep(step) {\n        this._step = step;\n        this._isRange ? this._updateStepRange() : this._updateStepNonRange();\n        this._onMinMaxOrStepChange();\n    }\n    _updateStepRange() {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        const prevStartValue = startInput.value;\n        endInput.min = this._min;\n        startInput.max = this._max;\n        endInput.step = this._step;\n        startInput.step = this._step;\n        if (this._platform.SAFARI) {\n            endInput.value = endInput.value;\n            startInput.value = startInput.value;\n        }\n        endInput.min = Math.max(this._min, startInput.value);\n        startInput.max = Math.min(this._max, endInput.value);\n        startInput._updateWidthInactive();\n        endInput._updateWidthInactive();\n        endInput.value < prevStartValue\n            ? this._onTranslateXChangeBySideEffect(startInput, endInput)\n            : this._onTranslateXChangeBySideEffect(endInput, startInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateStepNonRange() {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        if (input) {\n            const oldValue = input.value;\n            input.step = this._step;\n            if (this._platform.SAFARI) {\n                input.value = input.value;\n            }\n            input._updateThumbUIByValue();\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    constructor(_ngZone, _cdr, elementRef, _dir, _globalRippleOptions, animationMode) {\n        super(elementRef);\n        this._ngZone = _ngZone;\n        this._cdr = _cdr;\n        this._dir = _dir;\n        this._globalRippleOptions = _globalRippleOptions;\n        this._disabled = false;\n        this._discrete = false;\n        this._showTickMarks = false;\n        this._min = 0;\n        this._max = 100;\n        this._step = 1;\n        /**\n         * Function that will be used to format the value before it is displayed\n         * in the thumb label. Can be used to format very large number in order\n         * for them to fit into the slider thumb.\n         */\n        this.displayWith = (value) => `${value}`;\n        this._rippleRadius = 24;\n        // The value indicator tooltip text for the visual slider thumb(s).\n        /** @docs-private */\n        this.startValueIndicatorText = '';\n        /** @docs-private */\n        this.endValueIndicatorText = '';\n        this._isRange = false;\n        /** Whether the slider is rtl. */\n        this._isRtl = false;\n        this._hasViewInitialized = false;\n        /**\n         * The width of the tick mark track.\n         * The tick mark track width is different from full track width\n         */\n        this._tickMarkTrackWidth = 0;\n        this._hasAnimation = false;\n        this._resizeTimer = null;\n        this._platform = inject(Platform);\n        /** The radius of the native slider's knob. AFAIK there is no way to avoid hardcoding this. */\n        this._knobRadius = 8;\n        /** Whether or not the slider thumbs overlap. */\n        this._thumbsOverlap = false;\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        this._dirChangeSubscription = this._dir.change.subscribe(() => this._onDirChange());\n        this._isRtl = this._dir.value === 'rtl';\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._updateDimensions();\n        }\n        const eInput = this._getInput(2 /* _MatThumb.END */);\n        const sInput = this._getInput(1 /* _MatThumb.START */);\n        this._isRange = !!eInput && !!sInput;\n        this._cdr.detectChanges();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            _validateInputs(this._isRange, this._getInput(2 /* _MatThumb.END */), this._getInput(1 /* _MatThumb.START */));\n        }\n        const thumb = this._getThumb(2 /* _MatThumb.END */);\n        this._rippleRadius = thumb._ripple.radius;\n        this._inputPadding = this._rippleRadius - this._knobRadius;\n        this._inputOffset = this._knobRadius;\n        this._isRange\n            ? this._initUIRange(eInput, sInput)\n            : this._initUINonRange(eInput);\n        this._updateTrackUI(eInput);\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._observeHostResize();\n        this._cdr.detectChanges();\n    }\n    _initUINonRange(eInput) {\n        eInput.initProps();\n        eInput.initUI();\n        this._updateValueIndicatorUI(eInput);\n        this._hasViewInitialized = true;\n        eInput._updateThumbUIByValue();\n    }\n    _initUIRange(eInput, sInput) {\n        eInput.initProps();\n        eInput.initUI();\n        sInput.initProps();\n        sInput.initUI();\n        eInput._updateMinMax();\n        sInput._updateMinMax();\n        eInput._updateStaticStyles();\n        sInput._updateStaticStyles();\n        this._updateValueIndicatorUIs();\n        this._hasViewInitialized = true;\n        eInput._updateThumbUIByValue();\n        sInput._updateThumbUIByValue();\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._resizeObserver?.disconnect();\n        this._resizeObserver = null;\n    }\n    /** Handles updating the slider ui after a dir change. */\n    _onDirChange() {\n        this._isRtl = this._dir.value === 'rtl';\n        this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange();\n        this._updateTickMarkUI();\n    }\n    _onDirChangeRange() {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        endInput._setIsLeftThumb();\n        startInput._setIsLeftThumb();\n        endInput.translateX = endInput._calcTranslateXByValue();\n        startInput.translateX = startInput._calcTranslateXByValue();\n        endInput._updateStaticStyles();\n        startInput._updateStaticStyles();\n        endInput._updateWidthInactive();\n        startInput._updateWidthInactive();\n        endInput._updateThumbUIByValue();\n        startInput._updateThumbUIByValue();\n    }\n    _onDirChangeNonRange() {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        input._updateThumbUIByValue();\n    }\n    /** Starts observing and updating the slider if the host changes its size. */\n    _observeHostResize() {\n        if (typeof ResizeObserver === 'undefined' || !ResizeObserver) {\n            return;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            this._resizeObserver = new ResizeObserver(() => {\n                if (this._isActive()) {\n                    return;\n                }\n                if (this._resizeTimer) {\n                    clearTimeout(this._resizeTimer);\n                }\n                this._onResize();\n            });\n            this._resizeObserver.observe(this._elementRef.nativeElement);\n        });\n    }\n    /** Whether any of the thumbs are currently active. */\n    _isActive() {\n        return this._getThumb(1 /* _MatThumb.START */)._isActive || this._getThumb(2 /* _MatThumb.END */)._isActive;\n    }\n    _getValue(thumbPosition = 2 /* _MatThumb.END */) {\n        const input = this._getInput(thumbPosition);\n        if (!input) {\n            return this.min;\n        }\n        return input.value;\n    }\n    _skipUpdate() {\n        return !!(this._getInput(1 /* _MatThumb.START */)?._skipUIUpdate || this._getInput(2 /* _MatThumb.END */)?._skipUIUpdate);\n    }\n    /** Stores the slider dimensions. */\n    _updateDimensions() {\n        this._cachedWidth = this._elementRef.nativeElement.offsetWidth;\n        this._cachedLeft = this._elementRef.nativeElement.getBoundingClientRect().left;\n    }\n    /** Sets the styles for the active portion of the track. */\n    _setTrackActiveStyles(styles) {\n        const trackStyle = this._trackActive.nativeElement.style;\n        trackStyle.left = styles.left;\n        trackStyle.right = styles.right;\n        trackStyle.transformOrigin = styles.transformOrigin;\n        trackStyle.transform = styles.transform;\n    }\n    /** Returns the translateX positioning for a tick mark based on it's index. */\n    _calcTickMarkTransform(index) {\n        // TODO(wagnermaciel): See if we can avoid doing this and just using flex to position these.\n        const translateX = index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1));\n        return `translateX(${translateX}px`;\n    }\n    // Handlers for updating the slider ui.\n    _onTranslateXChange(source) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateThumbUI(source);\n        this._updateTrackUI(source);\n        this._updateOverlappingThumbUI(source);\n    }\n    _onTranslateXChangeBySideEffect(input1, input2) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        input1._updateThumbUIByValue();\n        input2._updateThumbUIByValue();\n    }\n    _onValueChange(source) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateValueIndicatorUI(source);\n        this._updateTickMarkUI();\n        this._cdr.detectChanges();\n    }\n    _onMinMaxOrStepChange() {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._cdr.markForCheck();\n    }\n    _onResize() {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateDimensions();\n        if (this._isRange) {\n            const eInput = this._getInput(2 /* _MatThumb.END */);\n            const sInput = this._getInput(1 /* _MatThumb.START */);\n            eInput._updateThumbUIByValue();\n            sInput._updateThumbUIByValue();\n            eInput._updateStaticStyles();\n            sInput._updateStaticStyles();\n            eInput._updateMinMax();\n            sInput._updateMinMax();\n            eInput._updateWidthInactive();\n            sInput._updateWidthInactive();\n        }\n        else {\n            const eInput = this._getInput(2 /* _MatThumb.END */);\n            if (eInput) {\n                eInput._updateThumbUIByValue();\n            }\n        }\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._cdr.detectChanges();\n    }\n    /** Returns true if the slider knobs are overlapping one another. */\n    _areThumbsOverlapping() {\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        if (!startInput || !endInput) {\n            return false;\n        }\n        return endInput.translateX - startInput.translateX < 20;\n    }\n    /**\n     * Updates the class names of overlapping slider thumbs so\n     * that the current active thumb is styled to be on \"top\".\n     */\n    _updateOverlappingThumbClassNames(source) {\n        const sibling = source.getSibling();\n        const sourceThumb = this._getThumb(source.thumbPosition);\n        const siblingThumb = this._getThumb(sibling.thumbPosition);\n        siblingThumb._hostElement.classList.remove('mdc-slider__thumb--top');\n        sourceThumb._hostElement.classList.toggle('mdc-slider__thumb--top', this._thumbsOverlap);\n    }\n    /** Updates the UI of slider thumbs when they begin or stop overlapping. */\n    _updateOverlappingThumbUI(source) {\n        if (!this._isRange || this._skipUpdate()) {\n            return;\n        }\n        if (this._thumbsOverlap !== this._areThumbsOverlapping()) {\n            this._thumbsOverlap = !this._thumbsOverlap;\n            this._updateOverlappingThumbClassNames(source);\n        }\n    }\n    // _MatThumb styles update conditions\n    //\n    // 1. TranslateX, resize, or dir change\n    //    - Reason: The thumb styles need to be updated according to the new translateX.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the translateX of the given thumb. */\n    _updateThumbUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        const thumb = this._getThumb(source.thumbPosition === 2 /* _MatThumb.END */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n        thumb._hostElement.style.transform = `translateX(${source.translateX}px)`;\n    }\n    // Value indicator text update conditions\n    //\n    // 1. Value\n    //    - Reason: The value displayed needs to be updated.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the value indicator tooltip ui for the given thumb. */\n    _updateValueIndicatorUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        const valuetext = this.displayWith(source.value);\n        this._hasViewInitialized\n            ? (source._valuetext = valuetext)\n            : source._hostElement.setAttribute('aria-valuetext', valuetext);\n        if (this.discrete) {\n            source.thumbPosition === 1 /* _MatThumb.START */\n                ? (this.startValueIndicatorText = valuetext)\n                : (this.endValueIndicatorText = valuetext);\n            const visualThumb = this._getThumb(source.thumbPosition);\n            valuetext.length < 3\n                ? visualThumb._hostElement.classList.add('mdc-slider__thumb--short-value')\n                : visualThumb._hostElement.classList.remove('mdc-slider__thumb--short-value');\n        }\n    }\n    /** Updates all value indicator UIs in the slider. */\n    _updateValueIndicatorUIs() {\n        const eInput = this._getInput(2 /* _MatThumb.END */);\n        const sInput = this._getInput(1 /* _MatThumb.START */);\n        if (eInput) {\n            this._updateValueIndicatorUI(eInput);\n        }\n        if (sInput) {\n            this._updateValueIndicatorUI(sInput);\n        }\n    }\n    // Update Tick Mark Track Width\n    //\n    // 1. Min, max, or step\n    //    - Reason: The maximum reachable value may have changed.\n    //    - Side note: The maximum reachable value is different from the maximum value set by the\n    //      user. For example, a slider with [min: 5, max: 100, step: 10] would have a maximum\n    //      reachable value of 95.\n    // 2. Resize\n    //    - Reason: The position for the maximum reachable value needs to be recalculated.\n    /** Updates the width of the tick mark track. */\n    _updateTickMarkTrackUI() {\n        if (!this.showTickMarks || this._skipUpdate()) {\n            return;\n        }\n        const step = this._step && this._step > 0 ? this._step : 1;\n        const maxValue = Math.floor(this.max / step) * step;\n        const percentage = (maxValue - this.min) / (this.max - this.min);\n        this._tickMarkTrackWidth = this._cachedWidth * percentage - 6;\n    }\n    // Track active update conditions\n    //\n    // 1. TranslateX\n    //    - Reason: The track active should line up with the new thumb position.\n    // 2. Min or max\n    //    - Reason #1: The 'active' percentage needs to be recalculated.\n    //    - Reason #2: The value may have silently changed.\n    // 3. Step\n    //    - Reason: The value may have silently changed causing the thumb(s) to shift.\n    // 4. Dir change\n    //    - Reason: The track active will need to be updated according to the new thumb position(s).\n    // 5. Resize\n    //    - Reason: The total width the 'active' tracks translateX is based on has changed.\n    /** Updates the scale on the active portion of the track. */\n    _updateTrackUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        this._isRange\n            ? this._updateTrackUIRange(source)\n            : this._updateTrackUINonRange(source);\n    }\n    _updateTrackUIRange(source) {\n        const sibling = source.getSibling();\n        if (!sibling || !this._cachedWidth) {\n            return;\n        }\n        const activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;\n        if (source._isLeftThumb && this._cachedWidth) {\n            this._setTrackActiveStyles({\n                left: 'auto',\n                right: `${this._cachedWidth - sibling.translateX}px`,\n                transformOrigin: 'right',\n                transform: `scaleX(${activePercentage})`,\n            });\n        }\n        else {\n            this._setTrackActiveStyles({\n                left: `${sibling.translateX}px`,\n                right: 'auto',\n                transformOrigin: 'left',\n                transform: `scaleX(${activePercentage})`,\n            });\n        }\n    }\n    _updateTrackUINonRange(source) {\n        this._isRtl\n            ? this._setTrackActiveStyles({\n                left: 'auto',\n                right: '0px',\n                transformOrigin: 'right',\n                transform: `scaleX(${1 - source.fillPercentage})`,\n            })\n            : this._setTrackActiveStyles({\n                left: '0px',\n                right: 'auto',\n                transformOrigin: 'left',\n                transform: `scaleX(${source.fillPercentage})`,\n            });\n    }\n    // Tick mark update conditions\n    //\n    // 1. Value\n    //    - Reason: a tick mark which was once active might now be inactive or vice versa.\n    // 2. Min, max, or step\n    //    - Reason #1: the number of tick marks may have changed.\n    //    - Reason #2: The value may have silently changed.\n    /** Updates the dots along the slider track. */\n    _updateTickMarkUI() {\n        if (!this.showTickMarks ||\n            this.step === undefined ||\n            this.min === undefined ||\n            this.max === undefined) {\n            return;\n        }\n        const step = this.step > 0 ? this.step : 1;\n        this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step);\n        if (this._isRtl) {\n            this._tickMarks.reverse();\n        }\n    }\n    _updateTickMarkUINonRange(step) {\n        const value = this._getValue();\n        let numActive = Math.max(Math.round((value - this.min) / step), 0);\n        let numInactive = Math.max(Math.round((this.max - value) / step), 0);\n        this._isRtl ? numActive++ : numInactive++;\n        this._tickMarks = Array(numActive)\n            .fill(0 /* _MatTickMark.ACTIVE */)\n            .concat(Array(numInactive).fill(1 /* _MatTickMark.INACTIVE */));\n    }\n    _updateTickMarkUIRange(step) {\n        const endValue = this._getValue();\n        const startValue = this._getValue(1 /* _MatThumb.START */);\n        const numInactiveBeforeStartThumb = Math.max(Math.floor((startValue - this.min) / step), 0);\n        const numActive = Math.max(Math.floor((endValue - startValue) / step) + 1, 0);\n        const numInactiveAfterEndThumb = Math.max(Math.floor((this.max - endValue) / step), 0);\n        this._tickMarks = Array(numInactiveBeforeStartThumb)\n            .fill(1 /* _MatTickMark.INACTIVE */)\n            .concat(Array(numActive).fill(0 /* _MatTickMark.ACTIVE */), Array(numInactiveAfterEndThumb).fill(1 /* _MatTickMark.INACTIVE */));\n    }\n    /** Gets the slider thumb input of the given thumb position. */\n    _getInput(thumbPosition) {\n        if (thumbPosition === 2 /* _MatThumb.END */ && this._input) {\n            return this._input;\n        }\n        if (this._inputs?.length) {\n            return thumbPosition === 1 /* _MatThumb.START */ ? this._inputs.first : this._inputs.last;\n        }\n        return;\n    }\n    /** Gets the slider thumb HTML input element of the given thumb position. */\n    _getThumb(thumbPosition) {\n        return thumbPosition === 2 /* _MatThumb.END */ ? this._thumbs?.last : this._thumbs?.first;\n    }\n    _setTransition(withAnimation) {\n        this._hasAnimation = !this._platform.IOS && withAnimation && !this._noopAnimations;\n        this._elementRef.nativeElement.classList.toggle('mat-mdc-slider-with-animation', this._hasAnimation);\n    }\n    /** Whether the given pointer event occurred within the bounds of the slider pointer's DOM Rect. */\n    _isCursorOnSliderThumb(event, rect) {\n        const radius = rect.width / 2;\n        const centerX = rect.x + radius;\n        const centerY = rect.y + radius;\n        const dx = event.clientX - centerX;\n        const dy = event.clientY - centerY;\n        return Math.pow(dx, 2) + Math.pow(dy, 2) < Math.pow(radius, 2);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSlider, deps: [{ token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSlider, selector: \"mat-slider\", inputs: { color: \"color\", disableRipple: \"disableRipple\", disabled: \"disabled\", discrete: \"discrete\", showTickMarks: \"showTickMarks\", min: \"min\", max: \"max\", step: \"step\", displayWith: \"displayWith\" }, host: { properties: { \"class.mdc-slider--range\": \"_isRange\", \"class.mdc-slider--disabled\": \"disabled\", \"class.mdc-slider--discrete\": \"discrete\", \"class.mdc-slider--tick-marks\": \"showTickMarks\", \"class._mat-animation-noopable\": \"_noopAnimations\" }, classAttribute: \"mat-mdc-slider mdc-slider\" }, providers: [{ provide: MAT_SLIDER, useExisting: MatSlider }], queries: [{ propertyName: \"_input\", first: true, predicate: MAT_SLIDER_THUMB, descendants: true }, { propertyName: \"_inputs\", predicate: MAT_SLIDER_RANGE_THUMB }], viewQueries: [{ propertyName: \"_trackActive\", first: true, predicate: [\"trackActive\"], descendants: true }, { propertyName: \"_thumbs\", predicate: MAT_SLIDER_VISUAL_THUMB, descendants: true }], exportAs: [\"matSlider\"], usesInheritance: true, ngImport: i0, template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"showTickMarks\\\" class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n    <ng-container *ngIf=\\\"_cachedWidth\\\">\\n        <div\\n          *ngFor=\\\"let tickMark of _tickMarks; let i = index\\\"\\n          [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n          [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n    </ng-container>\\n  </div>\\n</div>\\n\\n<!-- Thumbs -->\\n<mat-slider-visual-thumb\\n  *ngIf=\\\"_isRange\\\"\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"1\\\"\\n  [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\", styles: [\".mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden}.mdc-slider .mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;pointer-events:none;position:absolute;top:2px;width:44px}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px);top:calc((var(--mdc-slider-inactive-track-height, 4px) - var(--mdc-slider-active-track-height, 6px)) / 2)}.mat-mdc-slider .mdc-slider__track--active_fill{border-top-width:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{box-sizing:content-box;pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__value-indicator{word-break:normal}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: MatSliderVisualThumb, selector: \"mat-slider-visual-thumb\", inputs: [\"discrete\", \"thumbPosition\", \"valueIndicatorText\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSlider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slider', host: {\n                        'class': 'mat-mdc-slider mdc-slider',\n                        '[class.mdc-slider--range]': '_isRange',\n                        '[class.mdc-slider--disabled]': 'disabled',\n                        '[class.mdc-slider--discrete]': 'discrete',\n                        '[class.mdc-slider--tick-marks]': 'showTickMarks',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                    }, exportAs: 'matSlider', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, inputs: ['color', 'disableRipple'], providers: [{ provide: MAT_SLIDER, useExisting: MatSlider }], template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"showTickMarks\\\" class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n    <ng-container *ngIf=\\\"_cachedWidth\\\">\\n        <div\\n          *ngFor=\\\"let tickMark of _tickMarks; let i = index\\\"\\n          [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n          [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n    </ng-container>\\n  </div>\\n</div>\\n\\n<!-- Thumbs -->\\n<mat-slider-visual-thumb\\n  *ngIf=\\\"_isRange\\\"\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"1\\\"\\n  [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\", styles: [\".mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden}.mdc-slider .mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;pointer-events:none;position:absolute;top:2px;width:44px}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px);top:calc((var(--mdc-slider-inactive-track-height, 4px) - var(--mdc-slider-active-track-height, 6px)) / 2)}.mat-mdc-slider .mdc-slider__track--active_fill{border-top-width:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{box-sizing:content-box;pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__value-indicator{word-break:normal}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _trackActive: [{\n                type: ViewChild,\n                args: ['trackActive']\n            }], _thumbs: [{\n                type: ViewChildren,\n                args: [MAT_SLIDER_VISUAL_THUMB]\n            }], _input: [{\n                type: ContentChild,\n                args: [MAT_SLIDER_THUMB]\n            }], _inputs: [{\n                type: ContentChildren,\n                args: [MAT_SLIDER_RANGE_THUMB, { descendants: false }]\n            }], disabled: [{\n                type: Input\n            }], discrete: [{\n                type: Input\n            }], showTickMarks: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], displayWith: [{\n                type: Input\n            }] } });\n/** Ensures that there is not an invalid configuration for the slider thumb inputs. */\nfunction _validateInputs(isRange, endInputElement, startInputElement) {\n    const startValid = !isRange || startInputElement?._hostElement.hasAttribute('matSliderStartThumb');\n    const endValid = endInputElement._hostElement.hasAttribute(isRange ? 'matSliderEndThumb' : 'matSliderThumb');\n    if (!startValid || !endValid) {\n        _throwInvalidInputConfigurationError();\n    }\n}\nfunction _throwInvalidInputConfigurationError() {\n    throw Error(`Invalid slider thumb input configuration!\n\n   Valid configurations are as follows:\n\n     <mat-slider>\n       <input matSliderThumb>\n     </mat-slider>\n\n     or\n\n     <mat-slider>\n       <input matSliderStartThumb>\n       <input matSliderEndThumb>\n     </mat-slider>\n   `);\n}\n\n/**\n * Provider that allows the slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSliderThumb),\n    multi: true,\n};\n/**\n * Provider that allows the range slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSliderRangeThumb),\n    multi: true,\n};\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<mat-slider>`.\n * Up to two may be placed inside of a `<mat-slider>`.\n *\n * If one is used, the selector `matSliderThumb` must be used, and the outcome will be a normal\n * slider. If two are used, the selectors `matSliderStartThumb` and `matSliderEndThumb` must be\n * used, and the outcome will be a range slider with two slider thumbs.\n */\nclass MatSliderThumb {\n    get value() {\n        return coerceNumberProperty(this._hostElement.value);\n    }\n    set value(v) {\n        const val = coerceNumberProperty(v).toString();\n        if (!this._hasSetInitialValue) {\n            this._initialValue = val;\n            return;\n        }\n        if (this._isActive) {\n            return;\n        }\n        this._hostElement.value = val;\n        this._updateThumbUIByValue();\n        this._slider._onValueChange(this);\n        this._cdr.detectChanges();\n        this._slider._cdr.markForCheck();\n    }\n    /**\n     * The current translateX in px of the slider visual thumb.\n     * @docs-private\n     */\n    get translateX() {\n        if (this._slider.min >= this._slider.max) {\n            this._translateX = 0;\n            return this._translateX;\n        }\n        if (this._translateX === undefined) {\n            this._translateX = this._calcTranslateXByValue();\n        }\n        return this._translateX;\n    }\n    set translateX(v) {\n        this._translateX = v;\n    }\n    /** @docs-private */\n    get min() {\n        return coerceNumberProperty(this._hostElement.min);\n    }\n    set min(v) {\n        this._hostElement.min = coerceNumberProperty(v).toString();\n        this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get max() {\n        return coerceNumberProperty(this._hostElement.max);\n    }\n    set max(v) {\n        this._hostElement.max = coerceNumberProperty(v).toString();\n        this._cdr.detectChanges();\n    }\n    get step() {\n        return coerceNumberProperty(this._hostElement.step);\n    }\n    set step(v) {\n        this._hostElement.step = coerceNumberProperty(v).toString();\n        this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get disabled() {\n        return coerceBooleanProperty(this._hostElement.disabled);\n    }\n    set disabled(v) {\n        this._hostElement.disabled = coerceBooleanProperty(v);\n        this._cdr.detectChanges();\n        if (this._slider.disabled !== this.disabled) {\n            this._slider.disabled = this.disabled;\n        }\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percentage() {\n        if (this._slider.min >= this._slider.max) {\n            return this._slider._isRtl ? 1 : 0;\n        }\n        return (this.value - this._slider.min) / (this._slider.max - this._slider.min);\n    }\n    /** @docs-private */\n    get fillPercentage() {\n        if (!this._slider._cachedWidth) {\n            return this._slider._isRtl ? 1 : 0;\n        }\n        if (this._translateX === 0) {\n            return 0;\n        }\n        return this.translateX / this._slider._cachedWidth;\n    }\n    /** Used to relay updates to _isFocused to the slider visual thumbs. */\n    _setIsFocused(v) {\n        this._isFocused = v;\n    }\n    constructor(_ngZone, _elementRef, _cdr, _slider) {\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._cdr = _cdr;\n        this._slider = _slider;\n        /** Event emitted when the `value` is changed. */\n        this.valueChange = new EventEmitter();\n        /** Event emitted when the slider thumb starts being dragged. */\n        this.dragStart = new EventEmitter();\n        /** Event emitted when the slider thumb stops being dragged. */\n        this.dragEnd = new EventEmitter();\n        /**\n         * Indicates whether this thumb is the start or end thumb.\n         * @docs-private\n         */\n        this.thumbPosition = 2 /* _MatThumb.END */;\n        /** The radius of a native html slider's knob. */\n        this._knobRadius = 8;\n        /** Whether user's cursor is currently in a mouse down state on the input. */\n        this._isActive = false;\n        /** Whether the input is currently focused (either by tab or after clicking). */\n        this._isFocused = false;\n        /**\n         * Whether the initial value has been set.\n         * This exists because the initial value cannot be immediately set because the min and max\n         * must first be relayed from the parent MatSlider component, which can only happen later\n         * in the component lifecycle.\n         */\n        this._hasSetInitialValue = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Indicates whether UI updates should be skipped.\n         *\n         * This flag is used to avoid flickering\n         * when correcting values on pointer up/down.\n         */\n        this._skipUIUpdate = false;\n        /** Callback called when the slider input has been touched. */\n        this._onTouchedFn = () => { };\n        /**\n         * Whether the NgModel has been initialized.\n         *\n         * This flag is used to ignore ghost null calls to\n         * writeValue which can break slider initialization.\n         *\n         * See https://github.com/angular/angular/issues/14988.\n         */\n        this._isControlInitialized = false;\n        this._platform = inject(Platform);\n        this._hostElement = _elementRef.nativeElement;\n        this._ngZone.runOutsideAngular(() => {\n            this._hostElement.addEventListener('pointerdown', this._onPointerDown.bind(this));\n            this._hostElement.addEventListener('pointermove', this._onPointerMove.bind(this));\n            this._hostElement.addEventListener('pointerup', this._onPointerUp.bind(this));\n        });\n    }\n    ngOnDestroy() {\n        this._hostElement.removeEventListener('pointerdown', this._onPointerDown);\n        this._hostElement.removeEventListener('pointermove', this._onPointerMove);\n        this._hostElement.removeEventListener('pointerup', this._onPointerUp);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.dragStart.complete();\n        this.dragEnd.complete();\n    }\n    /** @docs-private */\n    initProps() {\n        this._updateWidthInactive();\n        // If this or the parent slider is disabled, just make everything disabled.\n        if (this.disabled !== this._slider.disabled) {\n            // The MatSlider setter for disabled will relay this and disable both inputs.\n            this._slider.disabled = true;\n        }\n        this.step = this._slider.step;\n        this.min = this._slider.min;\n        this.max = this._slider.max;\n        this._initValue();\n    }\n    /** @docs-private */\n    initUI() {\n        this._updateThumbUIByValue();\n    }\n    _initValue() {\n        this._hasSetInitialValue = true;\n        if (this._initialValue === undefined) {\n            this.value = this._getDefaultValue();\n        }\n        else {\n            this._hostElement.value = this._initialValue;\n            this._updateThumbUIByValue();\n            this._slider._onValueChange(this);\n            this._cdr.detectChanges();\n        }\n    }\n    _getDefaultValue() {\n        return this.min;\n    }\n    _onBlur() {\n        this._setIsFocused(false);\n        this._onTouchedFn();\n    }\n    _onFocus() {\n        this._setIsFocused(true);\n    }\n    _onChange() {\n        this.valueChange.emit(this.value);\n        // only used to handle the edge case where user\n        // mousedown on the slider then uses arrow keys.\n        if (this._isActive) {\n            this._updateThumbUIByValue({ withAnimation: true });\n        }\n    }\n    _onInput() {\n        this._onChangeFn?.(this.value);\n        // handles arrowing and updating the value when\n        // a step is defined.\n        if (this._slider.step || !this._isActive) {\n            this._updateThumbUIByValue({ withAnimation: true });\n        }\n        this._slider._onValueChange(this);\n    }\n    _onNgControlValueChange() {\n        // only used to handle when the value change\n        // originates outside of the slider.\n        if (!this._isActive || !this._isFocused) {\n            this._slider._onValueChange(this);\n            this._updateThumbUIByValue();\n        }\n        this._slider.disabled = this._formControl.disabled;\n    }\n    _onPointerDown(event) {\n        if (this.disabled || event.button !== 0) {\n            return;\n        }\n        // On IOS, dragging only works if the pointer down happens on the\n        // slider thumb and the slider does not receive focus from pointer events.\n        if (this._platform.IOS) {\n            const isCursorOnSliderThumb = this._slider._isCursorOnSliderThumb(event, this._slider._getThumb(this.thumbPosition)._hostElement.getBoundingClientRect());\n            this._isActive = isCursorOnSliderThumb;\n            this._updateWidthActive();\n            this._slider._updateDimensions();\n            return;\n        }\n        this._isActive = true;\n        this._setIsFocused(true);\n        this._updateWidthActive();\n        this._slider._updateDimensions();\n        // Does nothing if a step is defined because we\n        // want the value to snap to the values on input.\n        if (!this._slider.step) {\n            this._updateThumbUIByPointerEvent(event, { withAnimation: true });\n        }\n        if (!this.disabled) {\n            this._handleValueCorrection(event);\n            this.dragStart.emit({ source: this, parent: this._slider, value: this.value });\n        }\n    }\n    /**\n     * Corrects the value of the slider on pointer up/down.\n     *\n     * Called on pointer down and up because the value is set based\n     * on the inactive width instead of the active width.\n     */\n    _handleValueCorrection(event) {\n        // Don't update the UI with the current value! The value on pointerdown\n        // and pointerup is calculated in the split second before the input(s)\n        // resize. See _updateWidthInactive() and _updateWidthActive() for more\n        // details.\n        this._skipUIUpdate = true;\n        // Note that this function gets triggered before the actual value of the\n        // slider is updated. This means if we were to set the value here, it\n        // would immediately be overwritten. Using setTimeout ensures the setting\n        // of the value happens after the value has been updated by the\n        // pointerdown event.\n        setTimeout(() => {\n            this._skipUIUpdate = false;\n            this._fixValue(event);\n        }, 0);\n    }\n    /** Corrects the value of the slider based on the pointer event's position. */\n    _fixValue(event) {\n        const xPos = event.clientX - this._slider._cachedLeft;\n        const width = this._slider._cachedWidth;\n        const step = this._slider.step === 0 ? 1 : this._slider.step;\n        const numSteps = Math.floor((this._slider.max - this._slider.min) / step);\n        const percentage = this._slider._isRtl ? 1 - xPos / width : xPos / width;\n        // To ensure the percentage is rounded to the necessary number of decimals.\n        const fixedPercentage = Math.round(percentage * numSteps) / numSteps;\n        const impreciseValue = fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min;\n        const value = Math.round(impreciseValue / step) * step;\n        const prevValue = this.value;\n        if (value === prevValue) {\n            // Because we prevented UI updates, if it turns out that the race\n            // condition didn't happen and the value is already correct, we\n            // have to apply the ui updates now.\n            this._slider._onValueChange(this);\n            this._slider.step > 0\n                ? this._updateThumbUIByValue()\n                : this._updateThumbUIByPointerEvent(event, { withAnimation: this._slider._hasAnimation });\n            return;\n        }\n        this.value = value;\n        this.valueChange.emit(this.value);\n        this._onChangeFn?.(this.value);\n        this._slider._onValueChange(this);\n        this._slider.step > 0\n            ? this._updateThumbUIByValue()\n            : this._updateThumbUIByPointerEvent(event, { withAnimation: this._slider._hasAnimation });\n    }\n    _onPointerMove(event) {\n        // Again, does nothing if a step is defined because\n        // we want the value to snap to the values on input.\n        if (!this._slider.step && this._isActive) {\n            this._updateThumbUIByPointerEvent(event);\n        }\n    }\n    _onPointerUp() {\n        if (this._isActive) {\n            this._isActive = false;\n            this.dragEnd.emit({ source: this, parent: this._slider, value: this.value });\n            // This setTimeout is to prevent the pointerup from triggering a value\n            // change on the input based on the inactive width. It's not clear why\n            // but for some reason on IOS this race condition is even more common so\n            // the timeout needs to be increased.\n            setTimeout(() => this._updateWidthInactive(), this._platform.IOS ? 10 : 0);\n        }\n    }\n    _clamp(v) {\n        return Math.max(Math.min(v, this._slider._cachedWidth), 0);\n    }\n    _calcTranslateXByValue() {\n        if (this._slider._isRtl) {\n            return (1 - this.percentage) * this._slider._cachedWidth;\n        }\n        return this.percentage * this._slider._cachedWidth;\n    }\n    _calcTranslateXByPointerEvent(event) {\n        return event.clientX - this._slider._cachedLeft;\n    }\n    /**\n     * Used to set the slider width to the correct\n     * dimensions while the user is dragging.\n     */\n    _updateWidthActive() {\n        this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n        this._hostElement.style.width = `calc(100% + ${this._slider._inputPadding}px)`;\n    }\n    /**\n     * Sets the slider input to disproportionate dimensions to allow for touch\n     * events to be captured on touch devices.\n     */\n    _updateWidthInactive() {\n        this._hostElement.style.padding = '0px';\n        this._hostElement.style.width = 'calc(100% + 48px)';\n        this._hostElement.style.left = '-24px';\n    }\n    _updateThumbUIByValue(options) {\n        this.translateX = this._clamp(this._calcTranslateXByValue());\n        this._updateThumbUI(options);\n    }\n    _updateThumbUIByPointerEvent(event, options) {\n        this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event));\n        this._updateThumbUI(options);\n    }\n    _updateThumbUI(options) {\n        this._slider._setTransition(!!options?.withAnimation);\n        this._slider._onTranslateXChange(this);\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n        if (this._isControlInitialized || value !== null) {\n            this.value = value;\n        }\n    }\n    /**\n     * Registers a callback to be invoked when the input's value changes from user input.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChangeFn = fn;\n        this._isControlInitialized = true;\n    }\n    /**\n     * Registers a callback to be invoked when the input is blurred by the user.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouchedFn = fn;\n    }\n    /**\n     * Sets the disabled state of the slider.\n     * @param isDisabled The new disabled state\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    focus() {\n        this._hostElement.focus();\n    }\n    blur() {\n        this._hostElement.blur();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSliderThumb, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_SLIDER }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSliderThumb, selector: \"input[matSliderThumb]\", inputs: { value: \"value\" }, outputs: { valueChange: \"valueChange\", dragStart: \"dragStart\", dragEnd: \"dragEnd\" }, host: { attributes: { \"type\": \"range\" }, listeners: { \"change\": \"_onChange()\", \"input\": \"_onInput()\", \"blur\": \"_onBlur()\", \"focus\": \"_onFocus()\" }, properties: { \"attr.aria-valuetext\": \"_valuetext\" }, classAttribute: \"mdc-slider__input\" }, providers: [\n            MAT_SLIDER_THUMB_VALUE_ACCESSOR,\n            { provide: MAT_SLIDER_THUMB, useExisting: MatSliderThumb },\n        ], exportAs: [\"matSliderThumb\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSliderThumb, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matSliderThumb]',\n                    exportAs: 'matSliderThumb',\n                    host: {\n                        'class': 'mdc-slider__input',\n                        'type': 'range',\n                        '[attr.aria-valuetext]': '_valuetext',\n                        '(change)': '_onChange()',\n                        '(input)': '_onInput()',\n                        // TODO(wagnermaciel): Consider using a global event listener instead.\n                        // Reason: I have found a semi-consistent way to mouse up without triggering this event.\n                        '(blur)': '_onBlur()',\n                        '(focus)': '_onFocus()',\n                    },\n                    providers: [\n                        MAT_SLIDER_THUMB_VALUE_ACCESSOR,\n                        { provide: MAT_SLIDER_THUMB, useExisting: MatSliderThumb },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SLIDER]\n                }] }]; }, propDecorators: { value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], dragStart: [{\n                type: Output\n            }], dragEnd: [{\n                type: Output\n            }] } });\nclass MatSliderRangeThumb extends MatSliderThumb {\n    /** @docs-private */\n    getSibling() {\n        if (!this._sibling) {\n            this._sibling = this._slider._getInput(this._isEndThumb ? 1 /* _MatThumb.START */ : 2 /* _MatThumb.END */);\n        }\n        return this._sibling;\n    }\n    /**\n     * Returns the minimum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMinPos() {\n        const sibling = this.getSibling();\n        if (!this._isLeftThumb && sibling) {\n            return sibling.translateX;\n        }\n        return 0;\n    }\n    /**\n     * Returns the maximum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMaxPos() {\n        const sibling = this.getSibling();\n        if (this._isLeftThumb && sibling) {\n            return sibling.translateX;\n        }\n        return this._slider._cachedWidth;\n    }\n    _setIsLeftThumb() {\n        this._isLeftThumb =\n            (this._isEndThumb && this._slider._isRtl) || (!this._isEndThumb && !this._slider._isRtl);\n    }\n    constructor(_ngZone, _slider, _elementRef, _cdr) {\n        super(_ngZone, _elementRef, _cdr, _slider);\n        this._cdr = _cdr;\n        this._isEndThumb = this._hostElement.hasAttribute('matSliderEndThumb');\n        this._setIsLeftThumb();\n        this.thumbPosition = this._isEndThumb ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */;\n    }\n    _getDefaultValue() {\n        return this._isEndThumb && this._slider._isRange ? this.max : this.min;\n    }\n    _onInput() {\n        super._onInput();\n        this._updateSibling();\n        if (!this._isActive) {\n            this._updateWidthInactive();\n        }\n    }\n    _onNgControlValueChange() {\n        super._onNgControlValueChange();\n        this.getSibling()?._updateMinMax();\n    }\n    _onPointerDown(event) {\n        if (this.disabled || event.button !== 0) {\n            return;\n        }\n        if (this._sibling) {\n            this._sibling._updateWidthActive();\n            this._sibling._hostElement.classList.add('mat-mdc-slider-input-no-pointer-events');\n        }\n        super._onPointerDown(event);\n    }\n    _onPointerUp() {\n        super._onPointerUp();\n        if (this._sibling) {\n            setTimeout(() => {\n                this._sibling._updateWidthInactive();\n                this._sibling._hostElement.classList.remove('mat-mdc-slider-input-no-pointer-events');\n            });\n        }\n    }\n    _onPointerMove(event) {\n        super._onPointerMove(event);\n        if (!this._slider.step && this._isActive) {\n            this._updateSibling();\n        }\n    }\n    _fixValue(event) {\n        super._fixValue(event);\n        this._sibling?._updateMinMax();\n    }\n    _clamp(v) {\n        return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());\n    }\n    _updateMinMax() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        if (this._isEndThumb) {\n            this.min = Math.max(this._slider.min, sibling.value);\n            this.max = this._slider.max;\n        }\n        else {\n            this.min = this._slider.min;\n            this.max = Math.min(this._slider.max, sibling.value);\n        }\n    }\n    _updateWidthActive() {\n        const minWidth = this._slider._rippleRadius * 2 - this._slider._inputPadding * 2;\n        const maxWidth = this._slider._cachedWidth + this._slider._inputPadding - minWidth;\n        const percentage = this._slider.min < this._slider.max\n            ? (this.max - this.min) / (this._slider.max - this._slider.min)\n            : 1;\n        const width = maxWidth * percentage + minWidth;\n        this._hostElement.style.width = `${width}px`;\n        this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n    }\n    _updateWidthInactive() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        const maxWidth = this._slider._cachedWidth;\n        const midValue = this._isEndThumb\n            ? this.value - (this.value - sibling.value) / 2\n            : this.value + (sibling.value - this.value) / 2;\n        const _percentage = this._isEndThumb\n            ? (this.max - midValue) / (this._slider.max - this._slider.min)\n            : (midValue - this.min) / (this._slider.max - this._slider.min);\n        const percentage = this._slider.min < this._slider.max ? _percentage : 1;\n        // Extend the native input width by the radius of the ripple\n        let ripplePadding = this._slider._rippleRadius;\n        // If one of the inputs is maximally sized (the value of both thumbs is\n        // equal to the min or max), make that input take up all of the width and\n        // make the other unselectable.\n        if (percentage === 1) {\n            ripplePadding = 48;\n        }\n        else if (percentage === 0) {\n            ripplePadding = 0;\n        }\n        const width = maxWidth * percentage + ripplePadding;\n        this._hostElement.style.width = `${width}px`;\n        this._hostElement.style.padding = '0px';\n        if (this._isLeftThumb) {\n            this._hostElement.style.left = '-24px';\n            this._hostElement.style.right = 'auto';\n        }\n        else {\n            this._hostElement.style.left = 'auto';\n            this._hostElement.style.right = '-24px';\n        }\n    }\n    _updateStaticStyles() {\n        this._hostElement.classList.toggle('mat-slider__right-input', !this._isLeftThumb);\n    }\n    _updateSibling() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        sibling._updateMinMax();\n        if (this._isActive) {\n            sibling._updateWidthActive();\n        }\n        else {\n            sibling._updateWidthInactive();\n        }\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n        if (this._isControlInitialized || value !== null) {\n            this.value = value;\n            this._updateWidthInactive();\n            this._updateSibling();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSliderRangeThumb, deps: [{ token: i0.NgZone }, { token: MAT_SLIDER }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSliderRangeThumb, selector: \"input[matSliderStartThumb], input[matSliderEndThumb]\", providers: [\n            MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR,\n            { provide: MAT_SLIDER_RANGE_THUMB, useExisting: MatSliderRangeThumb },\n        ], exportAs: [\"matSliderRangeThumb\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSliderRangeThumb, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matSliderStartThumb], input[matSliderEndThumb]',\n                    exportAs: 'matSliderRangeThumb',\n                    providers: [\n                        MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR,\n                        { provide: MAT_SLIDER_RANGE_THUMB, useExisting: MatSliderRangeThumb },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SLIDER]\n                }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; } });\n\nclass MatSliderModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSliderModule, declarations: [MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb], imports: [MatCommonModule, CommonModule, MatRippleModule], exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSliderModule, imports: [MatCommonModule, CommonModule, MatRippleModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CommonModule, MatRippleModule],\n                    exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb],\n                    declarations: [MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSlider, MatSliderChange, MatSliderModule, MatSliderRangeThumb, MatSliderThumb, MatSliderVisualThumb };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}