{"ast":null,"code":"import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ViewChild, Optional, ViewChildren, ContentChild, ContentChildren, forwardRef, EventEmitter, Directive, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { MatRipple, mixinColor, mixinDisableRipple, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport * as i2$1 from '@angular/cdk/bidi';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used for a `MatSlider` to provide itself as a\n * parent to the `MatSliderThumb` and `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\n\nconst _c0 = [\"knob\"];\nconst _c1 = [\"valueIndicatorContainer\"];\n\nfunction MatSliderVisualThumb_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4, 5)(2, \"div\", 6)(3, \"span\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.valueIndicatorText);\n  }\n}\n\nconst _c2 = [\"trackActive\"];\n\nfunction MatSlider_div_6_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n\n  if (rf & 2) {\n    const tickMark_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(tickMark_r6 === 0 ? \"mdc-slider__tick-mark--active\" : \"mdc-slider__tick-mark--inactive\");\n    i0.ɵɵstyleProp(\"transform\", ctx_r5._calcTickMarkTransform(i_r7));\n  }\n}\n\nfunction MatSlider_div_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MatSlider_div_6_ng_container_2_div_1_Template, 1, 4, \"div\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4._tickMarks);\n  }\n}\n\nfunction MatSlider_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8, 9);\n    i0.ɵɵtemplate(2, MatSlider_div_6_ng_container_2_Template, 2, 1, \"ng-container\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1._cachedWidth);\n  }\n}\n\nfunction MatSlider_mat_slider_visual_thumb_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-slider-visual-thumb\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"discrete\", ctx_r2.discrete)(\"thumbPosition\", 1)(\"valueIndicatorText\", ctx_r2.startValueIndicatorText);\n  }\n}\n\nconst _c3 = [\"*\"];\nconst MAT_SLIDER = new InjectionToken('_MatSlider');\n/**\n * Injection token that can be used to query for a `MatSliderThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\n\nconst MAT_SLIDER_THUMB = new InjectionToken('_MatSliderThumb');\n/**\n * Injection token that can be used to query for a `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\n\nconst MAT_SLIDER_RANGE_THUMB = new InjectionToken('_MatSliderRangeThumb');\n/**\n * Injection token that can be used to query for a `MatSliderVisualThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\n\nconst MAT_SLIDER_VISUAL_THUMB = new InjectionToken('_MatSliderVisualThumb');\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use event bindings directly on the MatSliderThumbs for `change` and `input` events. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\n\nclass MatSliderChange {}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The visual slider thumb.\n *\n * Handles the slider thumb ripple states (hover, focus, and active),\n * and displaying the value tooltip on discrete sliders.\n * @docs-private\n */\n\n\nclass MatSliderVisualThumb {\n  constructor(_cdr, _ngZone, _elementRef, _slider) {\n    this._cdr = _cdr;\n    this._ngZone = _ngZone;\n    this._slider = _slider;\n    /** Whether the slider thumb is currently being hovered. */\n\n    this._isHovered = false;\n    /** Whether the slider thumb is currently being pressed. */\n\n    this._isActive = false;\n    /** Whether the value indicator tooltip is visible. */\n\n    this._isValueIndicatorVisible = false;\n\n    this._onPointerMove = event => {\n      if (this._sliderInput._isFocused) {\n        return;\n      }\n\n      const rect = this._hostElement.getBoundingClientRect();\n\n      const isHovered = this._isSliderThumbHovered(event, rect);\n\n      this._isHovered = isHovered;\n\n      if (isHovered) {\n        this._showHoverRipple();\n      } else {\n        this._hideRipple(this._hoverRippleRef);\n      }\n    };\n\n    this._onMouseLeave = () => {\n      this._isHovered = false;\n\n      this._hideRipple(this._hoverRippleRef);\n    };\n\n    this._onFocus = () => {\n      // We don't want to show the hover ripple on top of the focus ripple.\n      // Happen when the users cursor is over a thumb and then the user tabs to it.\n      this._hideRipple(this._hoverRippleRef);\n\n      this._showFocusRipple();\n\n      this._hostElement.classList.add('mdc-slider__thumb--focused');\n    };\n\n    this._onBlur = () => {\n      // Happens when the user tabs away while still dragging a thumb.\n      if (!this._isActive) {\n        this._hideRipple(this._focusRippleRef);\n      } // Happens when the user tabs away from a thumb but their cursor is still over it.\n\n\n      if (this._isHovered) {\n        this._showHoverRipple();\n      }\n\n      this._hostElement.classList.remove('mdc-slider__thumb--focused');\n    };\n\n    this._onDragStart = () => {\n      this._isActive = true;\n\n      this._showActiveRipple();\n    };\n\n    this._onDragEnd = () => {\n      this._isActive = false;\n\n      this._hideRipple(this._activeRippleRef); // Happens when the user starts dragging a thumb, tabs away, and then stops dragging.\n\n\n      if (!this._sliderInput._isFocused) {\n        this._hideRipple(this._focusRippleRef);\n      }\n    };\n\n    this._hostElement = _elementRef.nativeElement;\n  }\n\n  ngAfterViewInit() {\n    this._ripple.radius = 24;\n    this._sliderInput = this._slider._getInput(this.thumbPosition);\n    this._sliderInputEl = this._sliderInput._hostElement;\n    const input = this._sliderInputEl; // These listeners don't update any data bindings so we bind them outside\n    // of the NgZone to prevent Angular from needlessly running change detection.\n\n    this._ngZone.runOutsideAngular(() => {\n      input.addEventListener('pointermove', this._onPointerMove);\n      input.addEventListener('pointerdown', this._onDragStart);\n      input.addEventListener('pointerup', this._onDragEnd);\n      input.addEventListener('pointerleave', this._onMouseLeave);\n      input.addEventListener('focus', this._onFocus);\n      input.addEventListener('blur', this._onBlur);\n    });\n  }\n\n  ngOnDestroy() {\n    const input = this._sliderInputEl;\n    input.removeEventListener('pointermove', this._onPointerMove);\n    input.removeEventListener('pointerdown', this._onDragStart);\n    input.removeEventListener('pointerup', this._onDragEnd);\n    input.removeEventListener('pointerleave', this._onMouseLeave);\n    input.removeEventListener('focus', this._onFocus);\n    input.removeEventListener('blur', this._onBlur);\n  }\n  /** Handles displaying the hover ripple. */\n\n\n  _showHoverRipple() {\n    var _a;\n\n    if (!this._isShowingRipple(this._hoverRippleRef)) {\n      this._hoverRippleRef = this._showRipple({\n        enterDuration: 0,\n        exitDuration: 0\n      });\n      (_a = this._hoverRippleRef) === null || _a === void 0 ? void 0 : _a.element.classList.add('mat-mdc-slider-hover-ripple');\n    }\n  }\n  /** Handles displaying the focus ripple. */\n\n\n  _showFocusRipple() {\n    var _a; // Show the focus ripple event if noop animations are enabled.\n\n\n    if (!this._isShowingRipple(this._focusRippleRef)) {\n      this._focusRippleRef = this._showRipple({\n        enterDuration: 0,\n        exitDuration: 0\n      }, true);\n      (_a = this._focusRippleRef) === null || _a === void 0 ? void 0 : _a.element.classList.add('mat-mdc-slider-focus-ripple');\n    }\n  }\n  /** Handles displaying the active ripple. */\n\n\n  _showActiveRipple() {\n    var _a;\n\n    if (!this._isShowingRipple(this._activeRippleRef)) {\n      this._activeRippleRef = this._showRipple({\n        enterDuration: 225,\n        exitDuration: 400\n      });\n      (_a = this._activeRippleRef) === null || _a === void 0 ? void 0 : _a.element.classList.add('mat-mdc-slider-active-ripple');\n    }\n  }\n  /** Whether the given rippleRef is currently fading in or visible. */\n\n\n  _isShowingRipple(rippleRef) {\n    return (rippleRef === null || rippleRef === void 0 ? void 0 : rippleRef.state) === 0\n    /* RippleState.FADING_IN */\n    || (rippleRef === null || rippleRef === void 0 ? void 0 : rippleRef.state) === 1\n    /* RippleState.VISIBLE */\n    ;\n  }\n  /** Manually launches the slider thumb ripple using the specified ripple animation config. */\n\n\n  _showRipple(animation, ignoreGlobalRippleConfig) {\n    var _a;\n\n    if (this._slider.disabled) {\n      return;\n    }\n\n    this._showValueIndicator();\n\n    if (this._slider._isRange) {\n      const sibling = this._slider._getThumb(this.thumbPosition === 1\n      /* _MatThumb.START */\n      ? 2\n      /* _MatThumb.END */\n      : 1\n      /* _MatThumb.START */\n      );\n\n      sibling._showValueIndicator();\n    }\n\n    if (((_a = this._slider._globalRippleOptions) === null || _a === void 0 ? void 0 : _a.disabled) && !ignoreGlobalRippleConfig) {\n      return;\n    }\n\n    return this._ripple.launch({\n      animation: this._slider._noopAnimations ? {\n        enterDuration: 0,\n        exitDuration: 0\n      } : animation,\n      centered: true,\n      persistent: true\n    });\n  }\n  /**\n   * Fades out the given ripple.\n   * Also hides the value indicator if no ripple is showing.\n   */\n\n\n  _hideRipple(rippleRef) {\n    rippleRef === null || rippleRef === void 0 ? void 0 : rippleRef.fadeOut();\n\n    if (this._isShowingAnyRipple()) {\n      return;\n    }\n\n    if (!this._slider._isRange) {\n      this._hideValueIndicator();\n    }\n\n    const sibling = this._getSibling();\n\n    if (!sibling._isShowingAnyRipple()) {\n      this._hideValueIndicator();\n\n      sibling._hideValueIndicator();\n    }\n  }\n  /** Shows the value indicator ui. */\n\n\n  _showValueIndicator() {\n    this._hostElement.classList.add('mdc-slider__thumb--with-indicator');\n  }\n  /** Hides the value indicator ui. */\n\n\n  _hideValueIndicator() {\n    this._hostElement.classList.remove('mdc-slider__thumb--with-indicator');\n  }\n\n  _getSibling() {\n    return this._slider._getThumb(this.thumbPosition === 1\n    /* _MatThumb.START */\n    ? 2\n    /* _MatThumb.END */\n    : 1\n    /* _MatThumb.START */\n    );\n  }\n  /** Gets the value indicator container's native HTML element. */\n\n\n  _getValueIndicatorContainer() {\n    var _a;\n\n    return (_a = this._valueIndicatorContainer) === null || _a === void 0 ? void 0 : _a.nativeElement;\n  }\n  /** Gets the native HTML element of the slider thumb knob. */\n\n\n  _getKnob() {\n    return this._knob.nativeElement;\n  }\n\n  _isShowingAnyRipple() {\n    return this._isShowingRipple(this._hoverRippleRef) || this._isShowingRipple(this._focusRippleRef) || this._isShowingRipple(this._activeRippleRef);\n  }\n\n  _isSliderThumbHovered(event, rect) {\n    const radius = rect.width / 2;\n    const centerX = rect.x + radius;\n    const centerY = rect.y + radius;\n    const dx = event.clientX - centerX;\n    const dy = event.clientY - centerY;\n    return Math.pow(dx, 2) + Math.pow(dy, 2) < Math.pow(radius, 2);\n  }\n\n}\n\nMatSliderVisualThumb.ɵfac = function MatSliderVisualThumb_Factory(t) {\n  return new (t || MatSliderVisualThumb)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_SLIDER));\n};\n\nMatSliderVisualThumb.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatSliderVisualThumb,\n  selectors: [[\"mat-slider-visual-thumb\"]],\n  viewQuery: function MatSliderVisualThumb_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatRipple, 5);\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._ripple = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._knob = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._valueIndicatorContainer = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mdc-slider__thumb\", \"mat-mdc-slider-visual-thumb\"],\n  inputs: {\n    discrete: \"discrete\",\n    thumbPosition: \"thumbPosition\",\n    valueIndicatorText: \"valueIndicatorText\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_SLIDER_VISUAL_THUMB,\n    useExisting: MatSliderVisualThumb\n  }])],\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mdc-slider__value-indicator-container\", 4, \"ngIf\"], [1, \"mdc-slider__thumb-knob\"], [\"knob\", \"\"], [\"matRipple\", \"\", 1, \"mat-mdc-focus-indicator\", 3, \"matRippleDisabled\"], [1, \"mdc-slider__value-indicator-container\"], [\"valueIndicatorContainer\", \"\"], [1, \"mdc-slider__value-indicator\"], [1, \"mdc-slider__value-indicator-text\"]],\n  template: function MatSliderVisualThumb_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, MatSliderVisualThumb_div_0_Template, 5, 1, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1, 2)(3, \"div\", 3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.discrete);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"matRippleDisabled\", true);\n    }\n  },\n  dependencies: [i3.NgIf, i2.MatRipple],\n  styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderVisualThumb, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider-visual-thumb',\n      host: {\n        'class': 'mdc-slider__thumb mat-mdc-slider-visual-thumb'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_SLIDER_VISUAL_THUMB,\n        useExisting: MatSliderVisualThumb\n      }],\n      template: \"<div class=\\\"mdc-slider__value-indicator-container\\\" *ngIf=\\\"discrete\\\" #valueIndicatorContainer>\\n  <div class=\\\"mdc-slider__value-indicator\\\">\\n    <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n  </div>\\n</div>\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-mdc-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\",\n      styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_SLIDER]\n      }]\n    }];\n  }, {\n    discrete: [{\n      type: Input\n    }],\n    thumbPosition: [{\n      type: Input\n    }],\n    valueIndicatorText: [{\n      type: Input\n    }],\n    _ripple: [{\n      type: ViewChild,\n      args: [MatRipple]\n    }],\n    _knob: [{\n      type: ViewChild,\n      args: ['knob']\n    }],\n    _valueIndicatorContainer: [{\n      type: ViewChild,\n      args: ['valueIndicatorContainer']\n    }]\n  });\n})(); // TODO(wagnermaciel): maybe handle the following edge case:\n// 1. start dragging discrete slider\n// 2. tab to disable checkbox\n// 3. without ending drag, disable the slider\n// Boilerplate for applying mixins to MatSlider.\n\n\nconst _MatSliderMixinBase = mixinColor(mixinDisableRipple(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n\n}), 'primary');\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\n\n\nclass MatSlider extends _MatSliderMixinBase {\n  constructor(_ngZone, _cdr, _platform, elementRef, _dir, _globalRippleOptions, animationMode) {\n    super(elementRef);\n    this._ngZone = _ngZone;\n    this._cdr = _cdr;\n    this._platform = _platform;\n    this._dir = _dir;\n    this._globalRippleOptions = _globalRippleOptions;\n    this._disabled = false;\n    this._discrete = false;\n    this._showTickMarks = false;\n    this._min = 0;\n    this._max = 100;\n    this._step = 0;\n    /**\n     * Function that will be used to format the value before it is displayed\n     * in the thumb label. Can be used to format very large number in order\n     * for them to fit into the slider thumb.\n     */\n\n    this.displayWith = value => `${value}`;\n\n    this._rippleRadius = 24; // The value indicator tooltip text for the visual slider thumb(s).\n\n    /** @docs-private */\n\n    this.startValueIndicatorText = '';\n    /** @docs-private */\n\n    this.endValueIndicatorText = '';\n    this._isRange = false;\n    /** Whether the slider is rtl. */\n\n    this._isRtl = false;\n    this._hasViewInitialized = false;\n    /**\n     * The width of the tick mark track.\n     * The tick mark track width is different from full track width\n     */\n\n    this._tickMarkTrackWidth = 0;\n    this._hasAnimation = false;\n    this._resizeTimer = null;\n    /** The radius of the native slider's knob. AFAIK there is no way to avoid hardcoding this. */\n\n    this._knobRadius = 8;\n    /** Whether or not the slider thumbs overlap. */\n\n    this._thumbsOverlap = false;\n    this._noopAnimations = animationMode === 'NoopAnimations';\n    this._dirChangeSubscription = this._dir.change.subscribe(() => this._onDirChange());\n    this._isRtl = this._dir.value === 'rtl';\n  }\n  /** Whether the slider is disabled. */\n\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(v) {\n    this._disabled = coerceBooleanProperty(v);\n\n    const endInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    const startInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    if (endInput) {\n      endInput.disabled = this._disabled;\n    }\n\n    if (startInput) {\n      startInput.disabled = this._disabled;\n    }\n  }\n  /** Whether the slider displays a numeric value label upon pressing the thumb. */\n\n\n  get discrete() {\n    return this._discrete;\n  }\n\n  set discrete(v) {\n    this._discrete = coerceBooleanProperty(v);\n\n    this._updateValueIndicatorUIs();\n  }\n  /** Whether the slider displays tick marks along the slider track. */\n\n\n  get showTickMarks() {\n    return this._showTickMarks;\n  }\n\n  set showTickMarks(v) {\n    this._showTickMarks = coerceBooleanProperty(v);\n  }\n  /** The minimum value that the slider can have. */\n\n\n  get min() {\n    return this._min;\n  }\n\n  set min(v) {\n    const min = coerceNumberProperty(v, this._min);\n\n    if (this._min !== min) {\n      this._updateMin(min);\n    }\n  }\n\n  _updateMin(min) {\n    const prevMin = this._min;\n    this._min = min;\n    this._isRange ? this._updateMinRange({\n      old: prevMin,\n      new: min\n    }) : this._updateMinNonRange(min);\n\n    this._onMinMaxOrStepChange();\n  }\n\n  _updateMinRange(min) {\n    const endInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    const startInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    startInput.min = min.new;\n    endInput.min = Math.max(min.new, startInput.value);\n    startInput.max = Math.min(endInput.max, endInput.value);\n\n    startInput._updateWidthInactive();\n\n    endInput._updateWidthInactive();\n\n    min.new < min.old ? this._onTranslateXChangeBySideEffect(endInput, startInput) : this._onTranslateXChangeBySideEffect(startInput, endInput);\n\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n\n  _updateMinNonRange(min) {\n    const input = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    if (input) {\n      const oldValue = input.value;\n      input.min = min;\n\n      input._updateThumbUIByValue();\n\n      this._updateTrackUI(input);\n\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  /** The maximum value that the slider can have. */\n\n\n  get max() {\n    return this._max;\n  }\n\n  set max(v) {\n    const max = coerceNumberProperty(v, this._max);\n\n    if (this._max !== max) {\n      this._updateMax(max);\n    }\n  }\n\n  _updateMax(max) {\n    const prevMax = this._max;\n    this._max = max;\n    this._isRange ? this._updateMaxRange({\n      old: prevMax,\n      new: max\n    }) : this._updateMaxNonRange(max);\n\n    this._onMinMaxOrStepChange();\n  }\n\n  _updateMaxRange(max) {\n    const endInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    const startInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    endInput.max = max.new;\n    startInput.max = Math.min(max.new, endInput.value);\n    endInput.min = startInput.value;\n\n    endInput._updateWidthInactive();\n\n    startInput._updateWidthInactive();\n\n    max.new > max.old ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n\n  _updateMaxNonRange(max) {\n    const input = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    if (input) {\n      const oldValue = input.value;\n      input.max = max;\n\n      input._updateThumbUIByValue();\n\n      this._updateTrackUI(input);\n\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  /** The values at which the thumb will snap. */\n\n\n  get step() {\n    return this._step;\n  }\n\n  set step(v) {\n    const step = coerceNumberProperty(v, this._step);\n\n    if (this._step !== step) {\n      this._updateStep(step);\n    }\n  }\n\n  _updateStep(step) {\n    this._step = step;\n    this._isRange ? this._updateStepRange() : this._updateStepNonRange();\n\n    this._onMinMaxOrStepChange();\n  }\n\n  _updateStepRange() {\n    const endInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    const startInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    const prevStartValue = startInput.value;\n    endInput.min = this._min;\n    startInput.max = this._max;\n    endInput.step = this._step;\n    startInput.step = this._step;\n\n    if (this._platform.SAFARI) {\n      endInput.value = endInput.value;\n      startInput.value = startInput.value;\n    }\n\n    endInput.min = Math.max(this._min, startInput.value);\n    startInput.max = Math.min(this._max, endInput.value);\n\n    startInput._updateWidthInactive();\n\n    endInput._updateWidthInactive();\n\n    endInput.value < prevStartValue ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n\n  _updateStepNonRange() {\n    const input = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    if (input) {\n      const oldValue = input.value;\n      input.step = this._step;\n\n      if (this._platform.SAFARI) {\n        input.value = input.value;\n      }\n\n      input._updateThumbUIByValue();\n\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._updateDimensions();\n    }\n\n    const eInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    const sInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    this._isRange = !!eInput && !!sInput;\n\n    this._cdr.detectChanges();\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      _validateInputs(this._isRange, this._getInput(2\n      /* _MatThumb.END */\n      ), this._getInput(1\n      /* _MatThumb.START */\n      ));\n    }\n\n    const thumb = this._getThumb(2\n    /* _MatThumb.END */\n    );\n\n    this._rippleRadius = thumb._ripple.radius;\n    this._inputPadding = this._rippleRadius - this._knobRadius;\n    this._inputOffset = this._knobRadius;\n    this._isRange ? this._initUIRange(eInput, sInput) : this._initUINonRange(eInput);\n\n    this._updateTrackUI(eInput);\n\n    this._updateTickMarkUI();\n\n    this._updateTickMarkTrackUI();\n\n    this._observeHostResize();\n\n    this._cdr.detectChanges();\n  }\n\n  _initUINonRange(eInput) {\n    eInput.initProps();\n    eInput.initUI();\n\n    this._updateValueIndicatorUI(eInput);\n\n    this._hasViewInitialized = true;\n\n    eInput._updateThumbUIByValue();\n  }\n\n  _initUIRange(eInput, sInput) {\n    eInput.initProps();\n    eInput.initUI();\n    sInput.initProps();\n    sInput.initUI();\n\n    eInput._updateMinMax();\n\n    sInput._updateMinMax();\n\n    eInput._updateStaticStyles();\n\n    sInput._updateStaticStyles();\n\n    this._updateValueIndicatorUIs();\n\n    this._hasViewInitialized = true;\n\n    eInput._updateThumbUIByValue();\n\n    sInput._updateThumbUIByValue();\n  }\n\n  ngOnDestroy() {\n    var _a;\n\n    this._dirChangeSubscription.unsubscribe();\n\n    (_a = this._resizeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n    this._resizeObserver = null;\n  }\n  /** Handles updating the slider ui after a dir change. */\n\n\n  _onDirChange() {\n    this._isRtl = this._dir.value === 'rtl';\n    this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange();\n\n    this._updateTickMarkUI();\n  }\n\n  _onDirChangeRange() {\n    const endInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    const startInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    endInput._setIsLeftThumb();\n\n    startInput._setIsLeftThumb();\n\n    endInput.translateX = endInput._calcTranslateXByValue();\n    startInput.translateX = startInput._calcTranslateXByValue();\n\n    endInput._updateStaticStyles();\n\n    startInput._updateStaticStyles();\n\n    endInput._updateWidthInactive();\n\n    startInput._updateWidthInactive();\n\n    endInput._updateThumbUIByValue();\n\n    startInput._updateThumbUIByValue();\n  }\n\n  _onDirChangeNonRange() {\n    const input = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    input._updateThumbUIByValue();\n  }\n  /** Starts observing and updating the slider if the host changes its size. */\n\n\n  _observeHostResize() {\n    if (typeof ResizeObserver === 'undefined' || !ResizeObserver) {\n      return;\n    }\n\n    this._ngZone.runOutsideAngular(() => {\n      this._resizeObserver = new ResizeObserver(() => {\n        if (this._isActive()) {\n          return;\n        }\n\n        if (this._resizeTimer) {\n          clearTimeout(this._resizeTimer);\n        }\n\n        this._onResize();\n      });\n\n      this._resizeObserver.observe(this._elementRef.nativeElement);\n    });\n  }\n  /** Whether any of the thumbs are currently active. */\n\n\n  _isActive() {\n    return this._getThumb(1\n    /* _MatThumb.START */\n    )._isActive || this._getThumb(2\n    /* _MatThumb.END */\n    )._isActive;\n  }\n\n  _getValue(thumbPosition = 2\n  /* _MatThumb.END */\n  ) {\n    const input = this._getInput(thumbPosition);\n\n    if (!input) {\n      return this.min;\n    }\n\n    return input.value;\n  }\n\n  _skipUpdate() {\n    var _a, _b;\n\n    return !!(((_a = this._getInput(1\n    /* _MatThumb.START */\n    )) === null || _a === void 0 ? void 0 : _a._skipUIUpdate) || ((_b = this._getInput(2\n    /* _MatThumb.END */\n    )) === null || _b === void 0 ? void 0 : _b._skipUIUpdate));\n  }\n  /** Stores the slider dimensions. */\n\n\n  _updateDimensions() {\n    this._cachedWidth = this._elementRef.nativeElement.offsetWidth;\n    this._cachedLeft = this._elementRef.nativeElement.getBoundingClientRect().left;\n  }\n  /** Sets the styles for the active portion of the track. */\n\n\n  _setTrackActiveStyles(styles) {\n    const trackStyle = this._trackActive.nativeElement.style;\n    const animationOriginChanged = styles.left !== trackStyle.left && styles.right !== trackStyle.right;\n    trackStyle.left = styles.left;\n    trackStyle.right = styles.right;\n    trackStyle.transformOrigin = styles.transformOrigin;\n\n    if (animationOriginChanged) {\n      this._elementRef.nativeElement.classList.add('mat-mdc-slider-disable-track-animation');\n\n      this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n        this._elementRef.nativeElement.classList.remove('mat-mdc-slider-disable-track-animation');\n\n        trackStyle.transform = styles.transform;\n      });\n    } else {\n      trackStyle.transform = styles.transform;\n    }\n  }\n  /** Returns the translateX positioning for a tick mark based on it's index. */\n\n\n  _calcTickMarkTransform(index) {\n    // TODO(wagnermaciel): See if we can avoid doing this and just using flex to position these.\n    const translateX = index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1));\n    return `translateX(${translateX}px`;\n  } // Handlers for updating the slider ui.\n\n\n  _onTranslateXChange(source) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n\n    this._updateThumbUI(source);\n\n    this._updateTrackUI(source);\n\n    this._updateOverlappingThumbUI(source);\n  }\n\n  _onTranslateXChangeBySideEffect(input1, input2) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n\n    input1._updateThumbUIByValue();\n\n    input2._updateThumbUIByValue();\n  }\n\n  _onValueChange(source) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n\n    this._updateValueIndicatorUI(source);\n\n    this._updateTickMarkUI();\n\n    this._cdr.detectChanges();\n  }\n\n  _onMinMaxOrStepChange() {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n\n    this._updateTickMarkUI();\n\n    this._updateTickMarkTrackUI();\n\n    this._cdr.markForCheck();\n  }\n\n  _onResize() {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n\n    this._updateDimensions();\n\n    if (this._isRange) {\n      const eInput = this._getInput(2\n      /* _MatThumb.END */\n      );\n\n      const sInput = this._getInput(1\n      /* _MatThumb.START */\n      );\n\n      eInput._updateThumbUIByValue();\n\n      sInput._updateThumbUIByValue();\n\n      eInput._updateStaticStyles();\n\n      sInput._updateStaticStyles();\n\n      eInput._updateMinMax();\n\n      sInput._updateMinMax();\n\n      eInput._updateWidthInactive();\n\n      sInput._updateWidthInactive();\n    } else {\n      const eInput = this._getInput(2\n      /* _MatThumb.END */\n      );\n\n      if (eInput) {\n        eInput._updateThumbUIByValue();\n      }\n    }\n\n    this._updateTickMarkUI();\n\n    this._updateTickMarkTrackUI();\n\n    this._cdr.detectChanges();\n  }\n  /** Returns true if the slider knobs are overlapping one another. */\n\n\n  _areThumbsOverlapping() {\n    const startInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    const endInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    if (!startInput || !endInput) {\n      return false;\n    }\n\n    return endInput.translateX - startInput.translateX < 20;\n  }\n  /**\n   * Updates the class names of overlapping slider thumbs so\n   * that the current active thumb is styled to be on \"top\".\n   */\n\n\n  _updateOverlappingThumbClassNames(source) {\n    const sibling = source.getSibling();\n\n    const sourceThumb = this._getThumb(source.thumbPosition);\n\n    const siblingThumb = this._getThumb(sibling.thumbPosition);\n\n    siblingThumb._hostElement.classList.remove('mdc-slider__thumb--top');\n\n    sourceThumb._hostElement.classList.toggle('mdc-slider__thumb--top', this._thumbsOverlap);\n  }\n  /** Updates the UI of slider thumbs when they begin or stop overlapping. */\n\n\n  _updateOverlappingThumbUI(source) {\n    if (!this._isRange || this._skipUpdate()) {\n      return;\n    }\n\n    if (this._thumbsOverlap !== this._areThumbsOverlapping()) {\n      this._thumbsOverlap = !this._thumbsOverlap;\n\n      this._updateOverlappingThumbClassNames(source);\n    }\n  } // _MatThumb styles update conditions\n  //\n  // 1. TranslateX, resize, or dir change\n  //    - Reason: The thumb styles need to be updated according to the new translateX.\n  // 2. Min, max, or step\n  //    - Reason: The value may have silently changed.\n\n  /** Updates the translateX of the given thumb. */\n\n\n  _updateThumbUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n\n    const thumb = this._getThumb(source.thumbPosition === 2\n    /* _MatThumb.END */\n    ? 2\n    /* _MatThumb.END */\n    : 1\n    /* _MatThumb.START */\n    );\n\n    thumb._hostElement.style.transform = `translateX(${source.translateX}px)`;\n  } // Value indicator text update conditions\n  //\n  // 1. Value\n  //    - Reason: The value displayed needs to be updated.\n  // 2. Min, max, or step\n  //    - Reason: The value may have silently changed.\n\n  /** Updates the value indicator tooltip ui for the given thumb. */\n\n\n  _updateValueIndicatorUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n\n    const valuetext = this.displayWith(source.value);\n    this._hasViewInitialized ? source._valuetext = valuetext : source._hostElement.setAttribute('aria-valuetext', valuetext);\n\n    if (this.discrete) {\n      source.thumbPosition === 1\n      /* _MatThumb.START */\n      ? this.startValueIndicatorText = valuetext : this.endValueIndicatorText = valuetext;\n\n      const visualThumb = this._getThumb(source.thumbPosition);\n\n      valuetext.length < 3 ? visualThumb._hostElement.classList.add('mdc-slider__thumb--short-value') : visualThumb._hostElement.classList.remove('mdc-slider__thumb--short-value');\n    }\n  }\n  /** Updates all value indicator UIs in the slider. */\n\n\n  _updateValueIndicatorUIs() {\n    const eInput = this._getInput(2\n    /* _MatThumb.END */\n    );\n\n    const sInput = this._getInput(1\n    /* _MatThumb.START */\n    );\n\n    if (eInput) {\n      this._updateValueIndicatorUI(eInput);\n    }\n\n    if (sInput) {\n      this._updateValueIndicatorUI(sInput);\n    }\n  } // Update Tick Mark Track Width\n  //\n  // 1. Min, max, or step\n  //    - Reason: The maximum reachable value may have changed.\n  //    - Side note: The maximum reachable value is different from the maximum value set by the\n  //      user. For example, a slider with [min: 5, max: 100, step: 10] would have a maximum\n  //      reachable value of 95.\n  // 2. Resize\n  //    - Reason: The position for the maximum reachable value needs to be recalculated.\n\n  /** Updates the width of the tick mark track. */\n\n\n  _updateTickMarkTrackUI() {\n    if (this._skipUpdate()) {\n      return;\n    }\n\n    const step = this._step && this._step > 0 ? this._step : 1;\n    const maxValue = Math.floor(this.max / step) * step;\n    const percentage = (maxValue - this.min) / (this.max - this.min);\n    this._tickMarkTrackWidth = this._cachedWidth * percentage - 6;\n  } // Track active update conditions\n  //\n  // 1. TranslateX\n  //    - Reason: The track active should line up with the new thumb position.\n  // 2. Min or max\n  //    - Reason #1: The 'active' percentage needs to be recalculated.\n  //    - Reason #2: The value may have silently changed.\n  // 3. Step\n  //    - Reason: The value may have silently changed causing the thumb(s) to shift.\n  // 4. Dir change\n  //    - Reason: The track active will need to be updated according to the new thumb position(s).\n  // 5. Resize\n  //    - Reason: The total width the 'active' tracks translateX is based on has changed.\n\n  /** Updates the scale on the active portion of the track. */\n\n\n  _updateTrackUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n\n    this._isRange ? this._updateTrackUIRange(source) : this._updateTrackUINonRange(source);\n  }\n\n  _updateTrackUIRange(source) {\n    const sibling = source.getSibling();\n\n    if (!sibling || !this._cachedWidth) {\n      return;\n    }\n\n    const activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;\n\n    if (source._isLeftThumb && this._cachedWidth) {\n      this._setTrackActiveStyles({\n        left: 'auto',\n        right: `${this._cachedWidth - sibling.translateX}px`,\n        transformOrigin: 'right',\n        transform: `scaleX(${activePercentage})`\n      });\n    } else {\n      this._setTrackActiveStyles({\n        left: `${sibling.translateX}px`,\n        right: 'auto',\n        transformOrigin: 'left',\n        transform: `scaleX(${activePercentage})`\n      });\n    }\n  }\n\n  _updateTrackUINonRange(source) {\n    this._isRtl ? this._setTrackActiveStyles({\n      left: 'auto',\n      right: '0px',\n      transformOrigin: 'right',\n      transform: `scaleX(${1 - source.fillPercentage})`\n    }) : this._setTrackActiveStyles({\n      left: '0px',\n      right: 'auto',\n      transformOrigin: 'left',\n      transform: `scaleX(${source.fillPercentage})`\n    });\n  } // Tick mark update conditions\n  //\n  // 1. Value\n  //    - Reason: a tick mark which was once active might now be inactive or vice versa.\n  // 2. Min, max, or step\n  //    - Reason #1: the number of tick marks may have changed.\n  //    - Reason #2: The value may have silently changed.\n\n  /** Updates the dots along the slider track. */\n\n\n  _updateTickMarkUI() {\n    if (this.step === undefined || this.min === undefined || this.max === undefined) {\n      return;\n    }\n\n    const step = this.step > 0 ? this.step : 1;\n    this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step);\n\n    if (this._isRtl) {\n      this._tickMarks.reverse();\n    }\n  }\n\n  _updateTickMarkUINonRange(step) {\n    const value = this._getValue();\n\n    let numActive = Math.max(Math.round((value - this.min) / step), 0);\n    let numInactive = Math.max(Math.round((this.max - value) / step), 0);\n    this._isRtl ? numActive++ : numInactive++;\n    this._tickMarks = Array(numActive).fill(0\n    /* _MatTickMark.ACTIVE */\n    ).concat(Array(numInactive).fill(1\n    /* _MatTickMark.INACTIVE */\n    ));\n  }\n\n  _updateTickMarkUIRange(step) {\n    const endValue = this._getValue();\n\n    const startValue = this._getValue(1\n    /* _MatThumb.START */\n    );\n\n    const numInactiveBeforeStartThumb = Math.max(Math.floor((startValue - this.min) / step), 0);\n    const numActive = Math.max(Math.floor((endValue - startValue) / step) + 1, 0);\n    const numInactiveAfterEndThumb = Math.max(Math.floor((this.max - endValue) / step), 0);\n    this._tickMarks = Array(numInactiveBeforeStartThumb).fill(1\n    /* _MatTickMark.INACTIVE */\n    ).concat(Array(numActive).fill(0\n    /* _MatTickMark.ACTIVE */\n    ), Array(numInactiveAfterEndThumb).fill(1\n    /* _MatTickMark.INACTIVE */\n    ));\n  }\n  /** Gets the slider thumb input of the given thumb position. */\n\n\n  _getInput(thumbPosition) {\n    var _a;\n\n    if (thumbPosition === 2\n    /* _MatThumb.END */\n    && this._input) {\n      return this._input;\n    }\n\n    if ((_a = this._inputs) === null || _a === void 0 ? void 0 : _a.length) {\n      return thumbPosition === 1\n      /* _MatThumb.START */\n      ? this._inputs.first : this._inputs.last;\n    }\n\n    return;\n  }\n  /** Gets the slider thumb HTML input element of the given thumb position. */\n\n\n  _getThumb(thumbPosition) {\n    var _a, _b;\n\n    return thumbPosition === 2\n    /* _MatThumb.END */\n    ? (_a = this._thumbs) === null || _a === void 0 ? void 0 : _a.last : (_b = this._thumbs) === null || _b === void 0 ? void 0 : _b.first;\n  }\n\n  _setTransition(withAnimation) {\n    this._hasAnimation = withAnimation && !this._noopAnimations;\n\n    this._elementRef.nativeElement.classList.toggle('mat-mdc-slider-with-animation', this._hasAnimation);\n  }\n\n}\n\nMatSlider.ɵfac = function MatSlider_Factory(t) {\n  return new (t || MatSlider)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2$1.Directionality, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatSlider.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatSlider,\n  selectors: [[\"mat-slider\"]],\n  contentQueries: function MatSlider_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_THUMB, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_RANGE_THUMB, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._input = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputs = _t);\n    }\n  },\n  viewQuery: function MatSlider_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(MAT_SLIDER_VISUAL_THUMB, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._trackActive = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._thumbs = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-mdc-slider\", \"mdc-slider\"],\n  hostVars: 10,\n  hostBindings: function MatSlider_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mdc-slider--range\", ctx._isRange)(\"mdc-slider--disabled\", ctx.disabled)(\"mdc-slider--discrete\", ctx.discrete)(\"mdc-slider--tick-marks\", ctx.showTickMarks)(\"_mat-animation-noopable\", ctx._noopAnimations);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disableRipple: \"disableRipple\",\n    disabled: \"disabled\",\n    discrete: \"discrete\",\n    showTickMarks: \"showTickMarks\",\n    min: \"min\",\n    max: \"max\",\n    step: \"step\",\n    displayWith: \"displayWith\"\n  },\n  exportAs: [\"matSlider\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_SLIDER,\n    useExisting: MatSlider\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c3,\n  decls: 9,\n  vars: 5,\n  consts: [[1, \"mdc-slider__track\"], [1, \"mdc-slider__track--inactive\"], [1, \"mdc-slider__track--active\"], [1, \"mdc-slider__track--active_fill\"], [\"trackActive\", \"\"], [\"class\", \"mdc-slider__tick-marks\", 4, \"ngIf\"], [3, \"discrete\", \"thumbPosition\", \"valueIndicatorText\", 4, \"ngIf\"], [3, \"discrete\", \"thumbPosition\", \"valueIndicatorText\"], [1, \"mdc-slider__tick-marks\"], [\"tickMarkContainer\", \"\"], [4, \"ngIf\"], [3, \"class\", \"transform\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function MatSlider_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵelement(2, \"div\", 1);\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"div\", 3, 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, MatSlider_div_6_Template, 3, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, MatSlider_mat_slider_visual_thumb_7_Template, 1, 3, \"mat-slider-visual-thumb\", 6);\n      i0.ɵɵelement(8, \"mat-slider-visual-thumb\", 7);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.showTickMarks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx._isRange);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"discrete\", ctx.discrete)(\"thumbPosition\", 2)(\"valueIndicatorText\", ctx.endValueIndicatorText);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, MatSliderVisualThumb],\n  styles: [\".mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden;top:-1px}.mdc-slider .mdc-slider__track--active_fill{border-top:6px solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:0;margin:0;height:100%;opacity:0;pointer-events:none;position:absolute;top:0;width:100%}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-font-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSlider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider',\n      host: {\n        'class': 'mat-mdc-slider mdc-slider',\n        '[class.mdc-slider--range]': '_isRange',\n        '[class.mdc-slider--disabled]': 'disabled',\n        '[class.mdc-slider--discrete]': 'discrete',\n        '[class.mdc-slider--tick-marks]': 'showTickMarks',\n        '[class._mat-animation-noopable]': '_noopAnimations'\n      },\n      exportAs: 'matSlider',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      inputs: ['color', 'disableRipple'],\n      providers: [{\n        provide: MAT_SLIDER,\n        useExisting: MatSlider\n      }],\n      template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"showTickMarks\\\" class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n    <ng-container *ngIf=\\\"_cachedWidth\\\">\\n        <div\\n          *ngFor=\\\"let tickMark of _tickMarks; let i = index\\\"\\n          [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n          [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n    </ng-container>\\n  </div>\\n</div>\\n\\n<!-- Thumbs -->\\n<mat-slider-visual-thumb\\n  *ngIf=\\\"_isRange\\\"\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"1\\\"\\n  [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\",\n      styles: [\".mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden;top:-1px}.mdc-slider .mdc-slider__track--active_fill{border-top:6px solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:0;margin:0;height:100%;opacity:0;pointer-events:none;position:absolute;top:0;width:100%}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-font-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.Platform\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i2$1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _trackActive: [{\n      type: ViewChild,\n      args: ['trackActive']\n    }],\n    _thumbs: [{\n      type: ViewChildren,\n      args: [MAT_SLIDER_VISUAL_THUMB]\n    }],\n    _input: [{\n      type: ContentChild,\n      args: [MAT_SLIDER_THUMB]\n    }],\n    _inputs: [{\n      type: ContentChildren,\n      args: [MAT_SLIDER_RANGE_THUMB, {\n        descendants: false\n      }]\n    }],\n    disabled: [{\n      type: Input\n    }],\n    discrete: [{\n      type: Input\n    }],\n    showTickMarks: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    displayWith: [{\n      type: Input\n    }]\n  });\n})();\n/** Ensures that there is not an invalid configuration for the slider thumb inputs. */\n\n\nfunction _validateInputs(isRange, endInputElement, startInputElement) {\n  const startValid = !isRange || (startInputElement === null || startInputElement === void 0 ? void 0 : startInputElement._hostElement.hasAttribute('matSliderStartThumb'));\n\n  const endValid = endInputElement._hostElement.hasAttribute(isRange ? 'matSliderEndThumb' : 'matSliderThumb');\n\n  if (!startValid || !endValid) {\n    _throwInvalidInputConfigurationError();\n  }\n}\n\nfunction _throwInvalidInputConfigurationError() {\n  throw Error(`Invalid slider thumb input configuration!\n\n   Valid configurations are as follows:\n\n     <mat-slider>\n       <input matSliderThumb>\n     </mat-slider>\n\n     or\n\n     <mat-slider>\n       <input matSliderStartThumb>\n       <input matSliderEndThumb>\n     </mat-slider>\n   `);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Provider that allows the slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\n\n\nconst MAT_SLIDER_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSliderThumb),\n  multi: true\n};\n/**\n * Provider that allows the range slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\n\nconst MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSliderRangeThumb),\n  multi: true\n};\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<mat-slider>`.\n * Up to two may be placed inside of a `<mat-slider>`.\n *\n * If one is used, the selector `matSliderThumb` must be used, and the outcome will be a normal\n * slider. If two are used, the selectors `matSliderStartThumb` and `matSliderEndThumb` must be\n * used, and the outcome will be a range slider with two slider thumbs.\n */\n\nclass MatSliderThumb {\n  constructor(_ngZone, _elementRef, _cdr, _slider) {\n    this._ngZone = _ngZone;\n    this._elementRef = _elementRef;\n    this._cdr = _cdr;\n    this._slider = _slider;\n    /** Event emitted when the `value` is changed. */\n\n    this.valueChange = new EventEmitter();\n    /** Event emitted when the slider thumb starts being dragged. */\n\n    this.dragStart = new EventEmitter();\n    /** Event emitted when the slider thumb stops being dragged. */\n\n    this.dragEnd = new EventEmitter();\n    /**\n     * Indicates whether this thumb is the start or end thumb.\n     * @docs-private\n     */\n\n    this.thumbPosition = 2\n    /* _MatThumb.END */\n    ;\n    /** The radius of a native html slider's knob. */\n\n    this._knobRadius = 8;\n    /** Whether user's cursor is currently in a mouse down state on the input. */\n\n    this._isActive = false;\n    /** Whether the input is currently focused (either by tab or after clicking). */\n\n    this._isFocused = false;\n    /**\n     * Whether the initial value has been set.\n     * This exists because the initial value cannot be immediately set because the min and max\n     * must first be relayed from the parent MatSlider component, which can only happen later\n     * in the component lifecycle.\n     */\n\n    this._hasSetInitialValue = false;\n    /** Emits when the component is destroyed. */\n\n    this._destroyed = new Subject();\n    /**\n     * Indicates whether UI updates should be skipped.\n     *\n     * This flag is used to avoid flickering\n     * when correcting values on pointer up/down.\n     */\n\n    this._skipUIUpdate = false;\n    /** Callback called when the slider input value changes. */\n\n    this._onChangeFn = () => {};\n    /** Callback called when the slider input has been touched. */\n\n\n    this._onTouchedFn = () => {};\n\n    this._hostElement = _elementRef.nativeElement;\n\n    this._ngZone.runOutsideAngular(() => {\n      this._hostElement.addEventListener('pointerdown', this._onPointerDown.bind(this));\n\n      this._hostElement.addEventListener('pointermove', this._onPointerMove.bind(this));\n\n      this._hostElement.addEventListener('pointerup', this._onPointerUp.bind(this));\n    });\n  }\n\n  get value() {\n    return coerceNumberProperty(this._hostElement.value);\n  }\n\n  set value(v) {\n    const val = coerceNumberProperty(v).toString();\n\n    if (!this._hasSetInitialValue) {\n      this._initialValue = val;\n      return;\n    }\n\n    if (this._isActive) {\n      return;\n    }\n\n    this._hostElement.value = val;\n\n    this._updateThumbUIByValue();\n\n    this._slider._onValueChange(this);\n\n    this._cdr.detectChanges();\n  }\n  /**\n   * The current translateX in px of the slider visual thumb.\n   * @docs-private\n   */\n\n\n  get translateX() {\n    if (this._slider.min >= this._slider.max) {\n      this._translateX = 0;\n      return this._translateX;\n    }\n\n    if (this._translateX === undefined) {\n      this._translateX = this._calcTranslateXByValue();\n    }\n\n    return this._translateX;\n  }\n\n  set translateX(v) {\n    this._translateX = v;\n  }\n  /** @docs-private */\n\n\n  get min() {\n    return coerceNumberProperty(this._hostElement.min);\n  }\n\n  set min(v) {\n    this._hostElement.min = coerceNumberProperty(v).toString();\n\n    this._cdr.detectChanges();\n  }\n  /** @docs-private */\n\n\n  get max() {\n    return coerceNumberProperty(this._hostElement.max);\n  }\n\n  set max(v) {\n    this._hostElement.max = coerceNumberProperty(v).toString();\n\n    this._cdr.detectChanges();\n  }\n\n  get step() {\n    return coerceNumberProperty(this._hostElement.step);\n  }\n\n  set step(v) {\n    this._hostElement.step = coerceNumberProperty(v).toString();\n\n    this._cdr.detectChanges();\n  }\n  /** @docs-private */\n\n\n  get disabled() {\n    return coerceBooleanProperty(this._hostElement.disabled);\n  }\n\n  set disabled(v) {\n    this._hostElement.disabled = coerceBooleanProperty(v);\n\n    this._cdr.detectChanges();\n\n    if (this._slider.disabled !== this.disabled) {\n      this._slider.disabled = this.disabled;\n    }\n  }\n  /** The percentage of the slider that coincides with the value. */\n\n\n  get percentage() {\n    if (this._slider.min >= this._slider.max) {\n      return this._slider._isRtl ? 1 : 0;\n    }\n\n    return (this.value - this._slider.min) / (this._slider.max - this._slider.min);\n  }\n  /** @docs-private */\n\n\n  get fillPercentage() {\n    if (!this._slider._cachedWidth) {\n      return this._slider._isRtl ? 1 : 0;\n    }\n\n    if (this._translateX === 0) {\n      return 0;\n    }\n\n    return this.translateX / this._slider._cachedWidth;\n  }\n  /** Used to relay updates to _isFocused to the slider visual thumbs. */\n\n\n  _setIsFocused(v) {\n    this._isFocused = v;\n  }\n\n  ngOnDestroy() {\n    this._hostElement.removeEventListener('pointerdown', this._onPointerDown);\n\n    this._hostElement.removeEventListener('pointermove', this._onPointerMove);\n\n    this._hostElement.removeEventListener('pointerup', this._onPointerUp);\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    this.dragStart.complete();\n    this.dragEnd.complete();\n  }\n  /** @docs-private */\n\n\n  initProps() {\n    this._updateWidthInactive(); // If this or the parent slider is disabled, just make everything disabled.\n\n\n    if (this.disabled !== this._slider.disabled) {\n      // The MatSlider setter for disabled will relay this and disable both inputs.\n      this._slider.disabled = true;\n    }\n\n    this.step = this._slider.step;\n    this.min = this._slider.min;\n    this.max = this._slider.max;\n\n    this._initValue();\n  }\n  /** @docs-private */\n\n\n  initUI() {\n    this._updateThumbUIByValue();\n  }\n\n  _initValue() {\n    this._hasSetInitialValue = true;\n\n    if (this._initialValue === undefined) {\n      this.value = this._getDefaultValue();\n    } else {\n      this._hostElement.value = this._initialValue;\n\n      this._updateThumbUIByValue();\n\n      this._slider._onValueChange(this);\n\n      this._cdr.detectChanges();\n    }\n  }\n\n  _getDefaultValue() {\n    return this.min;\n  }\n\n  _onBlur() {\n    this._setIsFocused(false);\n\n    this._onTouchedFn();\n  }\n\n  _onFocus() {\n    this._setIsFocused(true);\n  }\n\n  _onChange() {\n    // only used to handle the edge case where user\n    // mousedown on the slider then uses arrow keys.\n    if (this._isActive) {\n      this._updateThumbUIByValue({\n        withAnimation: true\n      });\n    }\n  }\n\n  _onInput() {\n    this.valueChange.emit(this.value);\n\n    this._onChangeFn(this.value); // handles arrowing and updating the value when\n    // a step is defined.\n\n\n    if (this._slider.step || !this._isActive) {\n      this._updateThumbUIByValue({\n        withAnimation: true\n      });\n    }\n\n    this._slider._onValueChange(this);\n  }\n\n  _onNgControlValueChange() {\n    // only used to handle when the value change\n    // originates outside of the slider.\n    if (!this._isActive || !this._isFocused) {\n      this._slider._onValueChange(this);\n\n      this._updateThumbUIByValue();\n    }\n\n    this._slider.disabled = this._formControl.disabled;\n  }\n\n  _onPointerDown(event) {\n    if (this.disabled || event.button !== 0) {\n      return;\n    }\n\n    this._isActive = true;\n\n    this._setIsFocused(true);\n\n    this._updateWidthActive();\n\n    this._slider._updateDimensions(); // Does nothing if a step is defined because we\n    // want the value to snap to the values on input.\n\n\n    if (!this._slider.step) {\n      this._updateThumbUIByPointerEvent(event, {\n        withAnimation: true\n      });\n    }\n\n    if (!this.disabled) {\n      this._handleValueCorrection(event);\n    }\n  }\n  /**\n   * Corrects the value of the slider on pointer up/down.\n   *\n   * Called on pointer down and up because the value is set based\n   * on the inactive width instead of the active width.\n   */\n\n\n  _handleValueCorrection(event) {\n    // Don't update the UI with the current value! The value on pointerdown\n    // and pointerup is calculated in the split second before the input(s)\n    // resize. See _updateWidthInactive() and _updateWidthActive() for more\n    // details.\n    this._skipUIUpdate = true; // Note that this function gets triggered before the actual value of the\n    // slider is updated. This means if we were to set the value here, it\n    // would immediately be overwritten. Using setTimeout ensures the setting\n    // of the value happens after the value has been updated by the\n    // pointerdown event.\n\n    setTimeout(() => {\n      this._skipUIUpdate = false;\n\n      this._fixValue(event);\n    }, 0);\n  }\n  /** Corrects the value of the slider based on the pointer event's position. */\n\n\n  _fixValue(event) {\n    const xPos = event.clientX - this._slider._cachedLeft;\n    const width = this._slider._cachedWidth;\n    const step = this._slider.step === 0 ? 1 : this._slider.step;\n    const numSteps = Math.floor((this._slider.max - this._slider.min) / step);\n    const percentage = this._slider._isRtl ? 1 - xPos / width : xPos / width; // To ensure the percentage is rounded to the necessary number of decimals.\n\n    const fixedPercentage = Math.round(percentage * numSteps) / numSteps;\n    const impreciseValue = fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min;\n    const value = Math.round(impreciseValue / step) * step;\n    const prevValue = this.value;\n    const dragEvent = {\n      source: this,\n      parent: this._slider,\n      value: value\n    };\n    this._isActive ? this.dragStart.emit(dragEvent) : this.dragEnd.emit(dragEvent);\n\n    if (value === prevValue) {\n      // Because we prevented UI updates, if it turns out that the race\n      // condition didn't happen and the value is already correct, we\n      // have to apply the ui updates now.\n      this._slider._onValueChange(this);\n\n      this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n        withAnimation: this._slider._hasAnimation\n      });\n      return;\n    }\n\n    this.value = value;\n    this.valueChange.emit(this.value);\n\n    this._onChangeFn(this.value);\n\n    this._slider._onValueChange(this);\n\n    this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n      withAnimation: this._slider._hasAnimation\n    });\n  }\n\n  _onPointerMove(event) {\n    // Again, does nothing if a step is defined because\n    // we want the value to snap to the values on input.\n    if (!this._slider.step && this._isActive) {\n      this._updateThumbUIByPointerEvent(event);\n    }\n  }\n\n  _onPointerUp(event) {\n    this._isActive = false;\n\n    this._updateWidthInactive();\n\n    if (!this.disabled) {\n      this._handleValueCorrection(event);\n    }\n  }\n\n  _clamp(v) {\n    return Math.max(Math.min(v, this._slider._cachedWidth), 0);\n  }\n\n  _calcTranslateXByValue() {\n    if (this._slider._isRtl) {\n      return (1 - this.percentage) * this._slider._cachedWidth;\n    }\n\n    return this.percentage * this._slider._cachedWidth;\n  }\n\n  _calcTranslateXByPointerEvent(event) {\n    return event.clientX - this._slider._cachedLeft;\n  }\n  /**\n   * Used to set the slider width to the correct\n   * dimensions while the user is dragging.\n   */\n\n\n  _updateWidthActive() {\n    this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n    this._hostElement.style.width = `calc(100% + ${this._slider._inputPadding}px)`;\n  }\n  /**\n   * Sets the slider input to disproportionate dimensions to allow for touch\n   * events to be captured on touch devices.\n   */\n\n\n  _updateWidthInactive() {\n    this._hostElement.style.padding = '0px';\n    this._hostElement.style.width = 'calc(100% + 48px)';\n    this._hostElement.style.left = '-24px';\n  }\n\n  _updateThumbUIByValue(options) {\n    this.translateX = this._clamp(this._calcTranslateXByValue());\n\n    this._updateThumbUI(options);\n  }\n\n  _updateThumbUIByPointerEvent(event, options) {\n    this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event));\n\n    this._updateThumbUI(options);\n  }\n\n  _updateThumbUI(options) {\n    this._slider._setTransition(!!(options === null || options === void 0 ? void 0 : options.withAnimation));\n\n    this._slider._onTranslateXChange(this);\n  }\n  /**\n   * Sets the input's value.\n   * @param value The new value of the input\n   * @docs-private\n   */\n\n\n  writeValue(value) {\n    this.value = value;\n  }\n  /**\n   * Registers a callback to be invoked when the input's value changes from user input.\n   * @param fn The callback to register\n   * @docs-private\n   */\n\n\n  registerOnChange(fn) {\n    this._onChangeFn = fn;\n  }\n  /**\n   * Registers a callback to be invoked when the input is blurred by the user.\n   * @param fn The callback to register\n   * @docs-private\n   */\n\n\n  registerOnTouched(fn) {\n    this._onTouchedFn = fn;\n  }\n  /**\n   * Sets the disabled state of the slider.\n   * @param isDisabled The new disabled state\n   * @docs-private\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  focus() {\n    this._hostElement.focus();\n  }\n\n  blur() {\n    this._hostElement.blur();\n  }\n\n}\n\nMatSliderThumb.ɵfac = function MatSliderThumb_Factory(t) {\n  return new (t || MatSliderThumb)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_SLIDER));\n};\n\nMatSliderThumb.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatSliderThumb,\n  selectors: [[\"input\", \"matSliderThumb\", \"\"]],\n  hostAttrs: [\"type\", \"range\", 1, \"mdc-slider__input\"],\n  hostVars: 1,\n  hostBindings: function MatSliderThumb_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"change\", function MatSliderThumb_change_HostBindingHandler() {\n        return ctx._onChange();\n      })(\"input\", function MatSliderThumb_input_HostBindingHandler() {\n        return ctx._onInput();\n      })(\"blur\", function MatSliderThumb_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      })(\"focus\", function MatSliderThumb_focus_HostBindingHandler() {\n        return ctx._onFocus();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-valuetext\", ctx._valuetext);\n    }\n  },\n  inputs: {\n    value: \"value\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    dragStart: \"dragStart\",\n    dragEnd: \"dragEnd\"\n  },\n  exportAs: [\"matSliderThumb\"],\n  features: [i0.ɵɵProvidersFeature([MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n    provide: MAT_SLIDER_THUMB,\n    useExisting: MatSliderThumb\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderThumb, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matSliderThumb]',\n      exportAs: 'matSliderThumb',\n      host: {\n        'class': 'mdc-slider__input',\n        'type': 'range',\n        '[attr.aria-valuetext]': '_valuetext',\n        '(change)': '_onChange()',\n        '(input)': '_onInput()',\n        // TODO(wagnermaciel): Consider using a global event listener instead.\n        // Reason: I have found a semi-consistent way to mouse up without triggering this event.\n        '(blur)': '_onBlur()',\n        '(focus)': '_onFocus()'\n      },\n      providers: [MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_THUMB,\n        useExisting: MatSliderThumb\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_SLIDER]\n      }]\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }]\n  });\n})();\n\nclass MatSliderRangeThumb extends MatSliderThumb {\n  constructor(_ngZone, _slider, _elementRef, _cdr) {\n    super(_ngZone, _elementRef, _cdr, _slider);\n    this._cdr = _cdr;\n    this._isEndThumb = this._hostElement.hasAttribute('matSliderEndThumb');\n\n    this._setIsLeftThumb();\n\n    this.thumbPosition = this._isEndThumb ? 2\n    /* _MatThumb.END */\n    : 1\n    /* _MatThumb.START */\n    ;\n  }\n  /** @docs-private */\n\n\n  getSibling() {\n    if (!this._sibling) {\n      this._sibling = this._slider._getInput(this._isEndThumb ? 1\n      /* _MatThumb.START */\n      : 2\n      /* _MatThumb.END */\n      );\n    }\n\n    return this._sibling;\n  }\n  /**\n   * Returns the minimum translateX position allowed for this slider input's visual thumb.\n   * @docs-private\n   */\n\n\n  getMinPos() {\n    const sibling = this.getSibling();\n\n    if (!this._isLeftThumb && sibling) {\n      return sibling.translateX;\n    }\n\n    return 0;\n  }\n  /**\n   * Returns the maximum translateX position allowed for this slider input's visual thumb.\n   * @docs-private\n   */\n\n\n  getMaxPos() {\n    const sibling = this.getSibling();\n\n    if (this._isLeftThumb && sibling) {\n      return sibling.translateX;\n    }\n\n    return this._slider._cachedWidth;\n  }\n\n  _setIsLeftThumb() {\n    this._isLeftThumb = this._isEndThumb && this._slider._isRtl || !this._isEndThumb && !this._slider._isRtl;\n  }\n\n  _getDefaultValue() {\n    return this._isEndThumb && this._slider._isRange ? this.max : this.min;\n  }\n\n  _onInput() {\n    super._onInput();\n\n    this._updateSibling();\n\n    if (!this._isActive) {\n      this._updateWidthInactive();\n    }\n  }\n\n  _onNgControlValueChange() {\n    var _a;\n\n    super._onNgControlValueChange();\n\n    (_a = this.getSibling()) === null || _a === void 0 ? void 0 : _a._updateMinMax();\n  }\n\n  _onPointerDown(event) {\n    if (this.disabled) {\n      return;\n    }\n\n    if (this._sibling) {\n      this._sibling._updateWidthActive();\n\n      this._sibling._hostElement.classList.add('mat-mdc-slider-input-no-pointer-events');\n    }\n\n    super._onPointerDown(event);\n  }\n\n  _onPointerUp(event) {\n    super._onPointerUp(event);\n\n    if (this._sibling) {\n      this._sibling._updateWidthInactive();\n\n      this._sibling._hostElement.classList.remove('mat-mdc-slider-input-no-pointer-events');\n    }\n  }\n\n  _onPointerMove(event) {\n    super._onPointerMove(event);\n\n    if (!this._slider.step && this._isActive) {\n      this._updateSibling();\n    }\n  }\n\n  _fixValue(event) {\n    var _a;\n\n    super._fixValue(event);\n\n    (_a = this._sibling) === null || _a === void 0 ? void 0 : _a._updateMinMax();\n  }\n\n  _clamp(v) {\n    return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());\n  }\n\n  _updateMinMax() {\n    const sibling = this.getSibling();\n\n    if (!sibling) {\n      return;\n    }\n\n    if (this._isEndThumb) {\n      this.min = Math.max(this._slider.min, sibling.value);\n      this.max = this._slider.max;\n    } else {\n      this.min = this._slider.min;\n      this.max = Math.min(this._slider.max, sibling.value);\n    }\n  }\n\n  _updateWidthActive() {\n    const minWidth = this._slider._rippleRadius * 2 - this._slider._inputPadding * 2;\n    const maxWidth = this._slider._cachedWidth + this._slider._inputPadding - minWidth;\n    const percentage = this._slider.min < this._slider.max ? (this.max - this.min) / (this._slider.max - this._slider.min) : 1;\n    const width = maxWidth * percentage + minWidth;\n    this._hostElement.style.width = `${width}px`;\n    this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n  }\n\n  _updateWidthInactive() {\n    const sibling = this.getSibling();\n\n    if (!sibling) {\n      return;\n    }\n\n    const maxWidth = this._slider._cachedWidth;\n    const midValue = this._isEndThumb ? this.value - (this.value - sibling.value) / 2 : this.value + (sibling.value - this.value) / 2;\n\n    const _percentage = this._isEndThumb ? (this.max - midValue) / (this._slider.max - this._slider.min) : (midValue - this.min) / (this._slider.max - this._slider.min);\n\n    const percentage = this._slider.min < this._slider.max ? _percentage : 1;\n    const width = maxWidth * percentage + 24;\n    this._hostElement.style.width = `${width}px`;\n    this._hostElement.style.padding = '0px';\n\n    if (this._isLeftThumb) {\n      this._hostElement.style.left = '-24px';\n      this._hostElement.style.right = 'auto';\n    } else {\n      this._hostElement.style.left = 'auto';\n      this._hostElement.style.right = '-24px';\n    }\n  }\n\n  _updateStaticStyles() {\n    this._hostElement.classList.toggle('mat-slider__right-input', !this._isLeftThumb);\n  }\n\n  _updateSibling() {\n    const sibling = this.getSibling();\n\n    if (!sibling) {\n      return;\n    }\n\n    sibling._updateMinMax();\n\n    if (this._isActive) {\n      sibling._updateWidthActive();\n    } else {\n      sibling._updateWidthInactive();\n    }\n  }\n  /**\n   * Sets the input's value.\n   * @param value The new value of the input\n   * @docs-private\n   */\n\n\n  writeValue(value) {\n    this.value = value;\n\n    this._updateWidthInactive();\n\n    this._updateSibling();\n  }\n\n}\n\nMatSliderRangeThumb.ɵfac = function MatSliderRangeThumb_Factory(t) {\n  return new (t || MatSliderRangeThumb)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MAT_SLIDER), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nMatSliderRangeThumb.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatSliderRangeThumb,\n  selectors: [[\"input\", \"matSliderStartThumb\", \"\"], [\"input\", \"matSliderEndThumb\", \"\"]],\n  exportAs: [\"matSliderRangeThumb\"],\n  features: [i0.ɵɵProvidersFeature([MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n    provide: MAT_SLIDER_RANGE_THUMB,\n    useExisting: MatSliderRangeThumb\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderRangeThumb, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matSliderStartThumb], input[matSliderEndThumb]',\n      exportAs: 'matSliderRangeThumb',\n      providers: [MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_RANGE_THUMB,\n        useExisting: MatSliderRangeThumb\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_SLIDER]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatSliderModule {}\n\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) {\n  return new (t || MatSliderModule)();\n};\n\nMatSliderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatSliderModule\n});\nMatSliderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [MatCommonModule, CommonModule, MatRippleModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CommonModule, MatRippleModule],\n      exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb],\n      declarations: [MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MatSlider, MatSliderChange, MatSliderModule, MatSliderRangeThumb, MatSliderThumb, MatSliderVisualThumb };","map":{"version":3,"names":["coerceBooleanProperty","coerceNumberProperty","i0","InjectionToken","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","ViewChild","Optional","ViewChildren","ContentChild","ContentChildren","forwardRef","EventEmitter","Directive","Output","NgModule","i2","MatRipple","mixinColor","mixinDisableRipple","MAT_RIPPLE_GLOBAL_OPTIONS","MatCommonModule","MatRippleModule","ANIMATION_MODULE_TYPE","take","i1","i2$1","i3","CommonModule","NG_VALUE_ACCESSOR","Subject","MAT_SLIDER","MAT_SLIDER_THUMB","MAT_SLIDER_RANGE_THUMB","MAT_SLIDER_VISUAL_THUMB","MatSliderChange","MatSliderVisualThumb","constructor","_cdr","_ngZone","_elementRef","_slider","_isHovered","_isActive","_isValueIndicatorVisible","_onPointerMove","event","_sliderInput","_isFocused","rect","_hostElement","getBoundingClientRect","isHovered","_isSliderThumbHovered","_showHoverRipple","_hideRipple","_hoverRippleRef","_onMouseLeave","_onFocus","_showFocusRipple","classList","add","_onBlur","_focusRippleRef","remove","_onDragStart","_showActiveRipple","_onDragEnd","_activeRippleRef","nativeElement","ngAfterViewInit","_ripple","radius","_getInput","thumbPosition","_sliderInputEl","input","runOutsideAngular","addEventListener","ngOnDestroy","removeEventListener","_a","_isShowingRipple","_showRipple","enterDuration","exitDuration","element","rippleRef","state","animation","ignoreGlobalRippleConfig","disabled","_showValueIndicator","_isRange","sibling","_getThumb","_globalRippleOptions","launch","_noopAnimations","centered","persistent","fadeOut","_isShowingAnyRipple","_hideValueIndicator","_getSibling","_getValueIndicatorContainer","_valueIndicatorContainer","_getKnob","_knob","width","centerX","x","centerY","y","dx","clientX","dy","clientY","Math","pow","ɵfac","ChangeDetectorRef","NgZone","ElementRef","ɵcmp","provide","useExisting","NgIf","type","args","selector","host","changeDetection","OnPush","encapsulation","None","providers","template","styles","undefined","decorators","discrete","valueIndicatorText","_MatSliderMixinBase","MatSlider","_platform","elementRef","_dir","animationMode","_disabled","_discrete","_showTickMarks","_min","_max","_step","displayWith","value","_rippleRadius","startValueIndicatorText","endValueIndicatorText","_isRtl","_hasViewInitialized","_tickMarkTrackWidth","_hasAnimation","_resizeTimer","_knobRadius","_thumbsOverlap","_dirChangeSubscription","change","subscribe","_onDirChange","v","endInput","startInput","_updateValueIndicatorUIs","showTickMarks","min","_updateMin","prevMin","_updateMinRange","old","new","_updateMinNonRange","_onMinMaxOrStepChange","oldEndValue","oldStartValue","max","_updateWidthInactive","_onTranslateXChangeBySideEffect","_onValueChange","oldValue","_updateThumbUIByValue","_updateTrackUI","_updateMax","prevMax","_updateMaxRange","_updateMaxNonRange","step","_updateStep","_updateStepRange","_updateStepNonRange","prevStartValue","SAFARI","isBrowser","_updateDimensions","eInput","sInput","detectChanges","ngDevMode","_validateInputs","thumb","_inputPadding","_inputOffset","_initUIRange","_initUINonRange","_updateTickMarkUI","_updateTickMarkTrackUI","_observeHostResize","initProps","initUI","_updateValueIndicatorUI","_updateMinMax","_updateStaticStyles","unsubscribe","_resizeObserver","disconnect","_onDirChangeRange","_onDirChangeNonRange","_setIsLeftThumb","translateX","_calcTranslateXByValue","ResizeObserver","clearTimeout","_onResize","observe","_getValue","_skipUpdate","_b","_skipUIUpdate","_cachedWidth","offsetWidth","_cachedLeft","left","_setTrackActiveStyles","trackStyle","_trackActive","style","animationOriginChanged","right","transformOrigin","onStable","pipe","transform","_calcTickMarkTransform","index","_tickMarks","length","_onTranslateXChange","source","_updateThumbUI","_updateOverlappingThumbUI","input1","input2","markForCheck","_areThumbsOverlapping","_updateOverlappingThumbClassNames","getSibling","sourceThumb","siblingThumb","toggle","valuetext","_valuetext","setAttribute","visualThumb","maxValue","floor","percentage","_updateTrackUIRange","_updateTrackUINonRange","activePercentage","abs","_isLeftThumb","fillPercentage","_updateTickMarkUIRange","_updateTickMarkUINonRange","reverse","numActive","round","numInactive","Array","fill","concat","endValue","startValue","numInactiveBeforeStartThumb","numInactiveAfterEndThumb","_input","_inputs","first","last","_thumbs","_setTransition","withAnimation","Platform","Directionality","NgForOf","exportAs","inputs","descendants","isRange","endInputElement","startInputElement","startValid","hasAttribute","endValid","_throwInvalidInputConfigurationError","Error","MAT_SLIDER_THUMB_VALUE_ACCESSOR","MatSliderThumb","multi","MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR","MatSliderRangeThumb","valueChange","dragStart","dragEnd","_hasSetInitialValue","_destroyed","_onChangeFn","_onTouchedFn","_onPointerDown","bind","_onPointerUp","val","toString","_initialValue","_translateX","_setIsFocused","next","complete","_initValue","_getDefaultValue","_onChange","_onInput","emit","_onNgControlValueChange","_formControl","button","_updateWidthActive","_updateThumbUIByPointerEvent","_handleValueCorrection","setTimeout","_fixValue","xPos","numSteps","fixedPercentage","impreciseValue","prevValue","dragEvent","parent","_clamp","_calcTranslateXByPointerEvent","padding","options","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","focus","blur","ɵdir","_isEndThumb","_sibling","getMinPos","getMaxPos","_updateSibling","minWidth","maxWidth","midValue","_percentage","MatSliderModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/Henry/Desktop/New folder/Atomas2/node_modules/@angular/material/fesm2015/slider.mjs"],"sourcesContent":["import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ViewChild, Optional, ViewChildren, ContentChild, ContentChildren, forwardRef, EventEmitter, Directive, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { MatRipple, mixinColor, mixinDisableRipple, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport * as i2$1 from '@angular/cdk/bidi';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `MatSlider` to provide itself as a\n * parent to the `MatSliderThumb` and `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER = new InjectionToken('_MatSlider');\n/**\n * Injection token that can be used to query for a `MatSliderThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB = new InjectionToken('_MatSliderThumb');\n/**\n * Injection token that can be used to query for a `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB = new InjectionToken('_MatSliderRangeThumb');\n/**\n * Injection token that can be used to query for a `MatSliderVisualThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_VISUAL_THUMB = new InjectionToken('_MatSliderVisualThumb');\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use event bindings directly on the MatSliderThumbs for `change` and `input` events. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatSliderChange {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The visual slider thumb.\n *\n * Handles the slider thumb ripple states (hover, focus, and active),\n * and displaying the value tooltip on discrete sliders.\n * @docs-private\n */\nclass MatSliderVisualThumb {\n    constructor(_cdr, _ngZone, _elementRef, _slider) {\n        this._cdr = _cdr;\n        this._ngZone = _ngZone;\n        this._slider = _slider;\n        /** Whether the slider thumb is currently being hovered. */\n        this._isHovered = false;\n        /** Whether the slider thumb is currently being pressed. */\n        this._isActive = false;\n        /** Whether the value indicator tooltip is visible. */\n        this._isValueIndicatorVisible = false;\n        this._onPointerMove = (event) => {\n            if (this._sliderInput._isFocused) {\n                return;\n            }\n            const rect = this._hostElement.getBoundingClientRect();\n            const isHovered = this._isSliderThumbHovered(event, rect);\n            this._isHovered = isHovered;\n            if (isHovered) {\n                this._showHoverRipple();\n            }\n            else {\n                this._hideRipple(this._hoverRippleRef);\n            }\n        };\n        this._onMouseLeave = () => {\n            this._isHovered = false;\n            this._hideRipple(this._hoverRippleRef);\n        };\n        this._onFocus = () => {\n            // We don't want to show the hover ripple on top of the focus ripple.\n            // Happen when the users cursor is over a thumb and then the user tabs to it.\n            this._hideRipple(this._hoverRippleRef);\n            this._showFocusRipple();\n            this._hostElement.classList.add('mdc-slider__thumb--focused');\n        };\n        this._onBlur = () => {\n            // Happens when the user tabs away while still dragging a thumb.\n            if (!this._isActive) {\n                this._hideRipple(this._focusRippleRef);\n            }\n            // Happens when the user tabs away from a thumb but their cursor is still over it.\n            if (this._isHovered) {\n                this._showHoverRipple();\n            }\n            this._hostElement.classList.remove('mdc-slider__thumb--focused');\n        };\n        this._onDragStart = () => {\n            this._isActive = true;\n            this._showActiveRipple();\n        };\n        this._onDragEnd = () => {\n            this._isActive = false;\n            this._hideRipple(this._activeRippleRef);\n            // Happens when the user starts dragging a thumb, tabs away, and then stops dragging.\n            if (!this._sliderInput._isFocused) {\n                this._hideRipple(this._focusRippleRef);\n            }\n        };\n        this._hostElement = _elementRef.nativeElement;\n    }\n    ngAfterViewInit() {\n        this._ripple.radius = 24;\n        this._sliderInput = this._slider._getInput(this.thumbPosition);\n        this._sliderInputEl = this._sliderInput._hostElement;\n        const input = this._sliderInputEl;\n        // These listeners don't update any data bindings so we bind them outside\n        // of the NgZone to prevent Angular from needlessly running change detection.\n        this._ngZone.runOutsideAngular(() => {\n            input.addEventListener('pointermove', this._onPointerMove);\n            input.addEventListener('pointerdown', this._onDragStart);\n            input.addEventListener('pointerup', this._onDragEnd);\n            input.addEventListener('pointerleave', this._onMouseLeave);\n            input.addEventListener('focus', this._onFocus);\n            input.addEventListener('blur', this._onBlur);\n        });\n    }\n    ngOnDestroy() {\n        const input = this._sliderInputEl;\n        input.removeEventListener('pointermove', this._onPointerMove);\n        input.removeEventListener('pointerdown', this._onDragStart);\n        input.removeEventListener('pointerup', this._onDragEnd);\n        input.removeEventListener('pointerleave', this._onMouseLeave);\n        input.removeEventListener('focus', this._onFocus);\n        input.removeEventListener('blur', this._onBlur);\n    }\n    /** Handles displaying the hover ripple. */\n    _showHoverRipple() {\n        var _a;\n        if (!this._isShowingRipple(this._hoverRippleRef)) {\n            this._hoverRippleRef = this._showRipple({ enterDuration: 0, exitDuration: 0 });\n            (_a = this._hoverRippleRef) === null || _a === void 0 ? void 0 : _a.element.classList.add('mat-mdc-slider-hover-ripple');\n        }\n    }\n    /** Handles displaying the focus ripple. */\n    _showFocusRipple() {\n        var _a;\n        // Show the focus ripple event if noop animations are enabled.\n        if (!this._isShowingRipple(this._focusRippleRef)) {\n            this._focusRippleRef = this._showRipple({ enterDuration: 0, exitDuration: 0 }, true);\n            (_a = this._focusRippleRef) === null || _a === void 0 ? void 0 : _a.element.classList.add('mat-mdc-slider-focus-ripple');\n        }\n    }\n    /** Handles displaying the active ripple. */\n    _showActiveRipple() {\n        var _a;\n        if (!this._isShowingRipple(this._activeRippleRef)) {\n            this._activeRippleRef = this._showRipple({ enterDuration: 225, exitDuration: 400 });\n            (_a = this._activeRippleRef) === null || _a === void 0 ? void 0 : _a.element.classList.add('mat-mdc-slider-active-ripple');\n        }\n    }\n    /** Whether the given rippleRef is currently fading in or visible. */\n    _isShowingRipple(rippleRef) {\n        return (rippleRef === null || rippleRef === void 0 ? void 0 : rippleRef.state) === 0 /* RippleState.FADING_IN */ || (rippleRef === null || rippleRef === void 0 ? void 0 : rippleRef.state) === 1 /* RippleState.VISIBLE */;\n    }\n    /** Manually launches the slider thumb ripple using the specified ripple animation config. */\n    _showRipple(animation, ignoreGlobalRippleConfig) {\n        var _a;\n        if (this._slider.disabled) {\n            return;\n        }\n        this._showValueIndicator();\n        if (this._slider._isRange) {\n            const sibling = this._slider._getThumb(this.thumbPosition === 1 /* _MatThumb.START */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n            sibling._showValueIndicator();\n        }\n        if (((_a = this._slider._globalRippleOptions) === null || _a === void 0 ? void 0 : _a.disabled) && !ignoreGlobalRippleConfig) {\n            return;\n        }\n        return this._ripple.launch({\n            animation: this._slider._noopAnimations ? { enterDuration: 0, exitDuration: 0 } : animation,\n            centered: true,\n            persistent: true,\n        });\n    }\n    /**\n     * Fades out the given ripple.\n     * Also hides the value indicator if no ripple is showing.\n     */\n    _hideRipple(rippleRef) {\n        rippleRef === null || rippleRef === void 0 ? void 0 : rippleRef.fadeOut();\n        if (this._isShowingAnyRipple()) {\n            return;\n        }\n        if (!this._slider._isRange) {\n            this._hideValueIndicator();\n        }\n        const sibling = this._getSibling();\n        if (!sibling._isShowingAnyRipple()) {\n            this._hideValueIndicator();\n            sibling._hideValueIndicator();\n        }\n    }\n    /** Shows the value indicator ui. */\n    _showValueIndicator() {\n        this._hostElement.classList.add('mdc-slider__thumb--with-indicator');\n    }\n    /** Hides the value indicator ui. */\n    _hideValueIndicator() {\n        this._hostElement.classList.remove('mdc-slider__thumb--with-indicator');\n    }\n    _getSibling() {\n        return this._slider._getThumb(this.thumbPosition === 1 /* _MatThumb.START */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n    }\n    /** Gets the value indicator container's native HTML element. */\n    _getValueIndicatorContainer() {\n        var _a;\n        return (_a = this._valueIndicatorContainer) === null || _a === void 0 ? void 0 : _a.nativeElement;\n    }\n    /** Gets the native HTML element of the slider thumb knob. */\n    _getKnob() {\n        return this._knob.nativeElement;\n    }\n    _isShowingAnyRipple() {\n        return (this._isShowingRipple(this._hoverRippleRef) ||\n            this._isShowingRipple(this._focusRippleRef) ||\n            this._isShowingRipple(this._activeRippleRef));\n    }\n    _isSliderThumbHovered(event, rect) {\n        const radius = rect.width / 2;\n        const centerX = rect.x + radius;\n        const centerY = rect.y + radius;\n        const dx = event.clientX - centerX;\n        const dy = event.clientY - centerY;\n        return Math.pow(dx, 2) + Math.pow(dy, 2) < Math.pow(radius, 2);\n    }\n}\nMatSliderVisualThumb.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderVisualThumb, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i0.ElementRef }, { token: MAT_SLIDER }], target: i0.ɵɵFactoryTarget.Component });\nMatSliderVisualThumb.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatSliderVisualThumb, selector: \"mat-slider-visual-thumb\", inputs: { discrete: \"discrete\", thumbPosition: \"thumbPosition\", valueIndicatorText: \"valueIndicatorText\" }, host: { classAttribute: \"mdc-slider__thumb mat-mdc-slider-visual-thumb\" }, providers: [{ provide: MAT_SLIDER_VISUAL_THUMB, useExisting: MatSliderVisualThumb }], viewQueries: [{ propertyName: \"_ripple\", first: true, predicate: MatRipple, descendants: true }, { propertyName: \"_knob\", first: true, predicate: [\"knob\"], descendants: true }, { propertyName: \"_valueIndicatorContainer\", first: true, predicate: [\"valueIndicatorContainer\"], descendants: true }], ngImport: i0, template: \"<div class=\\\"mdc-slider__value-indicator-container\\\" *ngIf=\\\"discrete\\\" #valueIndicatorContainer>\\n  <div class=\\\"mdc-slider__value-indicator\\\">\\n    <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n  </div>\\n</div>\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-mdc-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\", styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderVisualThumb, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slider-visual-thumb', host: {\n                        'class': 'mdc-slider__thumb mat-mdc-slider-visual-thumb',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [{ provide: MAT_SLIDER_VISUAL_THUMB, useExisting: MatSliderVisualThumb }], template: \"<div class=\\\"mdc-slider__value-indicator-container\\\" *ngIf=\\\"discrete\\\" #valueIndicatorContainer>\\n  <div class=\\\"mdc-slider__value-indicator\\\">\\n    <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n  </div>\\n</div>\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-mdc-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\", styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_SLIDER]\n                    }] }];\n    }, propDecorators: { discrete: [{\n                type: Input\n            }], thumbPosition: [{\n                type: Input\n            }], valueIndicatorText: [{\n                type: Input\n            }], _ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], _knob: [{\n                type: ViewChild,\n                args: ['knob']\n            }], _valueIndicatorContainer: [{\n                type: ViewChild,\n                args: ['valueIndicatorContainer']\n            }] } });\n\n// TODO(wagnermaciel): maybe handle the following edge case:\n// 1. start dragging discrete slider\n// 2. tab to disable checkbox\n// 3. without ending drag, disable the slider\n// Boilerplate for applying mixins to MatSlider.\nconst _MatSliderMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    constructor(_ngZone, _cdr, _platform, elementRef, _dir, _globalRippleOptions, animationMode) {\n        super(elementRef);\n        this._ngZone = _ngZone;\n        this._cdr = _cdr;\n        this._platform = _platform;\n        this._dir = _dir;\n        this._globalRippleOptions = _globalRippleOptions;\n        this._disabled = false;\n        this._discrete = false;\n        this._showTickMarks = false;\n        this._min = 0;\n        this._max = 100;\n        this._step = 0;\n        /**\n         * Function that will be used to format the value before it is displayed\n         * in the thumb label. Can be used to format very large number in order\n         * for them to fit into the slider thumb.\n         */\n        this.displayWith = (value) => `${value}`;\n        this._rippleRadius = 24;\n        // The value indicator tooltip text for the visual slider thumb(s).\n        /** @docs-private */\n        this.startValueIndicatorText = '';\n        /** @docs-private */\n        this.endValueIndicatorText = '';\n        this._isRange = false;\n        /** Whether the slider is rtl. */\n        this._isRtl = false;\n        this._hasViewInitialized = false;\n        /**\n         * The width of the tick mark track.\n         * The tick mark track width is different from full track width\n         */\n        this._tickMarkTrackWidth = 0;\n        this._hasAnimation = false;\n        this._resizeTimer = null;\n        /** The radius of the native slider's knob. AFAIK there is no way to avoid hardcoding this. */\n        this._knobRadius = 8;\n        /** Whether or not the slider thumbs overlap. */\n        this._thumbsOverlap = false;\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        this._dirChangeSubscription = this._dir.change.subscribe(() => this._onDirChange());\n        this._isRtl = this._dir.value === 'rtl';\n    }\n    /** Whether the slider is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(v) {\n        this._disabled = coerceBooleanProperty(v);\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        if (endInput) {\n            endInput.disabled = this._disabled;\n        }\n        if (startInput) {\n            startInput.disabled = this._disabled;\n        }\n    }\n    /** Whether the slider displays a numeric value label upon pressing the thumb. */\n    get discrete() {\n        return this._discrete;\n    }\n    set discrete(v) {\n        this._discrete = coerceBooleanProperty(v);\n        this._updateValueIndicatorUIs();\n    }\n    /** Whether the slider displays tick marks along the slider track. */\n    get showTickMarks() {\n        return this._showTickMarks;\n    }\n    set showTickMarks(v) {\n        this._showTickMarks = coerceBooleanProperty(v);\n    }\n    /** The minimum value that the slider can have. */\n    get min() {\n        return this._min;\n    }\n    set min(v) {\n        const min = coerceNumberProperty(v, this._min);\n        if (this._min !== min) {\n            this._updateMin(min);\n        }\n    }\n    _updateMin(min) {\n        const prevMin = this._min;\n        this._min = min;\n        this._isRange ? this._updateMinRange({ old: prevMin, new: min }) : this._updateMinNonRange(min);\n        this._onMinMaxOrStepChange();\n    }\n    _updateMinRange(min) {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        startInput.min = min.new;\n        endInput.min = Math.max(min.new, startInput.value);\n        startInput.max = Math.min(endInput.max, endInput.value);\n        startInput._updateWidthInactive();\n        endInput._updateWidthInactive();\n        min.new < min.old\n            ? this._onTranslateXChangeBySideEffect(endInput, startInput)\n            : this._onTranslateXChangeBySideEffect(startInput, endInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateMinNonRange(min) {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        if (input) {\n            const oldValue = input.value;\n            input.min = min;\n            input._updateThumbUIByValue();\n            this._updateTrackUI(input);\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    /** The maximum value that the slider can have. */\n    get max() {\n        return this._max;\n    }\n    set max(v) {\n        const max = coerceNumberProperty(v, this._max);\n        if (this._max !== max) {\n            this._updateMax(max);\n        }\n    }\n    _updateMax(max) {\n        const prevMax = this._max;\n        this._max = max;\n        this._isRange ? this._updateMaxRange({ old: prevMax, new: max }) : this._updateMaxNonRange(max);\n        this._onMinMaxOrStepChange();\n    }\n    _updateMaxRange(max) {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        endInput.max = max.new;\n        startInput.max = Math.min(max.new, endInput.value);\n        endInput.min = startInput.value;\n        endInput._updateWidthInactive();\n        startInput._updateWidthInactive();\n        max.new > max.old\n            ? this._onTranslateXChangeBySideEffect(startInput, endInput)\n            : this._onTranslateXChangeBySideEffect(endInput, startInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateMaxNonRange(max) {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        if (input) {\n            const oldValue = input.value;\n            input.max = max;\n            input._updateThumbUIByValue();\n            this._updateTrackUI(input);\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    /** The values at which the thumb will snap. */\n    get step() {\n        return this._step;\n    }\n    set step(v) {\n        const step = coerceNumberProperty(v, this._step);\n        if (this._step !== step) {\n            this._updateStep(step);\n        }\n    }\n    _updateStep(step) {\n        this._step = step;\n        this._isRange ? this._updateStepRange() : this._updateStepNonRange();\n        this._onMinMaxOrStepChange();\n    }\n    _updateStepRange() {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        const prevStartValue = startInput.value;\n        endInput.min = this._min;\n        startInput.max = this._max;\n        endInput.step = this._step;\n        startInput.step = this._step;\n        if (this._platform.SAFARI) {\n            endInput.value = endInput.value;\n            startInput.value = startInput.value;\n        }\n        endInput.min = Math.max(this._min, startInput.value);\n        startInput.max = Math.min(this._max, endInput.value);\n        startInput._updateWidthInactive();\n        endInput._updateWidthInactive();\n        endInput.value < prevStartValue\n            ? this._onTranslateXChangeBySideEffect(startInput, endInput)\n            : this._onTranslateXChangeBySideEffect(endInput, startInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateStepNonRange() {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        if (input) {\n            const oldValue = input.value;\n            input.step = this._step;\n            if (this._platform.SAFARI) {\n                input.value = input.value;\n            }\n            input._updateThumbUIByValue();\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._updateDimensions();\n        }\n        const eInput = this._getInput(2 /* _MatThumb.END */);\n        const sInput = this._getInput(1 /* _MatThumb.START */);\n        this._isRange = !!eInput && !!sInput;\n        this._cdr.detectChanges();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            _validateInputs(this._isRange, this._getInput(2 /* _MatThumb.END */), this._getInput(1 /* _MatThumb.START */));\n        }\n        const thumb = this._getThumb(2 /* _MatThumb.END */);\n        this._rippleRadius = thumb._ripple.radius;\n        this._inputPadding = this._rippleRadius - this._knobRadius;\n        this._inputOffset = this._knobRadius;\n        this._isRange\n            ? this._initUIRange(eInput, sInput)\n            : this._initUINonRange(eInput);\n        this._updateTrackUI(eInput);\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._observeHostResize();\n        this._cdr.detectChanges();\n    }\n    _initUINonRange(eInput) {\n        eInput.initProps();\n        eInput.initUI();\n        this._updateValueIndicatorUI(eInput);\n        this._hasViewInitialized = true;\n        eInput._updateThumbUIByValue();\n    }\n    _initUIRange(eInput, sInput) {\n        eInput.initProps();\n        eInput.initUI();\n        sInput.initProps();\n        sInput.initUI();\n        eInput._updateMinMax();\n        sInput._updateMinMax();\n        eInput._updateStaticStyles();\n        sInput._updateStaticStyles();\n        this._updateValueIndicatorUIs();\n        this._hasViewInitialized = true;\n        eInput._updateThumbUIByValue();\n        sInput._updateThumbUIByValue();\n    }\n    ngOnDestroy() {\n        var _a;\n        this._dirChangeSubscription.unsubscribe();\n        (_a = this._resizeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this._resizeObserver = null;\n    }\n    /** Handles updating the slider ui after a dir change. */\n    _onDirChange() {\n        this._isRtl = this._dir.value === 'rtl';\n        this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange();\n        this._updateTickMarkUI();\n    }\n    _onDirChangeRange() {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        endInput._setIsLeftThumb();\n        startInput._setIsLeftThumb();\n        endInput.translateX = endInput._calcTranslateXByValue();\n        startInput.translateX = startInput._calcTranslateXByValue();\n        endInput._updateStaticStyles();\n        startInput._updateStaticStyles();\n        endInput._updateWidthInactive();\n        startInput._updateWidthInactive();\n        endInput._updateThumbUIByValue();\n        startInput._updateThumbUIByValue();\n    }\n    _onDirChangeNonRange() {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        input._updateThumbUIByValue();\n    }\n    /** Starts observing and updating the slider if the host changes its size. */\n    _observeHostResize() {\n        if (typeof ResizeObserver === 'undefined' || !ResizeObserver) {\n            return;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            this._resizeObserver = new ResizeObserver(() => {\n                if (this._isActive()) {\n                    return;\n                }\n                if (this._resizeTimer) {\n                    clearTimeout(this._resizeTimer);\n                }\n                this._onResize();\n            });\n            this._resizeObserver.observe(this._elementRef.nativeElement);\n        });\n    }\n    /** Whether any of the thumbs are currently active. */\n    _isActive() {\n        return this._getThumb(1 /* _MatThumb.START */)._isActive || this._getThumb(2 /* _MatThumb.END */)._isActive;\n    }\n    _getValue(thumbPosition = 2 /* _MatThumb.END */) {\n        const input = this._getInput(thumbPosition);\n        if (!input) {\n            return this.min;\n        }\n        return input.value;\n    }\n    _skipUpdate() {\n        var _a, _b;\n        return !!(((_a = this._getInput(1 /* _MatThumb.START */)) === null || _a === void 0 ? void 0 : _a._skipUIUpdate) || ((_b = this._getInput(2 /* _MatThumb.END */)) === null || _b === void 0 ? void 0 : _b._skipUIUpdate));\n    }\n    /** Stores the slider dimensions. */\n    _updateDimensions() {\n        this._cachedWidth = this._elementRef.nativeElement.offsetWidth;\n        this._cachedLeft = this._elementRef.nativeElement.getBoundingClientRect().left;\n    }\n    /** Sets the styles for the active portion of the track. */\n    _setTrackActiveStyles(styles) {\n        const trackStyle = this._trackActive.nativeElement.style;\n        const animationOriginChanged = styles.left !== trackStyle.left && styles.right !== trackStyle.right;\n        trackStyle.left = styles.left;\n        trackStyle.right = styles.right;\n        trackStyle.transformOrigin = styles.transformOrigin;\n        if (animationOriginChanged) {\n            this._elementRef.nativeElement.classList.add('mat-mdc-slider-disable-track-animation');\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                this._elementRef.nativeElement.classList.remove('mat-mdc-slider-disable-track-animation');\n                trackStyle.transform = styles.transform;\n            });\n        }\n        else {\n            trackStyle.transform = styles.transform;\n        }\n    }\n    /** Returns the translateX positioning for a tick mark based on it's index. */\n    _calcTickMarkTransform(index) {\n        // TODO(wagnermaciel): See if we can avoid doing this and just using flex to position these.\n        const translateX = index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1));\n        return `translateX(${translateX}px`;\n    }\n    // Handlers for updating the slider ui.\n    _onTranslateXChange(source) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateThumbUI(source);\n        this._updateTrackUI(source);\n        this._updateOverlappingThumbUI(source);\n    }\n    _onTranslateXChangeBySideEffect(input1, input2) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        input1._updateThumbUIByValue();\n        input2._updateThumbUIByValue();\n    }\n    _onValueChange(source) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateValueIndicatorUI(source);\n        this._updateTickMarkUI();\n        this._cdr.detectChanges();\n    }\n    _onMinMaxOrStepChange() {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._cdr.markForCheck();\n    }\n    _onResize() {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateDimensions();\n        if (this._isRange) {\n            const eInput = this._getInput(2 /* _MatThumb.END */);\n            const sInput = this._getInput(1 /* _MatThumb.START */);\n            eInput._updateThumbUIByValue();\n            sInput._updateThumbUIByValue();\n            eInput._updateStaticStyles();\n            sInput._updateStaticStyles();\n            eInput._updateMinMax();\n            sInput._updateMinMax();\n            eInput._updateWidthInactive();\n            sInput._updateWidthInactive();\n        }\n        else {\n            const eInput = this._getInput(2 /* _MatThumb.END */);\n            if (eInput) {\n                eInput._updateThumbUIByValue();\n            }\n        }\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._cdr.detectChanges();\n    }\n    /** Returns true if the slider knobs are overlapping one another. */\n    _areThumbsOverlapping() {\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        if (!startInput || !endInput) {\n            return false;\n        }\n        return endInput.translateX - startInput.translateX < 20;\n    }\n    /**\n     * Updates the class names of overlapping slider thumbs so\n     * that the current active thumb is styled to be on \"top\".\n     */\n    _updateOverlappingThumbClassNames(source) {\n        const sibling = source.getSibling();\n        const sourceThumb = this._getThumb(source.thumbPosition);\n        const siblingThumb = this._getThumb(sibling.thumbPosition);\n        siblingThumb._hostElement.classList.remove('mdc-slider__thumb--top');\n        sourceThumb._hostElement.classList.toggle('mdc-slider__thumb--top', this._thumbsOverlap);\n    }\n    /** Updates the UI of slider thumbs when they begin or stop overlapping. */\n    _updateOverlappingThumbUI(source) {\n        if (!this._isRange || this._skipUpdate()) {\n            return;\n        }\n        if (this._thumbsOverlap !== this._areThumbsOverlapping()) {\n            this._thumbsOverlap = !this._thumbsOverlap;\n            this._updateOverlappingThumbClassNames(source);\n        }\n    }\n    // _MatThumb styles update conditions\n    //\n    // 1. TranslateX, resize, or dir change\n    //    - Reason: The thumb styles need to be updated according to the new translateX.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the translateX of the given thumb. */\n    _updateThumbUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        const thumb = this._getThumb(source.thumbPosition === 2 /* _MatThumb.END */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n        thumb._hostElement.style.transform = `translateX(${source.translateX}px)`;\n    }\n    // Value indicator text update conditions\n    //\n    // 1. Value\n    //    - Reason: The value displayed needs to be updated.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the value indicator tooltip ui for the given thumb. */\n    _updateValueIndicatorUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        const valuetext = this.displayWith(source.value);\n        this._hasViewInitialized\n            ? (source._valuetext = valuetext)\n            : source._hostElement.setAttribute('aria-valuetext', valuetext);\n        if (this.discrete) {\n            source.thumbPosition === 1 /* _MatThumb.START */\n                ? (this.startValueIndicatorText = valuetext)\n                : (this.endValueIndicatorText = valuetext);\n            const visualThumb = this._getThumb(source.thumbPosition);\n            valuetext.length < 3\n                ? visualThumb._hostElement.classList.add('mdc-slider__thumb--short-value')\n                : visualThumb._hostElement.classList.remove('mdc-slider__thumb--short-value');\n        }\n    }\n    /** Updates all value indicator UIs in the slider. */\n    _updateValueIndicatorUIs() {\n        const eInput = this._getInput(2 /* _MatThumb.END */);\n        const sInput = this._getInput(1 /* _MatThumb.START */);\n        if (eInput) {\n            this._updateValueIndicatorUI(eInput);\n        }\n        if (sInput) {\n            this._updateValueIndicatorUI(sInput);\n        }\n    }\n    // Update Tick Mark Track Width\n    //\n    // 1. Min, max, or step\n    //    - Reason: The maximum reachable value may have changed.\n    //    - Side note: The maximum reachable value is different from the maximum value set by the\n    //      user. For example, a slider with [min: 5, max: 100, step: 10] would have a maximum\n    //      reachable value of 95.\n    // 2. Resize\n    //    - Reason: The position for the maximum reachable value needs to be recalculated.\n    /** Updates the width of the tick mark track. */\n    _updateTickMarkTrackUI() {\n        if (this._skipUpdate()) {\n            return;\n        }\n        const step = this._step && this._step > 0 ? this._step : 1;\n        const maxValue = Math.floor(this.max / step) * step;\n        const percentage = (maxValue - this.min) / (this.max - this.min);\n        this._tickMarkTrackWidth = this._cachedWidth * percentage - 6;\n    }\n    // Track active update conditions\n    //\n    // 1. TranslateX\n    //    - Reason: The track active should line up with the new thumb position.\n    // 2. Min or max\n    //    - Reason #1: The 'active' percentage needs to be recalculated.\n    //    - Reason #2: The value may have silently changed.\n    // 3. Step\n    //    - Reason: The value may have silently changed causing the thumb(s) to shift.\n    // 4. Dir change\n    //    - Reason: The track active will need to be updated according to the new thumb position(s).\n    // 5. Resize\n    //    - Reason: The total width the 'active' tracks translateX is based on has changed.\n    /** Updates the scale on the active portion of the track. */\n    _updateTrackUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        this._isRange\n            ? this._updateTrackUIRange(source)\n            : this._updateTrackUINonRange(source);\n    }\n    _updateTrackUIRange(source) {\n        const sibling = source.getSibling();\n        if (!sibling || !this._cachedWidth) {\n            return;\n        }\n        const activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;\n        if (source._isLeftThumb && this._cachedWidth) {\n            this._setTrackActiveStyles({\n                left: 'auto',\n                right: `${this._cachedWidth - sibling.translateX}px`,\n                transformOrigin: 'right',\n                transform: `scaleX(${activePercentage})`,\n            });\n        }\n        else {\n            this._setTrackActiveStyles({\n                left: `${sibling.translateX}px`,\n                right: 'auto',\n                transformOrigin: 'left',\n                transform: `scaleX(${activePercentage})`,\n            });\n        }\n    }\n    _updateTrackUINonRange(source) {\n        this._isRtl\n            ? this._setTrackActiveStyles({\n                left: 'auto',\n                right: '0px',\n                transformOrigin: 'right',\n                transform: `scaleX(${1 - source.fillPercentage})`,\n            })\n            : this._setTrackActiveStyles({\n                left: '0px',\n                right: 'auto',\n                transformOrigin: 'left',\n                transform: `scaleX(${source.fillPercentage})`,\n            });\n    }\n    // Tick mark update conditions\n    //\n    // 1. Value\n    //    - Reason: a tick mark which was once active might now be inactive or vice versa.\n    // 2. Min, max, or step\n    //    - Reason #1: the number of tick marks may have changed.\n    //    - Reason #2: The value may have silently changed.\n    /** Updates the dots along the slider track. */\n    _updateTickMarkUI() {\n        if (this.step === undefined || this.min === undefined || this.max === undefined) {\n            return;\n        }\n        const step = this.step > 0 ? this.step : 1;\n        this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step);\n        if (this._isRtl) {\n            this._tickMarks.reverse();\n        }\n    }\n    _updateTickMarkUINonRange(step) {\n        const value = this._getValue();\n        let numActive = Math.max(Math.round((value - this.min) / step), 0);\n        let numInactive = Math.max(Math.round((this.max - value) / step), 0);\n        this._isRtl ? numActive++ : numInactive++;\n        this._tickMarks = Array(numActive)\n            .fill(0 /* _MatTickMark.ACTIVE */)\n            .concat(Array(numInactive).fill(1 /* _MatTickMark.INACTIVE */));\n    }\n    _updateTickMarkUIRange(step) {\n        const endValue = this._getValue();\n        const startValue = this._getValue(1 /* _MatThumb.START */);\n        const numInactiveBeforeStartThumb = Math.max(Math.floor((startValue - this.min) / step), 0);\n        const numActive = Math.max(Math.floor((endValue - startValue) / step) + 1, 0);\n        const numInactiveAfterEndThumb = Math.max(Math.floor((this.max - endValue) / step), 0);\n        this._tickMarks = Array(numInactiveBeforeStartThumb)\n            .fill(1 /* _MatTickMark.INACTIVE */)\n            .concat(Array(numActive).fill(0 /* _MatTickMark.ACTIVE */), Array(numInactiveAfterEndThumb).fill(1 /* _MatTickMark.INACTIVE */));\n    }\n    /** Gets the slider thumb input of the given thumb position. */\n    _getInput(thumbPosition) {\n        var _a;\n        if (thumbPosition === 2 /* _MatThumb.END */ && this._input) {\n            return this._input;\n        }\n        if ((_a = this._inputs) === null || _a === void 0 ? void 0 : _a.length) {\n            return thumbPosition === 1 /* _MatThumb.START */ ? this._inputs.first : this._inputs.last;\n        }\n        return;\n    }\n    /** Gets the slider thumb HTML input element of the given thumb position. */\n    _getThumb(thumbPosition) {\n        var _a, _b;\n        return thumbPosition === 2 /* _MatThumb.END */ ? (_a = this._thumbs) === null || _a === void 0 ? void 0 : _a.last : (_b = this._thumbs) === null || _b === void 0 ? void 0 : _b.first;\n    }\n    _setTransition(withAnimation) {\n        this._hasAnimation = withAnimation && !this._noopAnimations;\n        this._elementRef.nativeElement.classList.toggle('mat-mdc-slider-with-animation', this._hasAnimation);\n    }\n}\nMatSlider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSlider, deps: [{ token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.Platform }, { token: i0.ElementRef }, { token: i2$1.Directionality, optional: true }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSlider.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatSlider, selector: \"mat-slider\", inputs: { color: \"color\", disableRipple: \"disableRipple\", disabled: \"disabled\", discrete: \"discrete\", showTickMarks: \"showTickMarks\", min: \"min\", max: \"max\", step: \"step\", displayWith: \"displayWith\" }, host: { properties: { \"class.mdc-slider--range\": \"_isRange\", \"class.mdc-slider--disabled\": \"disabled\", \"class.mdc-slider--discrete\": \"discrete\", \"class.mdc-slider--tick-marks\": \"showTickMarks\", \"class._mat-animation-noopable\": \"_noopAnimations\" }, classAttribute: \"mat-mdc-slider mdc-slider\" }, providers: [{ provide: MAT_SLIDER, useExisting: MatSlider }], queries: [{ propertyName: \"_input\", first: true, predicate: MAT_SLIDER_THUMB, descendants: true }, { propertyName: \"_inputs\", predicate: MAT_SLIDER_RANGE_THUMB }], viewQueries: [{ propertyName: \"_trackActive\", first: true, predicate: [\"trackActive\"], descendants: true }, { propertyName: \"_thumbs\", predicate: MAT_SLIDER_VISUAL_THUMB, descendants: true }], exportAs: [\"matSlider\"], usesInheritance: true, ngImport: i0, template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"showTickMarks\\\" class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n    <ng-container *ngIf=\\\"_cachedWidth\\\">\\n        <div\\n          *ngFor=\\\"let tickMark of _tickMarks; let i = index\\\"\\n          [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n          [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n    </ng-container>\\n  </div>\\n</div>\\n\\n<!-- Thumbs -->\\n<mat-slider-visual-thumb\\n  *ngIf=\\\"_isRange\\\"\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"1\\\"\\n  [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\", styles: [\".mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden;top:-1px}.mdc-slider .mdc-slider__track--active_fill{border-top:6px solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:0;margin:0;height:100%;opacity:0;pointer-events:none;position:absolute;top:0;width:100%}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-font-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: MatSliderVisualThumb, selector: \"mat-slider-visual-thumb\", inputs: [\"discrete\", \"thumbPosition\", \"valueIndicatorText\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSlider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slider', host: {\n                        'class': 'mat-mdc-slider mdc-slider',\n                        '[class.mdc-slider--range]': '_isRange',\n                        '[class.mdc-slider--disabled]': 'disabled',\n                        '[class.mdc-slider--discrete]': 'discrete',\n                        '[class.mdc-slider--tick-marks]': 'showTickMarks',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                    }, exportAs: 'matSlider', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, inputs: ['color', 'disableRipple'], providers: [{ provide: MAT_SLIDER, useExisting: MatSlider }], template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"showTickMarks\\\" class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n    <ng-container *ngIf=\\\"_cachedWidth\\\">\\n        <div\\n          *ngFor=\\\"let tickMark of _tickMarks; let i = index\\\"\\n          [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n          [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n    </ng-container>\\n  </div>\\n</div>\\n\\n<!-- Thumbs -->\\n<mat-slider-visual-thumb\\n  *ngIf=\\\"_isRange\\\"\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"1\\\"\\n  [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\", styles: [\".mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden;top:-1px}.mdc-slider .mdc-slider__track--active_fill{border-top:6px solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:0;margin:0;height:100%;opacity:0;pointer-events:none;position:absolute;top:0;width:100%}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-font-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.Platform }, { type: i0.ElementRef }, { type: i2$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _trackActive: [{\n                type: ViewChild,\n                args: ['trackActive']\n            }], _thumbs: [{\n                type: ViewChildren,\n                args: [MAT_SLIDER_VISUAL_THUMB]\n            }], _input: [{\n                type: ContentChild,\n                args: [MAT_SLIDER_THUMB]\n            }], _inputs: [{\n                type: ContentChildren,\n                args: [MAT_SLIDER_RANGE_THUMB, { descendants: false }]\n            }], disabled: [{\n                type: Input\n            }], discrete: [{\n                type: Input\n            }], showTickMarks: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], displayWith: [{\n                type: Input\n            }] } });\n/** Ensures that there is not an invalid configuration for the slider thumb inputs. */\nfunction _validateInputs(isRange, endInputElement, startInputElement) {\n    const startValid = !isRange || (startInputElement === null || startInputElement === void 0 ? void 0 : startInputElement._hostElement.hasAttribute('matSliderStartThumb'));\n    const endValid = endInputElement._hostElement.hasAttribute(isRange ? 'matSliderEndThumb' : 'matSliderThumb');\n    if (!startValid || !endValid) {\n        _throwInvalidInputConfigurationError();\n    }\n}\nfunction _throwInvalidInputConfigurationError() {\n    throw Error(`Invalid slider thumb input configuration!\n\n   Valid configurations are as follows:\n\n     <mat-slider>\n       <input matSliderThumb>\n     </mat-slider>\n\n     or\n\n     <mat-slider>\n       <input matSliderStartThumb>\n       <input matSliderEndThumb>\n     </mat-slider>\n   `);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provider that allows the slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSliderThumb),\n    multi: true,\n};\n/**\n * Provider that allows the range slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSliderRangeThumb),\n    multi: true,\n};\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<mat-slider>`.\n * Up to two may be placed inside of a `<mat-slider>`.\n *\n * If one is used, the selector `matSliderThumb` must be used, and the outcome will be a normal\n * slider. If two are used, the selectors `matSliderStartThumb` and `matSliderEndThumb` must be\n * used, and the outcome will be a range slider with two slider thumbs.\n */\nclass MatSliderThumb {\n    constructor(_ngZone, _elementRef, _cdr, _slider) {\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._cdr = _cdr;\n        this._slider = _slider;\n        /** Event emitted when the `value` is changed. */\n        this.valueChange = new EventEmitter();\n        /** Event emitted when the slider thumb starts being dragged. */\n        this.dragStart = new EventEmitter();\n        /** Event emitted when the slider thumb stops being dragged. */\n        this.dragEnd = new EventEmitter();\n        /**\n         * Indicates whether this thumb is the start or end thumb.\n         * @docs-private\n         */\n        this.thumbPosition = 2 /* _MatThumb.END */;\n        /** The radius of a native html slider's knob. */\n        this._knobRadius = 8;\n        /** Whether user's cursor is currently in a mouse down state on the input. */\n        this._isActive = false;\n        /** Whether the input is currently focused (either by tab or after clicking). */\n        this._isFocused = false;\n        /**\n         * Whether the initial value has been set.\n         * This exists because the initial value cannot be immediately set because the min and max\n         * must first be relayed from the parent MatSlider component, which can only happen later\n         * in the component lifecycle.\n         */\n        this._hasSetInitialValue = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Indicates whether UI updates should be skipped.\n         *\n         * This flag is used to avoid flickering\n         * when correcting values on pointer up/down.\n         */\n        this._skipUIUpdate = false;\n        /** Callback called when the slider input value changes. */\n        this._onChangeFn = () => { };\n        /** Callback called when the slider input has been touched. */\n        this._onTouchedFn = () => { };\n        this._hostElement = _elementRef.nativeElement;\n        this._ngZone.runOutsideAngular(() => {\n            this._hostElement.addEventListener('pointerdown', this._onPointerDown.bind(this));\n            this._hostElement.addEventListener('pointermove', this._onPointerMove.bind(this));\n            this._hostElement.addEventListener('pointerup', this._onPointerUp.bind(this));\n        });\n    }\n    get value() {\n        return coerceNumberProperty(this._hostElement.value);\n    }\n    set value(v) {\n        const val = coerceNumberProperty(v).toString();\n        if (!this._hasSetInitialValue) {\n            this._initialValue = val;\n            return;\n        }\n        if (this._isActive) {\n            return;\n        }\n        this._hostElement.value = val;\n        this._updateThumbUIByValue();\n        this._slider._onValueChange(this);\n        this._cdr.detectChanges();\n    }\n    /**\n     * The current translateX in px of the slider visual thumb.\n     * @docs-private\n     */\n    get translateX() {\n        if (this._slider.min >= this._slider.max) {\n            this._translateX = 0;\n            return this._translateX;\n        }\n        if (this._translateX === undefined) {\n            this._translateX = this._calcTranslateXByValue();\n        }\n        return this._translateX;\n    }\n    set translateX(v) {\n        this._translateX = v;\n    }\n    /** @docs-private */\n    get min() {\n        return coerceNumberProperty(this._hostElement.min);\n    }\n    set min(v) {\n        this._hostElement.min = coerceNumberProperty(v).toString();\n        this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get max() {\n        return coerceNumberProperty(this._hostElement.max);\n    }\n    set max(v) {\n        this._hostElement.max = coerceNumberProperty(v).toString();\n        this._cdr.detectChanges();\n    }\n    get step() {\n        return coerceNumberProperty(this._hostElement.step);\n    }\n    set step(v) {\n        this._hostElement.step = coerceNumberProperty(v).toString();\n        this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get disabled() {\n        return coerceBooleanProperty(this._hostElement.disabled);\n    }\n    set disabled(v) {\n        this._hostElement.disabled = coerceBooleanProperty(v);\n        this._cdr.detectChanges();\n        if (this._slider.disabled !== this.disabled) {\n            this._slider.disabled = this.disabled;\n        }\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percentage() {\n        if (this._slider.min >= this._slider.max) {\n            return this._slider._isRtl ? 1 : 0;\n        }\n        return (this.value - this._slider.min) / (this._slider.max - this._slider.min);\n    }\n    /** @docs-private */\n    get fillPercentage() {\n        if (!this._slider._cachedWidth) {\n            return this._slider._isRtl ? 1 : 0;\n        }\n        if (this._translateX === 0) {\n            return 0;\n        }\n        return this.translateX / this._slider._cachedWidth;\n    }\n    /** Used to relay updates to _isFocused to the slider visual thumbs. */\n    _setIsFocused(v) {\n        this._isFocused = v;\n    }\n    ngOnDestroy() {\n        this._hostElement.removeEventListener('pointerdown', this._onPointerDown);\n        this._hostElement.removeEventListener('pointermove', this._onPointerMove);\n        this._hostElement.removeEventListener('pointerup', this._onPointerUp);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.dragStart.complete();\n        this.dragEnd.complete();\n    }\n    /** @docs-private */\n    initProps() {\n        this._updateWidthInactive();\n        // If this or the parent slider is disabled, just make everything disabled.\n        if (this.disabled !== this._slider.disabled) {\n            // The MatSlider setter for disabled will relay this and disable both inputs.\n            this._slider.disabled = true;\n        }\n        this.step = this._slider.step;\n        this.min = this._slider.min;\n        this.max = this._slider.max;\n        this._initValue();\n    }\n    /** @docs-private */\n    initUI() {\n        this._updateThumbUIByValue();\n    }\n    _initValue() {\n        this._hasSetInitialValue = true;\n        if (this._initialValue === undefined) {\n            this.value = this._getDefaultValue();\n        }\n        else {\n            this._hostElement.value = this._initialValue;\n            this._updateThumbUIByValue();\n            this._slider._onValueChange(this);\n            this._cdr.detectChanges();\n        }\n    }\n    _getDefaultValue() {\n        return this.min;\n    }\n    _onBlur() {\n        this._setIsFocused(false);\n        this._onTouchedFn();\n    }\n    _onFocus() {\n        this._setIsFocused(true);\n    }\n    _onChange() {\n        // only used to handle the edge case where user\n        // mousedown on the slider then uses arrow keys.\n        if (this._isActive) {\n            this._updateThumbUIByValue({ withAnimation: true });\n        }\n    }\n    _onInput() {\n        this.valueChange.emit(this.value);\n        this._onChangeFn(this.value);\n        // handles arrowing and updating the value when\n        // a step is defined.\n        if (this._slider.step || !this._isActive) {\n            this._updateThumbUIByValue({ withAnimation: true });\n        }\n        this._slider._onValueChange(this);\n    }\n    _onNgControlValueChange() {\n        // only used to handle when the value change\n        // originates outside of the slider.\n        if (!this._isActive || !this._isFocused) {\n            this._slider._onValueChange(this);\n            this._updateThumbUIByValue();\n        }\n        this._slider.disabled = this._formControl.disabled;\n    }\n    _onPointerDown(event) {\n        if (this.disabled || event.button !== 0) {\n            return;\n        }\n        this._isActive = true;\n        this._setIsFocused(true);\n        this._updateWidthActive();\n        this._slider._updateDimensions();\n        // Does nothing if a step is defined because we\n        // want the value to snap to the values on input.\n        if (!this._slider.step) {\n            this._updateThumbUIByPointerEvent(event, { withAnimation: true });\n        }\n        if (!this.disabled) {\n            this._handleValueCorrection(event);\n        }\n    }\n    /**\n     * Corrects the value of the slider on pointer up/down.\n     *\n     * Called on pointer down and up because the value is set based\n     * on the inactive width instead of the active width.\n     */\n    _handleValueCorrection(event) {\n        // Don't update the UI with the current value! The value on pointerdown\n        // and pointerup is calculated in the split second before the input(s)\n        // resize. See _updateWidthInactive() and _updateWidthActive() for more\n        // details.\n        this._skipUIUpdate = true;\n        // Note that this function gets triggered before the actual value of the\n        // slider is updated. This means if we were to set the value here, it\n        // would immediately be overwritten. Using setTimeout ensures the setting\n        // of the value happens after the value has been updated by the\n        // pointerdown event.\n        setTimeout(() => {\n            this._skipUIUpdate = false;\n            this._fixValue(event);\n        }, 0);\n    }\n    /** Corrects the value of the slider based on the pointer event's position. */\n    _fixValue(event) {\n        const xPos = event.clientX - this._slider._cachedLeft;\n        const width = this._slider._cachedWidth;\n        const step = this._slider.step === 0 ? 1 : this._slider.step;\n        const numSteps = Math.floor((this._slider.max - this._slider.min) / step);\n        const percentage = this._slider._isRtl ? 1 - xPos / width : xPos / width;\n        // To ensure the percentage is rounded to the necessary number of decimals.\n        const fixedPercentage = Math.round(percentage * numSteps) / numSteps;\n        const impreciseValue = fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min;\n        const value = Math.round(impreciseValue / step) * step;\n        const prevValue = this.value;\n        const dragEvent = { source: this, parent: this._slider, value: value };\n        this._isActive ? this.dragStart.emit(dragEvent) : this.dragEnd.emit(dragEvent);\n        if (value === prevValue) {\n            // Because we prevented UI updates, if it turns out that the race\n            // condition didn't happen and the value is already correct, we\n            // have to apply the ui updates now.\n            this._slider._onValueChange(this);\n            this._slider.step > 0\n                ? this._updateThumbUIByValue()\n                : this._updateThumbUIByPointerEvent(event, { withAnimation: this._slider._hasAnimation });\n            return;\n        }\n        this.value = value;\n        this.valueChange.emit(this.value);\n        this._onChangeFn(this.value);\n        this._slider._onValueChange(this);\n        this._slider.step > 0\n            ? this._updateThumbUIByValue()\n            : this._updateThumbUIByPointerEvent(event, { withAnimation: this._slider._hasAnimation });\n    }\n    _onPointerMove(event) {\n        // Again, does nothing if a step is defined because\n        // we want the value to snap to the values on input.\n        if (!this._slider.step && this._isActive) {\n            this._updateThumbUIByPointerEvent(event);\n        }\n    }\n    _onPointerUp(event) {\n        this._isActive = false;\n        this._updateWidthInactive();\n        if (!this.disabled) {\n            this._handleValueCorrection(event);\n        }\n    }\n    _clamp(v) {\n        return Math.max(Math.min(v, this._slider._cachedWidth), 0);\n    }\n    _calcTranslateXByValue() {\n        if (this._slider._isRtl) {\n            return (1 - this.percentage) * this._slider._cachedWidth;\n        }\n        return this.percentage * this._slider._cachedWidth;\n    }\n    _calcTranslateXByPointerEvent(event) {\n        return event.clientX - this._slider._cachedLeft;\n    }\n    /**\n     * Used to set the slider width to the correct\n     * dimensions while the user is dragging.\n     */\n    _updateWidthActive() {\n        this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n        this._hostElement.style.width = `calc(100% + ${this._slider._inputPadding}px)`;\n    }\n    /**\n     * Sets the slider input to disproportionate dimensions to allow for touch\n     * events to be captured on touch devices.\n     */\n    _updateWidthInactive() {\n        this._hostElement.style.padding = '0px';\n        this._hostElement.style.width = 'calc(100% + 48px)';\n        this._hostElement.style.left = '-24px';\n    }\n    _updateThumbUIByValue(options) {\n        this.translateX = this._clamp(this._calcTranslateXByValue());\n        this._updateThumbUI(options);\n    }\n    _updateThumbUIByPointerEvent(event, options) {\n        this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event));\n        this._updateThumbUI(options);\n    }\n    _updateThumbUI(options) {\n        this._slider._setTransition(!!(options === null || options === void 0 ? void 0 : options.withAnimation));\n        this._slider._onTranslateXChange(this);\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be invoked when the input's value changes from user input.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be invoked when the input is blurred by the user.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouchedFn = fn;\n    }\n    /**\n     * Sets the disabled state of the slider.\n     * @param isDisabled The new disabled state\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    focus() {\n        this._hostElement.focus();\n    }\n    blur() {\n        this._hostElement.blur();\n    }\n}\nMatSliderThumb.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderThumb, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_SLIDER }], target: i0.ɵɵFactoryTarget.Directive });\nMatSliderThumb.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatSliderThumb, selector: \"input[matSliderThumb]\", inputs: { value: \"value\" }, outputs: { valueChange: \"valueChange\", dragStart: \"dragStart\", dragEnd: \"dragEnd\" }, host: { attributes: { \"type\": \"range\" }, listeners: { \"change\": \"_onChange()\", \"input\": \"_onInput()\", \"blur\": \"_onBlur()\", \"focus\": \"_onFocus()\" }, properties: { \"attr.aria-valuetext\": \"_valuetext\" }, classAttribute: \"mdc-slider__input\" }, providers: [\n        MAT_SLIDER_THUMB_VALUE_ACCESSOR,\n        { provide: MAT_SLIDER_THUMB, useExisting: MatSliderThumb },\n    ], exportAs: [\"matSliderThumb\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderThumb, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matSliderThumb]',\n                    exportAs: 'matSliderThumb',\n                    host: {\n                        'class': 'mdc-slider__input',\n                        'type': 'range',\n                        '[attr.aria-valuetext]': '_valuetext',\n                        '(change)': '_onChange()',\n                        '(input)': '_onInput()',\n                        // TODO(wagnermaciel): Consider using a global event listener instead.\n                        // Reason: I have found a semi-consistent way to mouse up without triggering this event.\n                        '(blur)': '_onBlur()',\n                        '(focus)': '_onFocus()',\n                    },\n                    providers: [\n                        MAT_SLIDER_THUMB_VALUE_ACCESSOR,\n                        { provide: MAT_SLIDER_THUMB, useExisting: MatSliderThumb },\n                    ],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_SLIDER]\n                    }] }];\n    }, propDecorators: { value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], dragStart: [{\n                type: Output\n            }], dragEnd: [{\n                type: Output\n            }] } });\nclass MatSliderRangeThumb extends MatSliderThumb {\n    constructor(_ngZone, _slider, _elementRef, _cdr) {\n        super(_ngZone, _elementRef, _cdr, _slider);\n        this._cdr = _cdr;\n        this._isEndThumb = this._hostElement.hasAttribute('matSliderEndThumb');\n        this._setIsLeftThumb();\n        this.thumbPosition = this._isEndThumb ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */;\n    }\n    /** @docs-private */\n    getSibling() {\n        if (!this._sibling) {\n            this._sibling = this._slider._getInput(this._isEndThumb ? 1 /* _MatThumb.START */ : 2 /* _MatThumb.END */);\n        }\n        return this._sibling;\n    }\n    /**\n     * Returns the minimum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMinPos() {\n        const sibling = this.getSibling();\n        if (!this._isLeftThumb && sibling) {\n            return sibling.translateX;\n        }\n        return 0;\n    }\n    /**\n     * Returns the maximum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMaxPos() {\n        const sibling = this.getSibling();\n        if (this._isLeftThumb && sibling) {\n            return sibling.translateX;\n        }\n        return this._slider._cachedWidth;\n    }\n    _setIsLeftThumb() {\n        this._isLeftThumb =\n            (this._isEndThumb && this._slider._isRtl) || (!this._isEndThumb && !this._slider._isRtl);\n    }\n    _getDefaultValue() {\n        return this._isEndThumb && this._slider._isRange ? this.max : this.min;\n    }\n    _onInput() {\n        super._onInput();\n        this._updateSibling();\n        if (!this._isActive) {\n            this._updateWidthInactive();\n        }\n    }\n    _onNgControlValueChange() {\n        var _a;\n        super._onNgControlValueChange();\n        (_a = this.getSibling()) === null || _a === void 0 ? void 0 : _a._updateMinMax();\n    }\n    _onPointerDown(event) {\n        if (this.disabled) {\n            return;\n        }\n        if (this._sibling) {\n            this._sibling._updateWidthActive();\n            this._sibling._hostElement.classList.add('mat-mdc-slider-input-no-pointer-events');\n        }\n        super._onPointerDown(event);\n    }\n    _onPointerUp(event) {\n        super._onPointerUp(event);\n        if (this._sibling) {\n            this._sibling._updateWidthInactive();\n            this._sibling._hostElement.classList.remove('mat-mdc-slider-input-no-pointer-events');\n        }\n    }\n    _onPointerMove(event) {\n        super._onPointerMove(event);\n        if (!this._slider.step && this._isActive) {\n            this._updateSibling();\n        }\n    }\n    _fixValue(event) {\n        var _a;\n        super._fixValue(event);\n        (_a = this._sibling) === null || _a === void 0 ? void 0 : _a._updateMinMax();\n    }\n    _clamp(v) {\n        return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());\n    }\n    _updateMinMax() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        if (this._isEndThumb) {\n            this.min = Math.max(this._slider.min, sibling.value);\n            this.max = this._slider.max;\n        }\n        else {\n            this.min = this._slider.min;\n            this.max = Math.min(this._slider.max, sibling.value);\n        }\n    }\n    _updateWidthActive() {\n        const minWidth = this._slider._rippleRadius * 2 - this._slider._inputPadding * 2;\n        const maxWidth = this._slider._cachedWidth + this._slider._inputPadding - minWidth;\n        const percentage = this._slider.min < this._slider.max\n            ? (this.max - this.min) / (this._slider.max - this._slider.min)\n            : 1;\n        const width = maxWidth * percentage + minWidth;\n        this._hostElement.style.width = `${width}px`;\n        this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n    }\n    _updateWidthInactive() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        const maxWidth = this._slider._cachedWidth;\n        const midValue = this._isEndThumb\n            ? this.value - (this.value - sibling.value) / 2\n            : this.value + (sibling.value - this.value) / 2;\n        const _percentage = this._isEndThumb\n            ? (this.max - midValue) / (this._slider.max - this._slider.min)\n            : (midValue - this.min) / (this._slider.max - this._slider.min);\n        const percentage = this._slider.min < this._slider.max ? _percentage : 1;\n        const width = maxWidth * percentage + 24;\n        this._hostElement.style.width = `${width}px`;\n        this._hostElement.style.padding = '0px';\n        if (this._isLeftThumb) {\n            this._hostElement.style.left = '-24px';\n            this._hostElement.style.right = 'auto';\n        }\n        else {\n            this._hostElement.style.left = 'auto';\n            this._hostElement.style.right = '-24px';\n        }\n    }\n    _updateStaticStyles() {\n        this._hostElement.classList.toggle('mat-slider__right-input', !this._isLeftThumb);\n    }\n    _updateSibling() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        sibling._updateMinMax();\n        if (this._isActive) {\n            sibling._updateWidthActive();\n        }\n        else {\n            sibling._updateWidthInactive();\n        }\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n        this.value = value;\n        this._updateWidthInactive();\n        this._updateSibling();\n    }\n}\nMatSliderRangeThumb.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderRangeThumb, deps: [{ token: i0.NgZone }, { token: MAT_SLIDER }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatSliderRangeThumb.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatSliderRangeThumb, selector: \"input[matSliderStartThumb], input[matSliderEndThumb]\", providers: [\n        MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR,\n        { provide: MAT_SLIDER_RANGE_THUMB, useExisting: MatSliderRangeThumb },\n    ], exportAs: [\"matSliderRangeThumb\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderRangeThumb, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matSliderStartThumb], input[matSliderEndThumb]',\n                    exportAs: 'matSliderRangeThumb',\n                    providers: [\n                        MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR,\n                        { provide: MAT_SLIDER_RANGE_THUMB, useExisting: MatSliderRangeThumb },\n                    ],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_SLIDER]\n                    }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSliderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderModule, declarations: [MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb], imports: [MatCommonModule, CommonModule, MatRippleModule], exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb] });\nMatSliderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderModule, imports: [MatCommonModule, CommonModule, MatRippleModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CommonModule, MatRippleModule],\n                    exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb],\n                    declarations: [MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSlider, MatSliderChange, MatSliderModule, MatSliderRangeThumb, MatSliderThumb, MatSliderVisualThumb };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}