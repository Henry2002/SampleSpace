{"ast":null,"code":"import { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Used to generate unique ID for each accordion. */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\n\nclass CdkAccordion {\n  constructor() {\n    /** Emits when the state of the accordion changes */\n    this._stateChanges = new Subject();\n    /** Stream that emits true/false when openAll/closeAll is triggered. */\n\n    this._openCloseAllActions = new Subject();\n    /** A readonly id value to use for unique selection coordination. */\n\n    this.id = `cdk-accordion-${nextId$1++}`;\n    this._multi = false;\n  }\n  /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n\n\n  get multi() {\n    return this._multi;\n  }\n\n  set multi(multi) {\n    this._multi = coerceBooleanProperty(multi);\n  }\n  /** Opens all enabled accordion items in an accordion where multi is enabled. */\n\n\n  openAll() {\n    if (this._multi) {\n      this._openCloseAllActions.next(true);\n    }\n  }\n  /** Closes all enabled accordion items in an accordion where multi is enabled. */\n\n\n  closeAll() {\n    this._openCloseAllActions.next(false);\n  }\n\n  ngOnChanges(changes) {\n    this._stateChanges.next(changes);\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n\n    this._openCloseAllActions.complete();\n  }\n\n}\n\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) {\n  return new (t || CdkAccordion)();\n};\n\nCdkAccordion.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkAccordion,\n  selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]],\n  inputs: {\n    multi: \"multi\"\n  },\n  exportAs: [\"cdkAccordion\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CDK_ACCORDION,\n    useExisting: CdkAccordion\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\nCdkAccordion.propDecorators = {\n  multi: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-accordion, [cdkAccordion]',\n      exportAs: 'cdkAccordion',\n      providers: [{\n        provide: CDK_ACCORDION,\n        useExisting: CdkAccordion\n      }]\n    }]\n  }], function () {\n    return [];\n  }, {\n    multi: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Used to generate unique ID for each accordion item. */\n\n\nlet nextId = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\n\nclass CdkAccordionItem {\n  constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n    this.accordion = accordion;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._expansionDispatcher = _expansionDispatcher;\n    /** Subscription to openAll/closeAll events. */\n\n    this._openCloseAllSubscription = Subscription.EMPTY;\n    /** Event emitted every time the AccordionItem is closed. */\n\n    this.closed = new EventEmitter();\n    /** Event emitted every time the AccordionItem is opened. */\n\n    this.opened = new EventEmitter();\n    /** Event emitted when the AccordionItem is destroyed. */\n\n    this.destroyed = new EventEmitter();\n    /**\n     * Emits whenever the expanded state of the accordion changes.\n     * Primarily used to facilitate two-way binding.\n     * @docs-private\n     */\n\n    this.expandedChange = new EventEmitter();\n    /** The unique AccordionItem id. */\n\n    this.id = `cdk-accordion-child-${nextId++}`;\n    this._expanded = false;\n    this._disabled = false;\n    /** Unregister function for _expansionDispatcher. */\n\n    this._removeUniqueSelectionListener = () => {};\n\n    this._removeUniqueSelectionListener = _expansionDispatcher.listen((id, accordionId) => {\n      if (this.accordion && !this.accordion.multi && this.accordion.id === accordionId && this.id !== id) {\n        this.expanded = false;\n      }\n    }); // When an accordion item is hosted in an accordion, subscribe to open/close events.\n\n    if (this.accordion) {\n      this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n    }\n  }\n  /** Whether the AccordionItem is expanded. */\n\n\n  get expanded() {\n    return this._expanded;\n  }\n\n  set expanded(expanded) {\n    expanded = coerceBooleanProperty(expanded); // Only emit events and update the internal value if the value changes.\n\n    if (this._expanded !== expanded) {\n      this._expanded = expanded;\n      this.expandedChange.emit(expanded);\n\n      if (expanded) {\n        this.opened.emit();\n        /**\n         * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n         * the name value is the id of the accordion.\n         */\n\n        const accordionId = this.accordion ? this.accordion.id : this.id;\n\n        this._expansionDispatcher.notify(this.id, accordionId);\n      } else {\n        this.closed.emit();\n      } // Ensures that the animation will run when the value is set outside of an `@Input`.\n      // This includes cases like the open, close and toggle methods.\n\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Whether the AccordionItem is disabled. */\n\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(disabled) {\n    this._disabled = coerceBooleanProperty(disabled);\n  }\n  /** Emits an event for the accordion item being destroyed. */\n\n\n  ngOnDestroy() {\n    this.opened.complete();\n    this.closed.complete();\n    this.destroyed.emit();\n    this.destroyed.complete();\n\n    this._removeUniqueSelectionListener();\n\n    this._openCloseAllSubscription.unsubscribe();\n  }\n  /** Toggles the expanded state of the accordion item. */\n\n\n  toggle() {\n    if (!this.disabled) {\n      this.expanded = !this.expanded;\n    }\n  }\n  /** Sets the expanded state of the accordion item to false. */\n\n\n  close() {\n    if (!this.disabled) {\n      this.expanded = false;\n    }\n  }\n  /** Sets the expanded state of the accordion item to true. */\n\n\n  open() {\n    if (!this.disabled) {\n      this.expanded = true;\n    }\n  }\n\n  _subscribeToOpenCloseAllActions() {\n    return this.accordion._openCloseAllActions.subscribe(expanded => {\n      // Only change expanded state if item is enabled\n      if (!this.disabled) {\n        this.expanded = expanded;\n      }\n    });\n  }\n\n}\n\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) {\n  return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CDK_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher));\n};\n\nCdkAccordionItem.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkAccordionItem,\n  selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]],\n  inputs: {\n    expanded: \"expanded\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    closed: \"closed\",\n    opened: \"opened\",\n    destroyed: \"destroyed\",\n    expandedChange: \"expandedChange\"\n  },\n  exportAs: [\"cdkAccordionItem\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([// Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n  // registering to the same accordion.\n  {\n    provide: CDK_ACCORDION,\n    useValue: ɵ0\n  }])]\n});\n\nCdkAccordionItem.ctorParameters = () => [{\n  type: CdkAccordion,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [CDK_ACCORDION]\n  }, {\n    type: SkipSelf\n  }]\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: UniqueSelectionDispatcher\n}];\n\nCdkAccordionItem.propDecorators = {\n  closed: [{\n    type: Output\n  }],\n  opened: [{\n    type: Output\n  }],\n  destroyed: [{\n    type: Output\n  }],\n  expandedChange: [{\n    type: Output\n  }],\n  expanded: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-accordion-item, [cdkAccordionItem]',\n      exportAs: 'cdkAccordionItem',\n      providers: [// Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n      // registering to the same accordion.\n      {\n        provide: CDK_ACCORDION,\n        useValue: ɵ0\n      }]\n    }]\n  }], function () {\n    return [{\n      type: CdkAccordion,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CDK_ACCORDION]\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.UniqueSelectionDispatcher\n    }];\n  }, {\n    closed: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    destroyed: [{\n      type: Output\n    }],\n    expandedChange: [{\n      type: Output\n    }],\n    expanded: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass CdkAccordionModule {}\n\nCdkAccordionModule.ɵfac = function CdkAccordionModule_Factory(t) {\n  return new (t || CdkAccordionModule)();\n};\n\nCdkAccordionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: CdkAccordionModule\n});\nCdkAccordionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n    type: NgModule,\n    args: [{\n      exports: [CdkAccordion, CdkAccordionItem],\n      declarations: [CdkAccordion, CdkAccordionItem]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, {\n    declarations: [CdkAccordion, CdkAccordionItem],\n    exports: [CdkAccordion, CdkAccordionItem]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule, CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a };","map":{"version":3,"names":["InjectionToken","Directive","Input","EventEmitter","Optional","Inject","SkipSelf","ChangeDetectorRef","Output","NgModule","UniqueSelectionDispatcher","coerceBooleanProperty","Subject","Subscription","ɵngcc0","ɵngcc1","nextId$1","CDK_ACCORDION","CdkAccordion","constructor","_stateChanges","_openCloseAllActions","id","_multi","multi","openAll","next","closeAll","ngOnChanges","changes","ngOnDestroy","complete","ɵfac","CdkAccordion_Factory","t","ɵdir","ɵɵdefineDirective","type","selectors","inputs","exportAs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵNgOnChangesFeature","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","providers","nextId","ɵ0","undefined","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","expanded","_subscribeToOpenCloseAllActions","emit","notify","markForCheck","disabled","unsubscribe","toggle","close","open","subscribe","CdkAccordionItem_Factory","ɵɵdirectiveInject","outputs","useValue","ctorParameters","decorators","CdkAccordionModule","CdkAccordionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","ɵangular_material_src_cdk_accordion_accordion_a"],"sources":["C:/Users/Henry/Desktop/New folder/Atomas2/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js"],"sourcesContent":["import { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId$1++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() { return this._multi; }\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this._multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion',\n                providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Whether the AccordionItem is expanded. */\n    get expanded() { return this._expanded; }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CDK_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: ɵ0 },\n        ])] });\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: Inject, args: [CDK_ACCORDION,] }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                    // registering to the same accordion.\n                    { provide: CDK_ACCORDION, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_ACCORDION]\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵfac = function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); };\nCdkAccordionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule, CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}