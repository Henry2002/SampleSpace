{"ast":null,"code":"import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\n\nfunction CdkTextColumn_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n  }\n}\n\nfunction CdkTextColumn_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n  }\n}\n\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, SkipSelf, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\n\nfunction mixinHasStickyInput(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      this._sticky = false;\n      /** Whether the sticky input has changed since it was last checked. */\n\n      this._hasStickyChanged = false;\n    }\n    /** Whether sticky positioning should be applied. */\n\n\n    get sticky() {\n      return this._sticky;\n    }\n\n    set sticky(v) {\n      const prevValue = this._sticky;\n      this._sticky = coerceBooleanProperty(v);\n      this._hasStickyChanged = prevValue !== this._sticky;\n    }\n    /** Whether the sticky value has changed since this was last called. */\n\n\n    hasStickyChanged() {\n      const hasStickyChanged = this._hasStickyChanged;\n      this._hasStickyChanged = false;\n      return hasStickyChanged;\n    }\n    /** Resets the dirty check for cases where the sticky state has been used without checking. */\n\n\n    resetStickyChanged() {\n      this._hasStickyChanged = false;\n    }\n\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\n\n\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\n\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n\nclass CdkCellDef {\n  constructor(\n  /** @docs-private */\n  template) {\n    this.template = template;\n  }\n\n}\n\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) {\n  return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nCdkCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkCellDef,\n  selectors: [[\"\", \"cdkCellDef\", \"\"]]\n});\n\nCdkCellDef.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkCellDef]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n\n\nclass CdkHeaderCellDef {\n  constructor(\n  /** @docs-private */\n  template) {\n    this.template = template;\n  }\n\n}\n\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) {\n  return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nCdkHeaderCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkHeaderCellDef,\n  selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]]\n});\n\nCdkHeaderCellDef.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkHeaderCellDef]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n\n\nclass CdkFooterCellDef {\n  constructor(\n  /** @docs-private */\n  template) {\n    this.template = template;\n  }\n\n}\n\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) {\n  return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nCdkFooterCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkFooterCellDef,\n  selectors: [[\"\", \"cdkFooterCellDef\", \"\"]]\n});\n\nCdkFooterCellDef.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkFooterCellDef]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})(); // Boilerplate for applying mixins to CdkColumnDef.\n\n/** @docs-private */\n\n\nclass CdkColumnDefBase {}\n\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\n\n\nclass CdkColumnDef extends _CdkColumnDefBase {\n  constructor(_table) {\n    super();\n    this._table = _table;\n    this._stickyEnd = false;\n  }\n  /** Unique name for this column. */\n\n\n  get name() {\n    return this._name;\n  }\n\n  set name(name) {\n    this._setNameInput(name);\n  }\n  /**\n   * Whether this column should be sticky positioned on the end of the row. Should make sure\n   * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n   * has been changed.\n   */\n\n\n  get stickyEnd() {\n    return this._stickyEnd;\n  }\n\n  set stickyEnd(v) {\n    const prevValue = this._stickyEnd;\n    this._stickyEnd = coerceBooleanProperty(v);\n    this._hasStickyChanged = prevValue !== this._stickyEnd;\n  }\n  /**\n   * Overridable method that sets the css classes that will be added to every cell in this\n   * column.\n   * In the future, columnCssClassName will change from type string[] to string and this\n   * will set a single string value.\n   * @docs-private\n   */\n\n\n  _updateColumnCssClassName() {\n    this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n\n\n  _setNameInput(value) {\n    // If the directive is set without a name (updated programmatically), then this setter will\n    // trigger with an empty string and should not overwrite the programmatically set value.\n    if (value) {\n      this._name = value;\n      this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\n\n      this._updateColumnCssClassName();\n    }\n  }\n\n}\n\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) {\n  return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8));\n};\n\nCdkColumnDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkColumnDef,\n  selectors: [[\"\", \"cdkColumnDef\", \"\"]],\n  contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    }\n  },\n  inputs: {\n    sticky: \"sticky\",\n    name: [\"cdkColumnDef\", \"name\"],\n    stickyEnd: \"stickyEnd\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n    useExisting: CdkColumnDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nCdkColumnDef.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [CDK_TABLE]\n  }, {\n    type: Optional\n  }]\n}];\n\nCdkColumnDef.propDecorators = {\n  name: [{\n    type: Input,\n    args: ['cdkColumnDef']\n  }],\n  stickyEnd: [{\n    type: Input,\n    args: ['stickyEnd']\n  }],\n  cell: [{\n    type: ContentChild,\n    args: [CdkCellDef]\n  }],\n  headerCell: [{\n    type: ContentChild,\n    args: [CdkHeaderCellDef]\n  }],\n  footerCell: [{\n    type: ContentChild,\n    args: [CdkFooterCellDef]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkColumnDef]',\n      inputs: ['sticky'],\n      providers: [{\n        provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n        useExisting: CdkColumnDef\n      }]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CDK_TABLE]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    name: [{\n      type: Input,\n      args: ['cdkColumnDef']\n    }],\n    stickyEnd: [{\n      type: Input,\n      args: ['stickyEnd']\n    }],\n    cell: [{\n      type: ContentChild,\n      args: [CdkCellDef]\n    }],\n    headerCell: [{\n      type: ContentChild,\n      args: [CdkHeaderCellDef]\n    }],\n    footerCell: [{\n      type: ContentChild,\n      args: [CdkFooterCellDef]\n    }]\n  });\n})();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\n\n\nclass BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n    // with destructuring.\n    const classList = elementRef.nativeElement.classList;\n\n    for (const className of columnDef._columnCssClassName) {\n      classList.add(className);\n    }\n  }\n\n}\n/** Header cell template container that adds the right classes and role. */\n\n\nclass CdkHeaderCell extends BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    super(columnDef, elementRef);\n  }\n\n}\n\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) {\n  return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nCdkHeaderCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkHeaderCell,\n  selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]],\n  hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nCdkHeaderCell.ctorParameters = () => [{\n  type: CdkColumnDef\n}, {\n  type: ElementRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-header-cell, th[cdk-header-cell]',\n      host: {\n        'class': 'cdk-header-cell',\n        'role': 'columnheader'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/** Footer cell template container that adds the right classes and role. */\n\n\nclass CdkFooterCell extends BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    super(columnDef, elementRef);\n  }\n\n}\n\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) {\n  return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nCdkFooterCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkFooterCell,\n  selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]],\n  hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nCdkFooterCell.ctorParameters = () => [{\n  type: CdkColumnDef\n}, {\n  type: ElementRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n      host: {\n        'class': 'cdk-footer-cell',\n        'role': 'gridcell'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/** Cell template container that adds the right classes and role. */\n\n\nclass CdkCell extends BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    super(columnDef, elementRef);\n  }\n\n}\n\nCdkCell.ɵfac = function CdkCell_Factory(t) {\n  return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nCdkCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkCell,\n  selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]],\n  hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nCdkCell.ctorParameters = () => [{\n  type: CdkColumnDef\n}, {\n  type: ElementRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-cell, td[cdk-cell]',\n      host: {\n        'class': 'cdk-cell',\n        'role': 'gridcell'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @docs-private\n */\n\n\nclass _Schedule {\n  constructor() {\n    this.tasks = [];\n    this.endTasks = [];\n  }\n\n}\n/** Injection token used to provide a coalesced style scheduler. */\n\n\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\n\n\nclass _CoalescedStyleScheduler {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n    this._currentSchedule = null;\n    this._destroyed = new Subject();\n  }\n  /**\n   * Schedules the specified task to run at the end of the current VM turn.\n   */\n\n\n  schedule(task) {\n    this._createScheduleIfNeeded();\n\n    this._currentSchedule.tasks.push(task);\n  }\n  /**\n   * Schedules the specified task to run after other scheduled tasks at the end of the current\n   * VM turn.\n   */\n\n\n  scheduleEnd(task) {\n    this._createScheduleIfNeeded();\n\n    this._currentSchedule.endTasks.push(task);\n  }\n  /** Prevent any further tasks from running. */\n\n\n  ngOnDestroy() {\n    this._destroyed.next();\n\n    this._destroyed.complete();\n  }\n\n  _createScheduleIfNeeded() {\n    if (this._currentSchedule) {\n      return;\n    }\n\n    this._currentSchedule = new _Schedule();\n\n    this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n      while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n        const schedule = this._currentSchedule; // Capture new tasks scheduled by the current set of tasks.\n\n        this._currentSchedule = new _Schedule();\n\n        for (const task of schedule.tasks) {\n          task();\n        }\n\n        for (const task of schedule.endTasks) {\n          task();\n        }\n      }\n\n      this._currentSchedule = null;\n    });\n  }\n\n  _getScheduleObservable() {\n    // Use onStable when in the context of an ongoing change detection cycle so that we\n    // do not accidentally trigger additional cycles.\n    return this._ngZone.isStable ? from(Promise.resolve(undefined)) : this._ngZone.onStable.pipe(take(1));\n  }\n\n}\n\n_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) {\n  return new (t || _CoalescedStyleScheduler)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\n_CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: _CoalescedStyleScheduler,\n  factory: _CoalescedStyleScheduler.ɵfac\n});\n\n_CoalescedStyleScheduler.ctorParameters = () => [{\n  type: NgZone\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\n\n\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\n\nclass BaseRowDef {\n  constructor(\n  /** @docs-private */\n  template, _differs) {\n    this.template = template;\n    this._differs = _differs;\n  }\n\n  ngOnChanges(changes) {\n    // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n    // of the columns property or an empty array if none is provided.\n    if (!this._columnsDiffer) {\n      const columns = changes['columns'] && changes['columns'].currentValue || [];\n      this._columnsDiffer = this._differs.find(columns).create();\n\n      this._columnsDiffer.diff(columns);\n    }\n  }\n  /**\n   * Returns the difference between the current columns and the columns from the last diff, or null\n   * if there is no difference.\n   */\n\n\n  getColumnsDiff() {\n    return this._columnsDiffer.diff(this.columns);\n  }\n  /** Gets this row def's relevant cell template from the provided column def. */\n\n\n  extractCellTemplate(column) {\n    if (this instanceof CdkHeaderRowDef) {\n      return column.headerCell.template;\n    }\n\n    if (this instanceof CdkFooterRowDef) {\n      return column.footerCell.template;\n    } else {\n      return column.cell.template;\n    }\n  }\n\n}\n\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) {\n  return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers));\n};\n\nBaseRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: BaseRowDef,\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nBaseRowDef.ctorParameters = () => [{\n  type: TemplateRef\n}, {\n  type: IterableDiffers\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.IterableDiffers\n    }];\n  }, null);\n})(); // Boilerplate for applying mixins to CdkHeaderRowDef.\n\n/** @docs-private */\n\n\nclass CdkHeaderRowDefBase extends BaseRowDef {}\n\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\n\n\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n  constructor(template, _differs, _table) {\n    super(template, _differs);\n    this._table = _table;\n  } // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n  // Explicitly define it so that the method is called as part of the Angular lifecycle.\n\n\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n  }\n\n}\n\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) {\n  return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8));\n};\n\nCdkHeaderRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkHeaderRowDef,\n  selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]],\n  inputs: {\n    columns: [\"cdkHeaderRowDef\", \"columns\"],\n    sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"]\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nCdkHeaderRowDef.ctorParameters = () => [{\n  type: TemplateRef\n}, {\n  type: IterableDiffers\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [CDK_TABLE]\n  }, {\n    type: Optional\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkHeaderRowDef]',\n      inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.IterableDiffers\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CDK_TABLE]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})(); // Boilerplate for applying mixins to CdkFooterRowDef.\n\n/** @docs-private */\n\n\nclass CdkFooterRowDefBase extends BaseRowDef {}\n\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\n\n\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n  constructor(template, _differs, _table) {\n    super(template, _differs);\n    this._table = _table;\n  } // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n  // Explicitly define it so that the method is called as part of the Angular lifecycle.\n\n\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n  }\n\n}\n\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) {\n  return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8));\n};\n\nCdkFooterRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkFooterRowDef,\n  selectors: [[\"\", \"cdkFooterRowDef\", \"\"]],\n  inputs: {\n    columns: [\"cdkFooterRowDef\", \"columns\"],\n    sticky: [\"cdkFooterRowDefSticky\", \"sticky\"]\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nCdkFooterRowDef.ctorParameters = () => [{\n  type: TemplateRef\n}, {\n  type: IterableDiffers\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [CDK_TABLE]\n  }, {\n    type: Optional\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkFooterRowDef]',\n      inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.IterableDiffers\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CDK_TABLE]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n\n\nclass CdkRowDef extends BaseRowDef {\n  // TODO(andrewseguin): Add an input for providing a switch function to determine\n  //   if this template should be used.\n  constructor(template, _differs, _table) {\n    super(template, _differs);\n    this._table = _table;\n  }\n\n}\n\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) {\n  return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8));\n};\n\nCdkRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkRowDef,\n  selectors: [[\"\", \"cdkRowDef\", \"\"]],\n  inputs: {\n    columns: [\"cdkRowDefColumns\", \"columns\"],\n    when: [\"cdkRowDefWhen\", \"when\"]\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nCdkRowDef.ctorParameters = () => [{\n  type: TemplateRef\n}, {\n  type: IterableDiffers\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [CDK_TABLE]\n  }, {\n    type: Optional\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkRowDef]',\n      inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.IterableDiffers\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CDK_TABLE]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\n\n\nclass CdkCellOutlet {\n  constructor(_viewContainer) {\n    this._viewContainer = _viewContainer;\n    CdkCellOutlet.mostRecentCellOutlet = this;\n  }\n\n  ngOnDestroy() {\n    // If this was the last outlet being rendered in the view, remove the reference\n    // from the static property after it has been destroyed to avoid leaking memory.\n    if (CdkCellOutlet.mostRecentCellOutlet === this) {\n      CdkCellOutlet.mostRecentCellOutlet = null;\n    }\n  }\n\n}\n\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) {\n  return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n};\n\nCdkCellOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkCellOutlet,\n  selectors: [[\"\", \"cdkCellOutlet\", \"\"]]\n});\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\n\nCdkCellOutlet.mostRecentCellOutlet = null;\n\nCdkCellOutlet.ctorParameters = () => [{\n  type: ViewContainerRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkCellOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }];\n  }, null);\n})();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\n\n\nclass CdkHeaderRow {}\n\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) {\n  return new (t || CdkHeaderRow)();\n};\n\nCdkHeaderRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkHeaderRow,\n  selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function CdkHeaderRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  dependencies: [CdkCellOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-header-row, tr[cdk-header-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-header-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, null);\n})();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n\n\nclass CdkFooterRow {}\n\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) {\n  return new (t || CdkFooterRow)();\n};\n\nCdkFooterRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkFooterRow,\n  selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function CdkFooterRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  dependencies: [CdkCellOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-footer-row, tr[cdk-footer-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-footer-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, null);\n})();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\n\n\nclass CdkRow {}\n\nCdkRow.ɵfac = function CdkRow_Factory(t) {\n  return new (t || CdkRow)();\n};\n\nCdkRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkRow,\n  selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function CdkRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  dependencies: [CdkCellOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-row, tr[cdk-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, null);\n})();\n/** Row that can be used to display a message when no data is shown in the table. */\n\n\nclass CdkNoDataRow {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) {\n  return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nCdkNoDataRow.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkNoDataRow,\n  selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]]\n});\n\nCdkNoDataRow.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[cdkNoDataRow]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\n\n\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\n\nclass StickyStyler {\n  /**\n   * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n   *     that uses the native `<table>` element.\n   * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n   *     sticky positioning applied.\n   * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n   *     by reversing left/right positions.\n   * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n   * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n   *     using inline styles. If false, it is assumed that position: sticky is included in\n   *     the component stylesheet for _stickCellCss.\n   * @param _positionListener A listener that is notified of changes to sticky rows/columns\n   *     and their dimensions.\n   */\n  constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n    this._isNativeHtmlTable = _isNativeHtmlTable;\n    this._stickCellCss = _stickCellCss;\n    this.direction = direction;\n    this._coalescedStyleScheduler = _coalescedStyleScheduler;\n    this._isBrowser = _isBrowser;\n    this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n    this._positionListener = _positionListener;\n    this._cachedCellWidths = [];\n    this._borderCellCss = {\n      'top': `${_stickCellCss}-border-elem-top`,\n      'bottom': `${_stickCellCss}-border-elem-bottom`,\n      'left': `${_stickCellCss}-border-elem-left`,\n      'right': `${_stickCellCss}-border-elem-right`\n    };\n  }\n  /**\n   * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n   * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n   * @param rows The list of rows that should be cleared from sticking in the provided directions\n   * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n   */\n\n\n  clearStickyPositioning(rows, stickyDirections) {\n    const elementsToClear = [];\n\n    for (const row of rows) {\n      // If the row isn't an element (e.g. if it's an `ng-container`),\n      // it won't have inline styles or `children` so we skip it.\n      if (row.nodeType !== row.ELEMENT_NODE) {\n        continue;\n      }\n\n      elementsToClear.push(row);\n\n      for (let i = 0; i < row.children.length; i++) {\n        elementsToClear.push(row.children[i]);\n      }\n    } // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n\n\n    this._coalescedStyleScheduler.schedule(() => {\n      for (const element of elementsToClear) {\n        this._removeStickyStyle(element, stickyDirections);\n      }\n    });\n  }\n  /**\n   * Applies sticky left and right positions to the cells of each row according to the sticky\n   * states of the rendered column definitions.\n   * @param rows The rows that should have its set of cells stuck according to the sticky states.\n   * @param stickyStartStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the start of the row.\n   * @param stickyEndStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the end of the row.\n   * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n   *     column cell. If `false` cached widths will be used instead.\n   */\n\n\n  updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n    if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n      if (this._positionListener) {\n        this._positionListener.stickyColumnsUpdated({\n          sizes: []\n        });\n\n        this._positionListener.stickyEndColumnsUpdated({\n          sizes: []\n        });\n      }\n\n      return;\n    }\n\n    const firstRow = rows[0];\n    const numCells = firstRow.children.length;\n\n    const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n\n    const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n\n    const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n\n    const lastStickyStart = stickyStartStates.lastIndexOf(true);\n    const firstStickyEnd = stickyEndStates.indexOf(true); // Coalesce with sticky row updates (and potentially other changes like column resize).\n\n    this._coalescedStyleScheduler.schedule(() => {\n      const isRtl = this.direction === 'rtl';\n      const start = isRtl ? 'right' : 'left';\n      const end = isRtl ? 'left' : 'right';\n\n      for (const row of rows) {\n        for (let i = 0; i < numCells; i++) {\n          const cell = row.children[i];\n\n          if (stickyStartStates[i]) {\n            this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n          }\n\n          if (stickyEndStates[i]) {\n            this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n          }\n        }\n      }\n\n      if (this._positionListener) {\n        this._positionListener.stickyColumnsUpdated({\n          sizes: lastStickyStart === -1 ? [] : cellWidths.slice(0, lastStickyStart + 1).map((width, index) => stickyStartStates[index] ? width : null)\n        });\n\n        this._positionListener.stickyEndColumnsUpdated({\n          sizes: firstStickyEnd === -1 ? [] : cellWidths.slice(firstStickyEnd).map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null).reverse()\n        });\n      }\n    });\n  }\n  /**\n   * Applies sticky positioning to the row's cells if using the native table layout, and to the\n   * row itself otherwise.\n   * @param rowsToStick The list of rows that should be stuck according to their corresponding\n   *     sticky state and to the provided top or bottom position.\n   * @param stickyStates A list of boolean states where each state represents whether the row\n   *     should be stuck in the particular top or bottom position.\n   * @param position The position direction in which the row should be stuck if that row should be\n   *     sticky.\n   *\n   */\n\n\n  stickRows(rowsToStick, stickyStates, position) {\n    // Since we can't measure the rows on the server, we can't stick the rows properly.\n    if (!this._isBrowser) {\n      return;\n    } // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n    // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n    // sticky states need to be reversed as well.\n\n\n    const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n    const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates; // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n\n    const stickyOffsets = [];\n    const stickyCellHeights = [];\n    const elementsToStick = [];\n\n    for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n      if (!states[rowIndex]) {\n        continue;\n      }\n\n      stickyOffsets[rowIndex] = stickyOffset;\n      const row = rows[rowIndex];\n      elementsToStick[rowIndex] = this._isNativeHtmlTable ? Array.from(row.children) : [row];\n      const height = row.getBoundingClientRect().height;\n      stickyOffset += height;\n      stickyCellHeights[rowIndex] = height;\n    }\n\n    const borderedRowIndex = states.lastIndexOf(true); // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n    // (and potentially other changes like column resize).\n\n    this._coalescedStyleScheduler.schedule(() => {\n      var _a, _b;\n\n      for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        if (!states[rowIndex]) {\n          continue;\n        }\n\n        const offset = stickyOffsets[rowIndex];\n        const isBorderedRowIndex = rowIndex === borderedRowIndex;\n\n        for (const element of elementsToStick[rowIndex]) {\n          this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n        }\n      }\n\n      if (position === 'top') {\n        (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({\n          sizes: stickyCellHeights,\n          offsets: stickyOffsets,\n          elements: elementsToStick\n        });\n      } else {\n        (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({\n          sizes: stickyCellHeights,\n          offsets: stickyOffsets,\n          elements: elementsToStick\n        });\n      }\n    });\n  }\n  /**\n   * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n   * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n   * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n   * the tfoot element.\n   */\n\n\n  updateStickyFooterContainer(tableElement, stickyStates) {\n    if (!this._isNativeHtmlTable) {\n      return;\n    }\n\n    const tfoot = tableElement.querySelector('tfoot'); // Coalesce with other sticky updates (and potentially other changes like column resize).\n\n    this._coalescedStyleScheduler.schedule(() => {\n      if (stickyStates.some(state => !state)) {\n        this._removeStickyStyle(tfoot, ['bottom']);\n      } else {\n        this._addStickyStyle(tfoot, 'bottom', 0, false);\n      }\n    });\n  }\n  /**\n   * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n   * the zIndex, removing each of the provided sticky directions, and removing the\n   * sticky position if there are no more directions.\n   */\n\n\n  _removeStickyStyle(element, stickyDirections) {\n    for (const dir of stickyDirections) {\n      element.style[dir] = '';\n      element.classList.remove(this._borderCellCss[dir]);\n    } // If the element no longer has any more sticky directions, remove sticky positioning and\n    // the sticky CSS class.\n    // Short-circuit checking element.style[dir] for stickyDirections as they\n    // were already removed above.\n\n\n    const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n\n    if (hasDirection) {\n      element.style.zIndex = this._getCalculatedZIndex(element);\n    } else {\n      // When not hasDirection, _getCalculatedZIndex will always return ''.\n      element.style.zIndex = '';\n\n      if (this._needsPositionStickyOnElement) {\n        element.style.position = '';\n      }\n\n      element.classList.remove(this._stickCellCss);\n    }\n  }\n  /**\n   * Adds the sticky styling to the element by adding the sticky style class, changing position\n   * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n   * direction and value.\n   */\n\n\n  _addStickyStyle(element, dir, dirValue, isBorderElement) {\n    element.classList.add(this._stickCellCss);\n\n    if (isBorderElement) {\n      element.classList.add(this._borderCellCss[dir]);\n    }\n\n    element.style[dir] = `${dirValue}px`;\n    element.style.zIndex = this._getCalculatedZIndex(element);\n\n    if (this._needsPositionStickyOnElement) {\n      element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n    }\n  }\n  /**\n   * Calculate what the z-index should be for the element, depending on what directions (top,\n   * bottom, left, right) have been set. It should be true that elements with a top direction\n   * should have the highest index since these are elements like a table header. If any of those\n   * elements are also sticky in another direction, then they should appear above other elements\n   * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n   * (e.g. footer rows) should then be next in the ordering such that they are below the header\n   * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n   * should minimally increment so that they are above non-sticky elements but below top and bottom\n   * elements.\n   */\n\n\n  _getCalculatedZIndex(element) {\n    const zIndexIncrements = {\n      top: 100,\n      bottom: 10,\n      left: 1,\n      right: 1\n    };\n    let zIndex = 0; // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n    // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n    // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n\n    for (const dir of STICKY_DIRECTIONS) {\n      if (element.style[dir]) {\n        zIndex += zIndexIncrements[dir];\n      }\n    }\n\n    return zIndex ? `${zIndex}` : '';\n  }\n  /** Gets the widths for each cell in the provided row. */\n\n\n  _getCellWidths(row, recalculateCellWidths = true) {\n    if (!recalculateCellWidths && this._cachedCellWidths.length) {\n      return this._cachedCellWidths;\n    }\n\n    const cellWidths = [];\n    const firstRowCells = row.children;\n\n    for (let i = 0; i < firstRowCells.length; i++) {\n      let cell = firstRowCells[i];\n      cellWidths.push(cell.getBoundingClientRect().width);\n    }\n\n    this._cachedCellWidths = cellWidths;\n    return cellWidths;\n  }\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n\n\n  _getStickyStartColumnPositions(widths, stickyStates) {\n    const positions = [];\n    let nextPosition = 0;\n\n    for (let i = 0; i < widths.length; i++) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n\n    return positions;\n  }\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n\n\n  _getStickyEndColumnPositions(widths, stickyStates) {\n    const positions = [];\n    let nextPosition = 0;\n\n    for (let i = widths.length; i > 0; i--) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n\n    return positions;\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\n\n\nfunction getTableUnknownColumnError(id) {\n  return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\n\n\nfunction getTableDuplicateColumnNameError(name) {\n  return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\n\n\nfunction getTableMultipleDefaultRowDefsError() {\n  return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\n\n\nfunction getTableMissingMatchingRowDefError(data) {\n  return Error(`Could not find a matching row definition for the` + `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\n\n\nfunction getTableMissingRowDefsError() {\n  return Error('Missing definitions for header, footer, and row; ' + 'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\n\n\nfunction getTableUnknownDataSourceError() {\n  return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\n\n\nfunction getTableTextColumnMissingParentTableError() {\n  return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\n\n\nfunction getTableTextColumnMissingNameError() {\n  return Error(`Table text column must have a name.`);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** The injection token used to specify the StickyPositioningListener. */\n\n\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\n\nclass CdkRecycleRows {}\n\nCdkRecycleRows.ɵfac = function CdkRecycleRows_Factory(t) {\n  return new (t || CdkRecycleRows)();\n};\n\nCdkRecycleRows.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkRecycleRows,\n  selectors: [[\"cdk-table\", \"recycleRows\", \"\"], [\"table\", \"cdk-table\", \"\", \"recycleRows\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: _VIEW_REPEATER_STRATEGY,\n    useClass: _RecycleViewRepeaterStrategy\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRecycleRows, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n      providers: [{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\n\n\nclass DataRowOutlet {\n  constructor(viewContainer, elementRef) {\n    this.viewContainer = viewContainer;\n    this.elementRef = elementRef;\n  }\n\n}\n\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) {\n  return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nDataRowOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DataRowOutlet,\n  selectors: [[\"\", \"rowOutlet\", \"\"]]\n});\n\nDataRowOutlet.ctorParameters = () => [{\n  type: ViewContainerRef\n}, {\n  type: ElementRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[rowOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\n\n\nclass HeaderRowOutlet {\n  constructor(viewContainer, elementRef) {\n    this.viewContainer = viewContainer;\n    this.elementRef = elementRef;\n  }\n\n}\n\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) {\n  return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nHeaderRowOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: HeaderRowOutlet,\n  selectors: [[\"\", \"headerRowOutlet\", \"\"]]\n});\n\nHeaderRowOutlet.ctorParameters = () => [{\n  type: ViewContainerRef\n}, {\n  type: ElementRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[headerRowOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\n\n\nclass FooterRowOutlet {\n  constructor(viewContainer, elementRef) {\n    this.viewContainer = viewContainer;\n    this.elementRef = elementRef;\n  }\n\n}\n\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) {\n  return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nFooterRowOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: FooterRowOutlet,\n  selectors: [[\"\", \"footerRowOutlet\", \"\"]]\n});\n\nFooterRowOutlet.ctorParameters = () => [{\n  type: ViewContainerRef\n}, {\n  type: ElementRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[footerRowOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\n\n\nclass NoDataRowOutlet {\n  constructor(viewContainer, elementRef) {\n    this.viewContainer = viewContainer;\n    this.elementRef = elementRef;\n  }\n\n}\n\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) {\n  return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNoDataRowOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: NoDataRowOutlet,\n  selectors: [[\"\", \"noDataRowOutlet\", \"\"]]\n});\n\nNoDataRowOutlet.ctorParameters = () => [{\n  type: ViewContainerRef\n}, {\n  type: ElementRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[noDataRowOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\n\n\nconst CDK_TABLE_TEMPLATE = // Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\n\nclass RowViewRef extends EmbeddedViewRef {}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\n\n\nclass CdkTable {\n  constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler,\n  /**\n   * @deprecated `_stickyPositioningListener` parameter to become required.\n   * @breaking-change 13.0.0\n   */\n  _stickyPositioningListener) {\n    this._differs = _differs;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    this._platform = _platform;\n    this._viewRepeater = _viewRepeater;\n    this._coalescedStyleScheduler = _coalescedStyleScheduler;\n    this._viewportRuler = _viewportRuler;\n    this._stickyPositioningListener = _stickyPositioningListener;\n    /** Subject that emits when the component has been destroyed. */\n\n    this._onDestroy = new Subject();\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     */\n\n    this._columnDefsByName = new Map();\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     */\n\n    this._customColumnDefs = new Set();\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     */\n\n    this._customRowDefs = new Set();\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     */\n\n    this._customHeaderRowDefs = new Set();\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     */\n\n    this._customFooterRowDefs = new Set();\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     */\n\n    this._headerRowDefChanged = true;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     */\n\n    this._footerRowDefChanged = true;\n    /**\n     * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n     * change.\n     */\n\n    this._stickyColumnStylesNeedReset = true;\n    /**\n     * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n     * `false`, cached values will be used instead. This is only applicable to tables with\n     * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n     */\n\n    this._forceRecalculateCellWidths = true;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     */\n\n    this._cachedRenderRowsMap = new Map();\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     */\n\n    this.stickyCssClass = 'cdk-table-sticky';\n    /**\n     * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n     * the position is set in a selector associated with the value of stickyCssClass. May be\n     * overridden by table subclasses\n     */\n\n    this.needsPositionStickyOnElement = true;\n    /** Whether the no data row is currently showing anything. */\n\n    this._isShowingNoDataRow = false;\n    this._multiTemplateDataRows = false;\n    this._fixedLayout = false; // TODO(andrewseguin): Remove max value as the end index\n    //   and instead calculate the view on init and scroll.\n\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * @docs-private\n     */\n\n    this.viewChange = new BehaviorSubject({\n      start: 0,\n      end: Number.MAX_VALUE\n    });\n\n    if (!role) {\n      this._elementRef.nativeElement.setAttribute('role', 'grid');\n    }\n\n    this._document = _document;\n    this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n  }\n  /**\n   * Tracking function that will be used to check the differences in data changes. Used similarly\n   * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n   * relative to the function to know if a row should be added/removed/moved.\n   * Accepts a function that takes two parameters, `index` and `item`.\n   */\n\n\n  get trackBy() {\n    return this._trackByFn;\n  }\n\n  set trackBy(fn) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n      console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n\n    this._trackByFn = fn;\n  }\n  /**\n   * The table's source of data, which can be provided in three ways (in order of complexity):\n   *   - Simple data array (each object represents one table row)\n   *   - Stream that emits a data array each time the array changes\n   *   - `DataSource` object that implements the connect/disconnect interface.\n   *\n   * If a data array is provided, the table must be notified when the array's objects are\n   * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n   * render the diff since the last table render. If the data array reference is changed, the table\n   * will automatically trigger an update to the rows.\n   *\n   * When providing an Observable stream, the table will trigger an update automatically when the\n   * stream emits a new array of data.\n   *\n   * Finally, when providing a `DataSource` object, the table will use the Observable stream\n   * provided by the connect function and trigger updates when that stream emits new data array\n   * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n   * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n   * subscriptions registered during the connect process).\n   */\n\n\n  get dataSource() {\n    return this._dataSource;\n  }\n\n  set dataSource(dataSource) {\n    if (this._dataSource !== dataSource) {\n      this._switchDataSource(dataSource);\n    }\n  }\n  /**\n   * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n   * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n   * dataobject will render the first row that evaluates its when predicate to true, in the order\n   * defined in the table, or otherwise the default row which does not have a when predicate.\n   */\n\n\n  get multiTemplateDataRows() {\n    return this._multiTemplateDataRows;\n  }\n\n  set multiTemplateDataRows(v) {\n    this._multiTemplateDataRows = coerceBooleanProperty(v); // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n    // this setter will be invoked before the row outlet has been defined hence the null check.\n\n    if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n      this._forceRenderDataRows();\n\n      this.updateStickyColumnStyles();\n    }\n  }\n  /**\n   * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n   * and optimize rendering sticky styles for native tables. No-op for flex tables.\n   */\n\n\n  get fixedLayout() {\n    return this._fixedLayout;\n  }\n\n  set fixedLayout(v) {\n    this._fixedLayout = coerceBooleanProperty(v); // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n\n    this._forceRecalculateCellWidths = true;\n    this._stickyColumnStylesNeedReset = true;\n  }\n\n  ngOnInit() {\n    this._setupStickyStyler();\n\n    if (this._isNativeHtmlTable) {\n      this._applyNativeTableSections();\n    } // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n    // the user has provided a custom trackBy, return the result of that function as evaluated\n    // with the values of the `RenderRow`'s data and index.\n\n\n    this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n      return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n    });\n\n    this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      this._forceRecalculateCellWidths = true;\n    });\n  }\n\n  ngAfterContentChecked() {\n    // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n    this._cacheRowDefs();\n\n    this._cacheColumnDefs(); // Make sure that the user has at least added header, footer, or data row def.\n\n\n    if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMissingRowDefsError();\n    } // Render updates if the list of columns have been changed for the header, row, or footer defs.\n\n\n    const columnsChanged = this._renderUpdatedColumns();\n\n    const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged; // Ensure sticky column styles are reset if set to `true` elsewhere.\n\n    this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n    this._forceRecalculateCellWidths = rowDefsChanged; // If the header row definition has been changed, trigger a render to the header row.\n\n    if (this._headerRowDefChanged) {\n      this._forceRenderHeaderRows();\n\n      this._headerRowDefChanged = false;\n    } // If the footer row definition has been changed, trigger a render to the footer row.\n\n\n    if (this._footerRowDefChanged) {\n      this._forceRenderFooterRows();\n\n      this._footerRowDefChanged = false;\n    } // If there is a data source and row definitions, connect to the data source unless a\n    // connection has already been made.\n\n\n    if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n      this._observeRenderChanges();\n    } else if (this._stickyColumnStylesNeedReset) {\n      // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n      // called when it row data arrives. Otherwise, we need to call it proactively.\n      this.updateStickyColumnStyles();\n    }\n\n    this._checkStickyStates();\n  }\n\n  ngOnDestroy() {\n    this._rowOutlet.viewContainer.clear();\n\n    this._noDataRowOutlet.viewContainer.clear();\n\n    this._headerRowOutlet.viewContainer.clear();\n\n    this._footerRowOutlet.viewContainer.clear();\n\n    this._cachedRenderRowsMap.clear();\n\n    this._onDestroy.next();\n\n    this._onDestroy.complete();\n\n    if (isDataSource(this.dataSource)) {\n      this.dataSource.disconnect(this);\n    }\n  }\n  /**\n   * Renders rows based on the table's latest set of data, which was either provided directly as an\n   * input or retrieved through an Observable stream (directly or from a DataSource).\n   * Checks for differences in the data since the last diff to perform only the necessary\n   * changes (add/remove/move rows).\n   *\n   * If the table's data source is a DataSource or Observable, this will be invoked automatically\n   * each time the provided Observable stream emits a new data array. Otherwise if your data is\n   * an array, this function will need to be called to render any changes.\n   */\n\n\n  renderRows() {\n    this._renderRows = this._getAllRenderRows();\n\n    const changes = this._dataDiffer.diff(this._renderRows);\n\n    if (!changes) {\n      this._updateNoDataRow();\n\n      return;\n    }\n\n    const viewContainer = this._rowOutlet.viewContainer;\n\n    this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, change => {\n      if (change.operation === 1\n      /* INSERTED */\n      && change.context) {\n        this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n      }\n    }); // Update the meta context of a row's context data (index, count, first, last, ...)\n\n\n    this._updateRowIndexContext(); // Update rows that did not get added/removed/moved but may have had their identity changed,\n    // e.g. if trackBy matched data on some property but the actual data reference changed.\n\n\n    changes.forEachIdentityChange(record => {\n      const rowView = viewContainer.get(record.currentIndex);\n      rowView.context.$implicit = record.item.data;\n    });\n\n    this._updateNoDataRow();\n\n    this.updateStickyColumnStyles();\n  }\n  /** Adds a column definition that was not included as part of the content children. */\n\n\n  addColumnDef(columnDef) {\n    this._customColumnDefs.add(columnDef);\n  }\n  /** Removes a column definition that was not included as part of the content children. */\n\n\n  removeColumnDef(columnDef) {\n    this._customColumnDefs.delete(columnDef);\n  }\n  /** Adds a row definition that was not included as part of the content children. */\n\n\n  addRowDef(rowDef) {\n    this._customRowDefs.add(rowDef);\n  }\n  /** Removes a row definition that was not included as part of the content children. */\n\n\n  removeRowDef(rowDef) {\n    this._customRowDefs.delete(rowDef);\n  }\n  /** Adds a header row definition that was not included as part of the content children. */\n\n\n  addHeaderRowDef(headerRowDef) {\n    this._customHeaderRowDefs.add(headerRowDef);\n\n    this._headerRowDefChanged = true;\n  }\n  /** Removes a header row definition that was not included as part of the content children. */\n\n\n  removeHeaderRowDef(headerRowDef) {\n    this._customHeaderRowDefs.delete(headerRowDef);\n\n    this._headerRowDefChanged = true;\n  }\n  /** Adds a footer row definition that was not included as part of the content children. */\n\n\n  addFooterRowDef(footerRowDef) {\n    this._customFooterRowDefs.add(footerRowDef);\n\n    this._footerRowDefChanged = true;\n  }\n  /** Removes a footer row definition that was not included as part of the content children. */\n\n\n  removeFooterRowDef(footerRowDef) {\n    this._customFooterRowDefs.delete(footerRowDef);\n\n    this._footerRowDefChanged = true;\n  }\n  /** Sets a no data row definition that was not included as a part of the content children. */\n\n\n  setNoDataRow(noDataRow) {\n    this._customNoDataRow = noDataRow;\n  }\n  /**\n   * Updates the header sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n   * automatically called when the header row changes its displayed set of columns, or if its\n   * sticky input changes. May be called manually for cases where the cell content changes outside\n   * of these events.\n   */\n\n\n  updateStickyHeaderRowStyles() {\n    const headerRows = this._getRenderedRows(this._headerRowOutlet);\n\n    const tableElement = this._elementRef.nativeElement; // Hide the thead element if there are no header rows. This is necessary to satisfy\n    // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n    // required child `row`.\n\n    const thead = tableElement.querySelector('thead');\n\n    if (thead) {\n      thead.style.display = headerRows.length ? '' : 'none';\n    }\n\n    const stickyStates = this._headerRowDefs.map(def => def.sticky);\n\n    this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n\n    this._stickyStyler.stickRows(headerRows, stickyStates, 'top'); // Reset the dirty state of the sticky input change since it has been used.\n\n\n    this._headerRowDefs.forEach(def => def.resetStickyChanged());\n  }\n  /**\n   * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n   * automatically called when the footer row changes its displayed set of columns, or if its\n   * sticky input changes. May be called manually for cases where the cell content changes outside\n   * of these events.\n   */\n\n\n  updateStickyFooterRowStyles() {\n    const footerRows = this._getRenderedRows(this._footerRowOutlet);\n\n    const tableElement = this._elementRef.nativeElement; // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n    // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n    // required child `row`.\n\n    const tfoot = tableElement.querySelector('tfoot');\n\n    if (tfoot) {\n      tfoot.style.display = footerRows.length ? '' : 'none';\n    }\n\n    const stickyStates = this._footerRowDefs.map(def => def.sticky);\n\n    this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n\n    this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n\n    this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates); // Reset the dirty state of the sticky input change since it has been used.\n\n\n    this._footerRowDefs.forEach(def => def.resetStickyChanged());\n  }\n  /**\n   * Updates the column sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the left and right. Then sticky styles are added for the left and right according\n   * to the column definitions for each cell in each row. This is automatically called when\n   * the data source provides a new set of data or when a column definition changes its sticky\n   * input. May be called manually for cases where the cell content changes outside of these events.\n   */\n\n\n  updateStickyColumnStyles() {\n    const headerRows = this._getRenderedRows(this._headerRowOutlet);\n\n    const dataRows = this._getRenderedRows(this._rowOutlet);\n\n    const footerRows = this._getRenderedRows(this._footerRowOutlet); // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n    // In a table using a fixed layout, row content won't affect column width, so sticky styles\n    // don't need to be cleared unless either the sticky column config changes or one of the row\n    // defs change.\n\n\n    if (this._isNativeHtmlTable && !this._fixedLayout || this._stickyColumnStylesNeedReset) {\n      // Clear the left and right positioning from all columns in the table across all rows since\n      // sticky columns span across all table sections (header, data, footer)\n      this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n\n      this._stickyColumnStylesNeedReset = false;\n    } // Update the sticky styles for each header row depending on the def's sticky state\n\n\n    headerRows.forEach((headerRow, i) => {\n      this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n    }); // Update the sticky styles for each data row depending on its def's sticky state\n\n    this._rowDefs.forEach(rowDef => {\n      // Collect all the rows rendered with this row definition.\n      const rows = [];\n\n      for (let i = 0; i < dataRows.length; i++) {\n        if (this._renderRows[i].rowDef === rowDef) {\n          rows.push(dataRows[i]);\n        }\n      }\n\n      this._addStickyColumnStyles(rows, rowDef);\n    }); // Update the sticky styles for each footer row depending on the def's sticky state\n\n\n    footerRows.forEach((footerRow, i) => {\n      this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n    }); // Reset the dirty state of the sticky input change since it has been used.\n\n    Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n  }\n  /**\n   * Get the list of RenderRow objects to render according to the current list of data and defined\n   * row definitions. If the previous list already contained a particular pair, it should be reused\n   * so that the differ equates their references.\n   */\n\n\n  _getAllRenderRows() {\n    const renderRows = []; // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n    // new cache while unused ones can be picked up by garbage collection.\n\n    const prevCachedRenderRows = this._cachedRenderRowsMap;\n    this._cachedRenderRowsMap = new Map(); // For each data object, get the list of rows that should be rendered, represented by the\n    // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n\n    for (let i = 0; i < this._data.length; i++) {\n      let data = this._data[i];\n\n      const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n\n      if (!this._cachedRenderRowsMap.has(data)) {\n        this._cachedRenderRowsMap.set(data, new WeakMap());\n      }\n\n      for (let j = 0; j < renderRowsForData.length; j++) {\n        let renderRow = renderRowsForData[j];\n\n        const cache = this._cachedRenderRowsMap.get(renderRow.data);\n\n        if (cache.has(renderRow.rowDef)) {\n          cache.get(renderRow.rowDef).push(renderRow);\n        } else {\n          cache.set(renderRow.rowDef, [renderRow]);\n        }\n\n        renderRows.push(renderRow);\n      }\n    }\n\n    return renderRows;\n  }\n  /**\n   * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n   * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n   * `(T, CdkRowDef)` pair.\n   */\n\n\n  _getRenderRowsForData(data, dataIndex, cache) {\n    const rowDefs = this._getRowDefs(data, dataIndex);\n\n    return rowDefs.map(rowDef => {\n      const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n\n      if (cachedRenderRows.length) {\n        const dataRow = cachedRenderRows.shift();\n        dataRow.dataIndex = dataIndex;\n        return dataRow;\n      } else {\n        return {\n          data,\n          rowDef,\n          dataIndex\n        };\n      }\n    });\n  }\n  /** Update the map containing the content's column definitions. */\n\n\n  _cacheColumnDefs() {\n    this._columnDefsByName.clear();\n\n    const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n    columnDefs.forEach(columnDef => {\n      if (this._columnDefsByName.has(columnDef.name) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableDuplicateColumnNameError(columnDef.name);\n      }\n\n      this._columnDefsByName.set(columnDef.name, columnDef);\n    });\n  }\n  /** Update the list of all available row definitions that can be used. */\n\n\n  _cacheRowDefs() {\n    this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n    this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n    this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs); // After all row definitions are determined, find the row definition to be considered default.\n\n    const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n\n    if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMultipleDefaultRowDefsError();\n    }\n\n    this._defaultRowDef = defaultRowDefs[0];\n  }\n  /**\n   * Check if the header, data, or footer rows have changed what columns they want to display or\n   * whether the sticky states have changed for the header or footer. If there is a diff, then\n   * re-render that section.\n   */\n\n\n  _renderUpdatedColumns() {\n    const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff(); // Force re-render data rows if the list of column definitions have changed.\n\n\n    const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n\n    if (dataColumnsChanged) {\n      this._forceRenderDataRows();\n    } // Force re-render header/footer rows if the list of column definitions have changed.\n\n\n    const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n\n    if (headerColumnsChanged) {\n      this._forceRenderHeaderRows();\n    }\n\n    const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n\n    if (footerColumnsChanged) {\n      this._forceRenderFooterRows();\n    }\n\n    return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n  }\n  /**\n   * Switch to the provided data source by resetting the data and unsubscribing from the current\n   * render change subscription if one exists. If the data source is null, interpret this by\n   * clearing the row outlet. Otherwise start listening for new data.\n   */\n\n\n  _switchDataSource(dataSource) {\n    this._data = [];\n\n    if (isDataSource(this.dataSource)) {\n      this.dataSource.disconnect(this);\n    } // Stop listening for data from the previous data source.\n\n\n    if (this._renderChangeSubscription) {\n      this._renderChangeSubscription.unsubscribe();\n\n      this._renderChangeSubscription = null;\n    }\n\n    if (!dataSource) {\n      if (this._dataDiffer) {\n        this._dataDiffer.diff([]);\n      }\n\n      this._rowOutlet.viewContainer.clear();\n    }\n\n    this._dataSource = dataSource;\n  }\n  /** Set up a subscription for the data provided by the data source. */\n\n\n  _observeRenderChanges() {\n    // If no data source has been set, there is nothing to observe for changes.\n    if (!this.dataSource) {\n      return;\n    }\n\n    let dataStream;\n\n    if (isDataSource(this.dataSource)) {\n      dataStream = this.dataSource.connect(this);\n    } else if (isObservable(this.dataSource)) {\n      dataStream = this.dataSource;\n    } else if (Array.isArray(this.dataSource)) {\n      dataStream = of(this.dataSource);\n    }\n\n    if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableUnknownDataSourceError();\n    }\n\n    this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe(data => {\n      this._data = data || [];\n      this.renderRows();\n    });\n  }\n  /**\n   * Clears any existing content in the header row outlet and creates a new embedded view\n   * in the outlet using the header row definition.\n   */\n\n\n  _forceRenderHeaderRows() {\n    // Clear the header row outlet if any content exists.\n    if (this._headerRowOutlet.viewContainer.length > 0) {\n      this._headerRowOutlet.viewContainer.clear();\n    }\n\n    this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n\n    this.updateStickyHeaderRowStyles();\n  }\n  /**\n   * Clears any existing content in the footer row outlet and creates a new embedded view\n   * in the outlet using the footer row definition.\n   */\n\n\n  _forceRenderFooterRows() {\n    // Clear the footer row outlet if any content exists.\n    if (this._footerRowOutlet.viewContainer.length > 0) {\n      this._footerRowOutlet.viewContainer.clear();\n    }\n\n    this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n\n    this.updateStickyFooterRowStyles();\n  }\n  /** Adds the sticky column styles for the rows according to the columns' stick states. */\n\n\n  _addStickyColumnStyles(rows, rowDef) {\n    const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n      const columnDef = this._columnDefsByName.get(columnName);\n\n      if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableUnknownColumnError(columnName);\n      }\n\n      return columnDef;\n    });\n    const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n    const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n\n    this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n  }\n  /** Gets the list of rows that have been rendered in the row outlet. */\n\n\n  _getRenderedRows(rowOutlet) {\n    const renderedRows = [];\n\n    for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n      const viewRef = rowOutlet.viewContainer.get(i);\n      renderedRows.push(viewRef.rootNodes[0]);\n    }\n\n    return renderedRows;\n  }\n  /**\n   * Get the matching row definitions that should be used for this row data. If there is only\n   * one row definition, it is returned. Otherwise, find the row definitions that has a when\n   * predicate that returns true with the data. If none return true, return the default row\n   * definition.\n   */\n\n\n  _getRowDefs(data, dataIndex) {\n    if (this._rowDefs.length == 1) {\n      return [this._rowDefs[0]];\n    }\n\n    let rowDefs = [];\n\n    if (this.multiTemplateDataRows) {\n      rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n    } else {\n      let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n\n      if (rowDef) {\n        rowDefs.push(rowDef);\n      }\n    }\n\n    if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMissingMatchingRowDefError(data);\n    }\n\n    return rowDefs;\n  }\n\n  _getEmbeddedViewArgs(renderRow, index) {\n    const rowDef = renderRow.rowDef;\n    const context = {\n      $implicit: renderRow.data\n    };\n    return {\n      templateRef: rowDef.template,\n      context,\n      index\n    };\n  }\n  /**\n   * Creates a new row template in the outlet and fills it with the set of cell templates.\n   * Optionally takes a context to provide to the row and cells, as well as an optional index\n   * of where to place the new row template in the outlet.\n   */\n\n\n  _renderRow(outlet, rowDef, index, context = {}) {\n    // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n    const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n\n    this._renderCellTemplateForItem(rowDef, context);\n\n    return view;\n  }\n\n  _renderCellTemplateForItem(rowDef, context) {\n    for (let cellTemplate of this._getCellTemplates(rowDef)) {\n      if (CdkCellOutlet.mostRecentCellOutlet) {\n        CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n      }\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Updates the index-related context for each row to reflect any changes in the index of the rows,\n   * e.g. first/last/even/odd.\n   */\n\n\n  _updateRowIndexContext() {\n    const viewContainer = this._rowOutlet.viewContainer;\n\n    for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n      const viewRef = viewContainer.get(renderIndex);\n      const context = viewRef.context;\n      context.count = count;\n      context.first = renderIndex === 0;\n      context.last = renderIndex === count - 1;\n      context.even = renderIndex % 2 === 0;\n      context.odd = !context.even;\n\n      if (this.multiTemplateDataRows) {\n        context.dataIndex = this._renderRows[renderIndex].dataIndex;\n        context.renderIndex = renderIndex;\n      } else {\n        context.index = this._renderRows[renderIndex].dataIndex;\n      }\n    }\n  }\n  /** Gets the column definitions for the provided row def. */\n\n\n  _getCellTemplates(rowDef) {\n    if (!rowDef || !rowDef.columns) {\n      return [];\n    }\n\n    return Array.from(rowDef.columns, columnId => {\n      const column = this._columnDefsByName.get(columnId);\n\n      if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableUnknownColumnError(columnId);\n      }\n\n      return rowDef.extractCellTemplate(column);\n    });\n  }\n  /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n\n\n  _applyNativeTableSections() {\n    const documentFragment = this._document.createDocumentFragment();\n\n    const sections = [{\n      tag: 'thead',\n      outlets: [this._headerRowOutlet]\n    }, {\n      tag: 'tbody',\n      outlets: [this._rowOutlet, this._noDataRowOutlet]\n    }, {\n      tag: 'tfoot',\n      outlets: [this._footerRowOutlet]\n    }];\n\n    for (const section of sections) {\n      const element = this._document.createElement(section.tag);\n\n      element.setAttribute('role', 'rowgroup');\n\n      for (const outlet of section.outlets) {\n        element.appendChild(outlet.elementRef.nativeElement);\n      }\n\n      documentFragment.appendChild(element);\n    } // Use a DocumentFragment so we don't hit the DOM on each iteration.\n\n\n    this._elementRef.nativeElement.appendChild(documentFragment);\n  }\n  /**\n   * Forces a re-render of the data rows. Should be called in cases where there has been an input\n   * change that affects the evaluation of which rows should be rendered, e.g. toggling\n   * `multiTemplateDataRows` or adding/removing row definitions.\n   */\n\n\n  _forceRenderDataRows() {\n    this._dataDiffer.diff([]);\n\n    this._rowOutlet.viewContainer.clear();\n\n    this.renderRows();\n  }\n  /**\n   * Checks if there has been a change in sticky states since last check and applies the correct\n   * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n   * during a change detection and after the inputs are settled (after content check).\n   */\n\n\n  _checkStickyStates() {\n    const stickyCheckReducer = (acc, d) => {\n      return acc || d.hasStickyChanged();\n    }; // Note that the check needs to occur for every definition since it notifies the definition\n    // that it can reset its dirty state. Using another operator like `some` may short-circuit\n    // remaining definitions and leave them in an unchecked state.\n\n\n    if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n      this.updateStickyHeaderRowStyles();\n    }\n\n    if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n      this.updateStickyFooterRowStyles();\n    }\n\n    if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n      this._stickyColumnStylesNeedReset = true;\n      this.updateStickyColumnStyles();\n    }\n  }\n  /**\n   * Creates the sticky styler that will be used for sticky rows and columns. Listens\n   * for directionality changes and provides the latest direction to the styler. Re-applies column\n   * stickiness when directionality changes.\n   */\n\n\n  _setupStickyStyler() {\n    const direction = this._dir ? this._dir.value : 'ltr';\n    this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n    (this._dir ? this._dir.change : of()).pipe(takeUntil(this._onDestroy)).subscribe(value => {\n      this._stickyStyler.direction = value;\n      this.updateStickyColumnStyles();\n    });\n  }\n  /** Filters definitions that belong to this table from a QueryList. */\n\n\n  _getOwnDefs(items) {\n    return items.filter(item => !item._table || item._table === this);\n  }\n  /** Creates or removes the no data row, depending on whether any data is being shown. */\n\n\n  _updateNoDataRow() {\n    const noDataRow = this._customNoDataRow || this._noDataRow;\n\n    if (noDataRow) {\n      const shouldShow = this._rowOutlet.viewContainer.length === 0;\n\n      if (shouldShow !== this._isShowingNoDataRow) {\n        const container = this._noDataRowOutlet.viewContainer;\n        shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\n        this._isShowingNoDataRow = shouldShow;\n      }\n    }\n  }\n\n}\n\nCdkTable.ɵfac = function CdkTable_Factory(t) {\n  return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12));\n};\n\nCdkTable.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkTable,\n  selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]],\n  contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    }\n  },\n  viewQuery: function CdkTable_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(DataRowOutlet, 7);\n      ɵngcc0.ɵɵviewQuery(HeaderRowOutlet, 7);\n      ɵngcc0.ɵɵviewQuery(FooterRowOutlet, 7);\n      ɵngcc0.ɵɵviewQuery(NoDataRowOutlet, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\n    }\n  },\n  hostAttrs: [1, \"cdk-table\"],\n  hostVars: 2,\n  hostBindings: function CdkTable_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\n    }\n  },\n  inputs: {\n    trackBy: \"trackBy\",\n    dataSource: \"dataSource\",\n    multiTemplateDataRows: \"multiTemplateDataRows\",\n    fixedLayout: \"fixedLayout\"\n  },\n  exportAs: [\"cdkTable\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CDK_TABLE,\n    useExisting: CdkTable\n  }, {\n    provide: _VIEW_REPEATER_STRATEGY,\n    useClass: _DisposeViewRepeaterStrategy\n  }, {\n    provide: _COALESCED_STYLE_SCHEDULER,\n    useClass: _CoalescedStyleScheduler\n  }, // Prevent nested tables from seeing this table's StickyPositioningListener.\n  {\n    provide: STICKY_POSITIONING_LISTENER,\n    useValue: null\n  }])],\n  ngContentSelectors: _c1,\n  decls: 6,\n  vars: 0,\n  consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]],\n  template: function CdkTable_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵprojection(1, 1);\n      ɵngcc0.ɵɵelementContainer(2, 0)(3, 1)(4, 2)(5, 3);\n    }\n  },\n  dependencies: [DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, NoDataRowOutlet],\n  styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"],\n  encapsulation: 2\n});\n\nCdkTable.ctorParameters = () => [{\n  type: IterableDiffers\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ElementRef\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['role']\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: Platform\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [_VIEW_REPEATER_STRATEGY]\n  }]\n}, {\n  type: _CoalescedStyleScheduler,\n  decorators: [{\n    type: Inject,\n    args: [_COALESCED_STYLE_SCHEDULER]\n  }]\n}, {\n  type: ViewportRuler\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: SkipSelf\n  }, {\n    type: Inject,\n    args: [STICKY_POSITIONING_LISTENER]\n  }]\n}];\n\nCdkTable.propDecorators = {\n  trackBy: [{\n    type: Input\n  }],\n  dataSource: [{\n    type: Input\n  }],\n  multiTemplateDataRows: [{\n    type: Input\n  }],\n  fixedLayout: [{\n    type: Input\n  }],\n  _rowOutlet: [{\n    type: ViewChild,\n    args: [DataRowOutlet, {\n      static: true\n    }]\n  }],\n  _headerRowOutlet: [{\n    type: ViewChild,\n    args: [HeaderRowOutlet, {\n      static: true\n    }]\n  }],\n  _footerRowOutlet: [{\n    type: ViewChild,\n    args: [FooterRowOutlet, {\n      static: true\n    }]\n  }],\n  _noDataRowOutlet: [{\n    type: ViewChild,\n    args: [NoDataRowOutlet, {\n      static: true\n    }]\n  }],\n  _contentColumnDefs: [{\n    type: ContentChildren,\n    args: [CdkColumnDef, {\n      descendants: true\n    }]\n  }],\n  _contentRowDefs: [{\n    type: ContentChildren,\n    args: [CdkRowDef, {\n      descendants: true\n    }]\n  }],\n  _contentHeaderRowDefs: [{\n    type: ContentChildren,\n    args: [CdkHeaderRowDef, {\n      descendants: true\n    }]\n  }],\n  _contentFooterRowDefs: [{\n    type: ContentChildren,\n    args: [CdkFooterRowDef, {\n      descendants: true\n    }]\n  }],\n  _noDataRow: [{\n    type: ContentChild,\n    args: [CdkNoDataRow]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-table, table[cdk-table]',\n      exportAs: 'cdkTable',\n      template: CDK_TABLE_TEMPLATE,\n      host: {\n        'class': 'cdk-table',\n        '[class.cdk-table-fixed-layout]': 'fixedLayout'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      providers: [{\n        provide: CDK_TABLE,\n        useExisting: CdkTable\n      }, {\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _DisposeViewRepeaterStrategy\n      }, {\n        provide: _COALESCED_STYLE_SCHEDULER,\n        useClass: _CoalescedStyleScheduler\n      }, // Prevent nested tables from seeing this table's StickyPositioningListener.\n      {\n        provide: STICKY_POSITIONING_LISTENER,\n        useValue: null\n      }],\n      styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.IterableDiffers\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc2.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [_VIEW_REPEATER_STRATEGY]\n      }]\n    }, {\n      type: _CoalescedStyleScheduler,\n      decorators: [{\n        type: Inject,\n        args: [_COALESCED_STYLE_SCHEDULER]\n      }]\n    }, {\n      type: ɵngcc3.ViewportRuler\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [STICKY_POSITIONING_LISTENER]\n      }]\n    }];\n  }, {\n    trackBy: [{\n      type: Input\n    }],\n    dataSource: [{\n      type: Input\n    }],\n    multiTemplateDataRows: [{\n      type: Input\n    }],\n    fixedLayout: [{\n      type: Input\n    }],\n    _rowOutlet: [{\n      type: ViewChild,\n      args: [DataRowOutlet, {\n        static: true\n      }]\n    }],\n    _headerRowOutlet: [{\n      type: ViewChild,\n      args: [HeaderRowOutlet, {\n        static: true\n      }]\n    }],\n    _footerRowOutlet: [{\n      type: ViewChild,\n      args: [FooterRowOutlet, {\n        static: true\n      }]\n    }],\n    _noDataRowOutlet: [{\n      type: ViewChild,\n      args: [NoDataRowOutlet, {\n        static: true\n      }]\n    }],\n    _contentColumnDefs: [{\n      type: ContentChildren,\n      args: [CdkColumnDef, {\n        descendants: true\n      }]\n    }],\n    _contentRowDefs: [{\n      type: ContentChildren,\n      args: [CdkRowDef, {\n        descendants: true\n      }]\n    }],\n    _contentHeaderRowDefs: [{\n      type: ContentChildren,\n      args: [CdkHeaderRowDef, {\n        descendants: true\n      }]\n    }],\n    _contentFooterRowDefs: [{\n      type: ContentChildren,\n      args: [CdkFooterRowDef, {\n        descendants: true\n      }]\n    }],\n    _noDataRow: [{\n      type: ContentChild,\n      args: [CdkNoDataRow]\n    }]\n  });\n})();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\n\n\nfunction mergeArrayAndSet(array, set) {\n  return array.concat(Array.from(set));\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\n\n\nclass CdkTextColumn {\n  constructor( // `CdkTextColumn` is always requiring a table, but we just assert it manually\n  // for better error reporting.\n  // tslint:disable-next-line: lightweight-tokens\n  _table, _options) {\n    this._table = _table;\n    this._options = _options;\n    /** Alignment of the cell values. */\n\n    this.justify = 'start';\n    this._options = _options || {};\n  }\n  /** Column name that should be used to reference this column. */\n\n\n  get name() {\n    return this._name;\n  }\n\n  set name(name) {\n    this._name = name; // With Ivy, inputs can be initialized before static query results are\n    // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n\n    this._syncColumnDefName();\n  }\n\n  ngOnInit() {\n    this._syncColumnDefName();\n\n    if (this.headerText === undefined) {\n      this.headerText = this._createDefaultHeaderText();\n    }\n\n    if (!this.dataAccessor) {\n      this.dataAccessor = this._options.defaultDataAccessor || ((data, name) => data[name]);\n    }\n\n    if (this._table) {\n      // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n      // since the columnDef will not pick up its content by the time the table finishes checking\n      // its content and initializing the rows.\n      this.columnDef.cell = this.cell;\n      this.columnDef.headerCell = this.headerCell;\n\n      this._table.addColumnDef(this.columnDef);\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw getTableTextColumnMissingParentTableError();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._table) {\n      this._table.removeColumnDef(this.columnDef);\n    }\n  }\n  /**\n   * Creates a default header text. Use the options' header text transformation function if one\n   * has been provided. Otherwise simply capitalize the column name.\n   */\n\n\n  _createDefaultHeaderText() {\n    const name = this.name;\n\n    if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableTextColumnMissingNameError();\n    }\n\n    if (this._options && this._options.defaultHeaderTextTransform) {\n      return this._options.defaultHeaderTextTransform(name);\n    }\n\n    return name[0].toUpperCase() + name.slice(1);\n  }\n  /** Synchronizes the column definition name with the text column name. */\n\n\n  _syncColumnDefName() {\n    if (this.columnDef) {\n      this.columnDef.name = this.name;\n    }\n  }\n\n}\n\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) {\n  return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8));\n};\n\nCdkTextColumn.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkTextColumn,\n  selectors: [[\"cdk-text-column\"]],\n  viewQuery: function CdkTextColumn_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(CdkColumnDef, 7);\n      ɵngcc0.ɵɵviewQuery(CdkCellDef, 7);\n      ɵngcc0.ɵɵviewQuery(CdkHeaderCellDef, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    }\n  },\n  inputs: {\n    justify: \"justify\",\n    name: \"name\",\n    headerText: \"headerText\",\n    dataAccessor: \"dataAccessor\"\n  },\n  decls: 3,\n  vars: 0,\n  consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]],\n  template: function CdkTextColumn_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n      ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n      ɵngcc0.ɵɵelementContainerEnd();\n    }\n  },\n  dependencies: [CdkCellDef, CdkHeaderCellDef, CdkColumnDef, CdkCell, CdkHeaderCell],\n  encapsulation: 2\n});\n\nCdkTextColumn.ctorParameters = () => [{\n  type: CdkTable,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [TEXT_COLUMN_OPTIONS]\n  }]\n}];\n\nCdkTextColumn.propDecorators = {\n  name: [{\n    type: Input\n  }],\n  headerText: [{\n    type: Input\n  }],\n  dataAccessor: [{\n    type: Input\n  }],\n  justify: [{\n    type: Input\n  }],\n  columnDef: [{\n    type: ViewChild,\n    args: [CdkColumnDef, {\n      static: true\n    }]\n  }],\n  cell: [{\n    type: ViewChild,\n    args: [CdkCellDef, {\n      static: true\n    }]\n  }],\n  headerCell: [{\n    type: ViewChild,\n    args: [CdkHeaderCellDef, {\n      static: true\n    }]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-text-column',\n      template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      // Change detection is intentionally not set to OnPush. This component's template will be provided\n      // to the table to be inserted into its view. This is problematic when change detection runs since\n      // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n      // mean's the template in the table's view will not have the updated value (and in fact will cause\n      // an ExpressionChangedAfterItHasBeenCheckedError).\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default\n    }]\n  }], function () {\n    return [{\n      type: CdkTable,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TEXT_COLUMN_OPTIONS]\n      }]\n    }];\n  }, {\n    justify: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    headerText: [{\n      type: Input\n    }],\n    dataAccessor: [{\n      type: Input\n    }],\n    columnDef: [{\n      type: ViewChild,\n      args: [CdkColumnDef, {\n        static: true\n      }]\n    }],\n    cell: [{\n      type: ViewChild,\n      args: [CdkCellDef, {\n        static: true\n      }]\n    }],\n    headerCell: [{\n      type: ViewChild,\n      args: [CdkHeaderCellDef, {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst EXPORTED_DECLARATIONS = [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet];\n\nclass CdkTableModule {}\n\nCdkTableModule.ɵfac = function CdkTableModule_Factory(t) {\n  return new (t || CdkTableModule)();\n};\n\nCdkTableModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: CdkTableModule\n});\nCdkTableModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [ScrollingModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n    type: NgModule,\n    args: [{\n      exports: EXPORTED_DECLARATIONS,\n      declarations: EXPORTED_DECLARATIONS,\n      imports: [ScrollingModule]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, {\n    declarations: function () {\n      return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet];\n    },\n    imports: function () {\n      return [ScrollingModule];\n    },\n    exports: function () {\n      return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };","map":{"version":3,"names":["Directionality","coerceBooleanProperty","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","isDataSource","_DisposeViewRepeaterStrategy","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵstyleProp","justify","ɵɵadvance","ɵɵtextInterpolate1","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","DataSource","Platform","ViewportRuler","ScrollingModule","DOCUMENT","InjectionToken","Directive","TemplateRef","Inject","Optional","Input","ContentChild","ElementRef","Injectable","NgZone","IterableDiffers","ViewContainerRef","Component","ChangeDetectionStrategy","ViewEncapsulation","EmbeddedViewRef","ChangeDetectorRef","Attribute","SkipSelf","ViewChild","ContentChildren","NgModule","Subject","from","BehaviorSubject","isObservable","of","takeUntil","take","mixinHasStickyInput","base","constructor","args","_sticky","_hasStickyChanged","sticky","v","prevValue","hasStickyChanged","resetStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","ɵfac","CdkCellDef_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","ctorParameters","ngDevMode","ɵsetClassMetadata","selector","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","_setNameInput","stickyEnd","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","value","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","cell","first","headerCell","footerCell","inputs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","undefined","decorators","propDecorators","providers","BaseCdkCell","columnDef","elementRef","classList","nativeElement","className","add","CdkHeaderCell","CdkHeaderCell_Factory","hostAttrs","host","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","schedule","task","_createScheduleIfNeeded","push","scheduleEnd","ngOnDestroy","next","complete","_getScheduleObservable","pipe","subscribe","length","isStable","Promise","resolve","onStable","_CoalescedStyleScheduler_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","ngOnChanges","changes","_columnsDiffer","columns","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","ɵɵNgOnChangesFeature","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","ɵɵdefineComponent","decls","vars","consts","CdkHeaderRow_Template","ɵɵelementContainer","dependencies","encapsulation","changeDetection","Default","None","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","templateRef","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","nodeType","ELEMENT_NODE","i","children","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","Array","height","getBoundingClientRect","borderedRowIndex","_a","_b","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","CdkRecycleRows","CdkRecycleRows_Factory","useClass","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_viewRepeater","_viewportRuler","_stickyPositioningListener","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","viewChange","Number","MAX_VALUE","setAttribute","nodeName","trackBy","_trackByFn","fn","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","clear","_noDataRowOutlet","_headerRowOutlet","_footerRowOutlet","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","rowView","get","addColumnDef","removeColumnDef","delete","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","def","_stickyStyler","forEach","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","_defaultRowDef","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","isArray","_renderRow","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","view","createEmbeddedView","cellTemplate","_getCellTemplates","markForCheck","renderIndex","count","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","CdkTable_Factory","ɵɵinjectAttribute","CdkTable_ContentQueries","viewQuery","CdkTable_Query","ɵɵviewQuery","hostVars","hostBindings","CdkTable_HostBindings","ɵɵclassProp","exportAs","useValue","ngContentSelectors","CdkTable_Template","ɵɵprojectionDef","ɵɵprojection","styles","String","static","descendants","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Users/Henry/Desktop/New folder/Atomas2/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js"],"sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, SkipSelf, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() { return this._sticky; }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() { return this._name; }\n    set name(name) { this._setNameInput(name); }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n        // with destructuring.\n        const classList = elementRef.nativeElement.classList;\n        for (const className of columnDef._columnCssClassName) {\n            classList.add(className);\n        }\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable ?\n            from(Promise.resolve(undefined)) :\n            this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) { return new (t || _CoalescedStyleScheduler)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n_CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: _CoalescedStyleScheduler, factory: _CoalescedStyleScheduler.ɵfac });\n_CoalescedStyleScheduler.ctorParameters = () => [\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nBaseRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nBaseRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, dependencies: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, dependencies: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, dependencies: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) { return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkNoDataRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkNoDataRow, selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]] });\nCdkNoDataRow.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkNoDataRow]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\n            stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => stickyStartStates[index] ? width : null)\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null)\n                            .reverse()\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable ?\n                Array.from(row.children) : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            var _a, _b;\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({ sizes: stickyCellHeights, offsets: stickyOffsets, elements: elementsToStick });\n            }\n            else {\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({ sizes: stickyCellHeights, offsets: stickyOffsets, elements: elementsToStick });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n}\nCdkRecycleRows.ɵfac = function CdkRecycleRows_Factory(t) { return new (t || CdkRecycleRows)(); };\nCdkRecycleRows.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkRecycleRows, selectors: [[\"cdk-table\", \"recycleRows\", \"\"], [\"table\", \"cdk-table\", \"\", \"recycleRows\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n        ])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRecycleRows, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                providers: [\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) { return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNoDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NoDataRowOutlet, selectors: [[\"\", \"noDataRowOutlet\", \"\"]] });\nNoDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[noDataRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._noDataRowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), (record) => record.item.data, (change) => {\n            if (change.operation === 1 /* INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        this.updateStickyColumnStyles();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout)\n            || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (noDataRow) {\n            const shouldShow = this._rowOutlet.viewContainer.length === 0;\n            if (shouldShow !== this._isShowingNoDataRow) {\n                const container = this._noDataRowOutlet.viewContainer;\n                shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\n                this._isShowingNoDataRow = shouldShow;\n            }\n        }\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12)); };\nCdkTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DataRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(HeaderRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(FooterRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(NoDataRowOutlet, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], hostVars: 2, hostBindings: function CdkTable_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\n    } }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CDK_TABLE, useExisting: CdkTable },\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ])], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 0)(3, 1)(4, 2)(5, 3);\n    } }, dependencies: [DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, NoDataRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\n    { type: _CoalescedStyleScheduler, decorators: [{ type: Inject, args: [_COALESCED_STYLE_SCHEDULER,] }] },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [STICKY_POSITIONING_LISTENER,] }] }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    fixedLayout: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _noDataRowOutlet: [{ type: ViewChild, args: [NoDataRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }],\n    _noDataRow: [{ type: ContentChild, args: [CdkNoDataRow,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                    'class': 'cdk-table',\n                    '[class.cdk-table-fixed-layout]': 'fixedLayout'\n                }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                    { provide: CDK_TABLE, useExisting: CdkTable },\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                    // Prevent nested tables from seeing this table's StickyPositioningListener.\n                    { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"] }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_VIEW_REPEATER_STRATEGY]\n            }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                type: Inject,\n                args: [_COALESCED_STYLE_SCHEDULER]\n            }] }, { type: ɵngcc3.ViewportRuler }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [STICKY_POSITIONING_LISTENER]\n            }] }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], fixedLayout: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _noDataRowOutlet: [{\n            type: ViewChild,\n            args: [NoDataRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }], _noDataRow: [{\n            type: ContentChild,\n            args: [CdkNoDataRow]\n        }] }); })();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkColumnDef, 7);\n        ɵngcc0.ɵɵviewQuery(CdkCellDef, 7);\n        ɵngcc0.ɵɵviewQuery(CdkHeaderCellDef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, dependencies: [CdkCellDef, CdkHeaderCellDef, CdkColumnDef, CdkCell, CdkHeaderCell], encapsulation: 2 });\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵfac = function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); };\nCdkTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [ScrollingModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS,\n                imports: [ScrollingModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet]; }, imports: function () { return [ScrollingModule]; }, exports: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}